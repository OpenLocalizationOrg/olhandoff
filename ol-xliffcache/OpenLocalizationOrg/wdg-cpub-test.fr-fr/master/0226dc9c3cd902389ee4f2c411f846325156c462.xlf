<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0226dc9c3cd902389ee4f2c411f846325156c462</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\date-and-time.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Date and time controls let you view and set the date and time.</source>
          <target state="new">Date and time controls let you view and set the date and time.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This article provides design guidelines and helps you pick the right control.</source>
          <target state="new">This article provides design guidelines and helps you pick the right control.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Guidelines for date and time controls</source>
          <target state="new">Guidelines for date and time controls</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Calendar, date, and time controls</source>
          <target state="new">Calendar, date, and time controls</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Date and time controls give you standard, localized ways to let a user view and set date and time values in your app.</source>
          <target state="new">Date and time controls give you standard, localized ways to let a user view and set date and time values in your app.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article provides design guidelines and helps you pick the right control.</source>
          <target state="new">This article provides design guidelines and helps you pick the right control.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>CalendarView class</source>
          <target state="new">CalendarView class</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CalendarDatePicker class</source>
          <target state="new">CalendarDatePicker class</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DatePicker class</source>
          <target state="new">DatePicker class</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>TimePicker class</source>
          <target state="new">TimePicker class</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Which date or time control should you use?</source>
          <target state="new">Which date or time control should you use?</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>There are four date and time controls to choose from; the control you use depends on your scenario.</source>
          <target state="new">There are four date and time controls to choose from; the control you use depends on your scenario.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use this info to pick the right control to use in your app.</source>
          <target state="new">Use this info to pick the right control to use in your app.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Calendar view</source>
          <target state="new">Calendar view</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example of calendar view</source>
          <target state="new">Example of calendar view</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use to pick a single date or a range of dates from an always visible calendar.</source>
          <target state="new">Use to pick a single date or a range of dates from an always visible calendar.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Calendar date picker</source>
          <target state="new">Calendar date picker</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example of calendar date picker</source>
          <target state="new">Example of calendar date picker</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use to pick a single date from a contextual calendar.</source>
          <target state="new">Use to pick a single date from a contextual calendar.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Date picker</source>
          <target state="new">Date picker</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example of date picker</source>
          <target state="new">Example of date picker</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use to pick a single known date when contextual info isn't important.</source>
          <target state="new">Use to pick a single known date when contextual info isn't important.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Time picker</source>
          <target state="new">Time picker</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example of time picker</source>
          <target state="new">Example of time picker</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use to pick a single time value.</source>
          <target state="new">Use to pick a single time value.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Calendar view</source>
          <target state="new">Calendar view</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CalendarView<ept id="p1">**</ept> lets a user view and interact with a calendar that they can navigate by month, year, or decade.</source>
          <target state="new"><bpt id="p1">**</bpt>CalendarView<ept id="p1">**</ept> lets a user view and interact with a calendar that they can navigate by month, year, or decade.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A user can select a single date or a range of dates.</source>
          <target state="new">A user can select a single date or a range of dates.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It doesn't have a picker surface and the calendar is always visible.</source>
          <target state="new">It doesn't have a picker surface and the calendar is always visible.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The calendar view is made up of 3 separate views: the month view, year view, and decade view.</source>
          <target state="new">The calendar view is made up of 3 separate views: the month view, year view, and decade view.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default, it starts with the month view open, but you can specify any view as the startup view.</source>
          <target state="new">By default, it starts with the month view open, but you can specify any view as the startup view.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example of calendar date picker</source>
          <target state="new">Example of calendar date picker</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you need to let a user select multiple dates, you must use a <bpt id="p1">**</bpt>CalendarView<ept id="p1">**</ept>.</source>
          <target state="new">If you need to let a user select multiple dates, you must use a <bpt id="p1">**</bpt>CalendarView<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you need to let a user pick only a single date and don’t need a calendar to be always visible, consider using a <bpt id="p1">**</bpt>CalendarDatePicker<ept id="p1">**</ept> or <bpt id="p2">**</bpt>DatePicker<ept id="p2">**</ept> control.</source>
          <target state="new">If you need to let a user pick only a single date and don’t need a calendar to be always visible, consider using a <bpt id="p1">**</bpt>CalendarDatePicker<ept id="p1">**</ept> or <bpt id="p2">**</bpt>DatePicker<ept id="p2">**</ept> control.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Calendar date picker</source>
          <target state="new">Calendar date picker</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CalendarDatePicker<ept id="p1">**</ept> is a drop down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important.</source>
          <target state="new"><bpt id="p1">**</bpt>CalendarDatePicker<ept id="p1">**</ept> is a drop down control that’s optimized for picking a single date from a calendar view where contextual information like the day of the week or fullness of the calendar is important.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can modify the calendar to provide additional context or to limit available dates.</source>
          <target state="new">You can modify the calendar to provide additional context or to limit available dates.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The entry point displays placeholder text if a date has not been set; otherwise, it displays the chosen date.</source>
          <target state="new">The entry point displays placeholder text if a date has not been set; otherwise, it displays the chosen date.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When the user selects the entry point, a calendar view expands for the user to make a date selection.</source>
          <target state="new">When the user selects the entry point, a calendar view expands for the user to make a date selection.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The calendar view overlays other UI; it doesn't push other UI out of the way.</source>
          <target state="new">The calendar view overlays other UI; it doesn't push other UI out of the way.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example of calendar date picker</source>
          <target state="new">Example of calendar date picker</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use a calendar date picker for things like choosing an appointment or departure date.</source>
          <target state="new">Use a calendar date picker for things like choosing an appointment or departure date.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Date picker</source>
          <target state="new">Date picker</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DatePicker<ept id="p1">**</ept> control provides a standardized way to choose a specific date.</source>
          <target state="new">The <bpt id="p1">**</bpt>DatePicker<ept id="p1">**</ept> control provides a standardized way to choose a specific date.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The entry point displays the chosen date, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.</source>
          <target state="new">The entry point displays the chosen date, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The date picker overlays other UI; it doesn't push other UI out of the way.</source>
          <target state="new">The date picker overlays other UI; it doesn't push other UI out of the way.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Example of the date picker expanding</source>
          <target state="new">Example of the date picker expanding</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Use a date picker to let a user pick a known date, such as a date of birth, where the context of the calendar is not important.</source>
          <target state="new">Use a date picker to let a user pick a known date, such as a date of birth, where the context of the calendar is not important.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Time picker</source>
          <target state="new">Time picker</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>TimePicker<ept id="p1">**</ept> is used to select a single time value for things like appointments or a departure time.</source>
          <target state="new">The <bpt id="p1">**</bpt>TimePicker<ept id="p1">**</ept> is used to select a single time value for things like appointments or a departure time.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It's a static display that is set by the user or in code, but it doesn't update to display the current time.</source>
          <target state="new">It's a static display that is set by the user or in code, but it doesn't update to display the current time.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The entry point displays the chosen time, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.</source>
          <target state="new">The entry point displays the chosen time, and when the user selects the entry point, a picker surface expands vertically from the middle for the user to make a selection.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The time picker overlays other UI; it doesn't push other UI out of the way.</source>
          <target state="new">The time picker overlays other UI; it doesn't push other UI out of the way.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example of the time picker expanding</source>
          <target state="new">Example of the time picker expanding</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Use a time picker to let a user pick a single time value.</source>
          <target state="new">Use a time picker to let a user pick a single time value.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Create a date or time control</source>
          <target state="new">Create a date or time control</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See these articles for info and examples specific to each date and time control.</source>
          <target state="new">See these articles for info and examples specific to each date and time control.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Calendar view</source>
          <target state="new">Calendar view</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Calendar date picker</source>
          <target state="new">Calendar date picker</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Date picker</source>
          <target state="new">Date picker</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Time Picker</source>
          <target state="new">Time Picker</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Globalization</source>
          <target state="new">Globalization</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The XAML date controls support each of the calendar systems supported by Windows.</source>
          <target state="new">The XAML date controls support each of the calendar systems supported by Windows.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>These calendars are specified in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.CalendarIdentifiers<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendaridentifiers.aspx)</ept> class.</source>
          <target state="new">These calendars are specified in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.CalendarIdentifiers<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendaridentifiers.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Each control uses the correct calendar for your app's default language, or you can set the <bpt id="p1">**</bpt>CalendarIdentifier<ept id="p1">**</ept> property to use a specific calendar system.</source>
          <target state="new">Each control uses the correct calendar for your app's default language, or you can set the <bpt id="p1">**</bpt>CalendarIdentifier<ept id="p1">**</ept> property to use a specific calendar system.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The time picker control supports each of the clock systems specified in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.ClockIdentifiers<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.clockidentifiers.aspx)</ept> class.</source>
          <target state="new">The time picker control supports each of the clock systems specified in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.ClockIdentifiers<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.clockidentifiers.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ClockIdentifier<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.timepicker.clockidentifier.aspx)</ept> property to use either a 12-hour clock or 24-hour clock.</source>
          <target state="new">You can set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ClockIdentifier<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.timepicker.clockidentifier.aspx)</ept> property to use either a 12-hour clock or 24-hour clock.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The type of the property is String, but you must use values that correspond to the static string properties of the ClockIdentifiers class.</source>
          <target state="new">The type of the property is String, but you must use values that correspond to the static string properties of the ClockIdentifiers class.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>These are: TwelveHour (the string "12HourClock")and TwentyFourHour (the string "24HourClock").</source>
          <target state="new">These are: TwelveHour (the string "12HourClock")and TwentyFourHour (the string "24HourClock").</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>"12HourClock" is the default value.</source>
          <target state="new">"12HourClock" is the default value.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>DateTime and Calendar values</source>
          <target state="new">DateTime and Calendar values</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The date objects used in the XAML date and time controls have a different representation depending on your programming language.</source>
          <target state="new">The date objects used in the XAML date and time controls have a different representation depending on your programming language.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>C# and Visual Basic use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>System.DateTimeOffset<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept> structure that is part of .NET.</source>
          <target state="new">C# and Visual Basic use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>System.DateTimeOffset<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept> structure that is part of .NET.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>C++/CX uses the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows::Foundation::DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/br205770.aspx)</ept> structure.</source>
          <target state="new">C++/CX uses the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows::Foundation::DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/br205770.aspx)</ept> structure.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A related concept is the Calendar class, which influences how dates are interpreted in context.</source>
          <target state="new">A related concept is the Calendar class, which influences how dates are interpreted in context.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>All Windows Runtime apps can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.Calendar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendar.aspx)</ept> class.</source>
          <target state="new">All Windows Runtime apps can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.Calendar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.globalization.calendar.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>C# and Visual Basic apps can alternatively use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>System.Globalization.Calendar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.globalization.calendar.aspx)</ept> class, which has very similar functionality.</source>
          <target state="new">C# and Visual Basic apps can alternatively use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>System.Globalization.Calendar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.globalization.calendar.aspx)</ept> class, which has very similar functionality.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>(Windows Runtime apps can use the base .NET Calendar class but not the specific implementations; for example, GregorianCalendar.)</source>
          <target state="new">(Windows Runtime apps can use the base .NET Calendar class but not the specific implementations; for example, GregorianCalendar.)</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>.NET also supports a type named <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetime.aspx)</ept>, which is implicitly convertible to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DateTimeOffset<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept>.</source>
          <target state="new">.NET also supports a type named <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetime.aspx)</ept>, which is implicitly convertible to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DateTimeOffset<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>So you might see a "DateTime" type being used in .NET code that's used to set values that are really DateTimeOffset.</source>
          <target state="new">So you might see a "DateTime" type being used in .NET code that's used to set values that are really DateTimeOffset.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more info on the difference between DateTime and DateTimeOffset, see Remarks in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTimeOffset<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept> class.</source>
          <target state="new">For more info on the difference between DateTime and DateTimeOffset, see Remarks in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTimeOffset<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.datetimeoffset.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>Properties that take date objects can't be set as a XAML attribute string, because the Windows Runtime XAML parser doesn't have a conversion logic for converting strings to dates as DateTime/DateTimeOffset objects.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>Properties that take date objects can't be set as a XAML attribute string, because the Windows Runtime XAML parser doesn't have a conversion logic for converting strings to dates as DateTime/DateTimeOffset objects.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You typically set these values in code.</source>
          <target state="new">You typically set these values in code.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Another possible technique is to define a date that's available as a data object or in the data context, then set the property as a XAML attribute that references a <bpt id="p1">[</bpt>\{Binding\} markup extension<ept id="p1">](../xaml-platform/binding-markup-extension.md)</ept> expression that can access the date as data.</source>
          <target state="new">Another possible technique is to define a date that's available as a data object or in the data context, then set the property as a XAML attribute that references a <bpt id="p1">[</bpt>\{Binding\} markup extension<ept id="p1">](../xaml-platform/binding-markup-extension.md)</ept> expression that can access the date as data.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
          <target state="new">\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.\]</source>
          <target state="new">For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.\]</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For developers (XAML)</source>
          <target state="new">For developers (XAML)</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CalendarView class</source>
          <target state="new">CalendarView class</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CalendarDatePicker class</source>
          <target state="new">CalendarDatePicker class</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>DatePicker class</source>
          <target state="new">DatePicker class</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>TimePicker class</source>
          <target state="new">TimePicker class</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>