<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88cba2a34686ccb77ae78d1f67b043d4460e686c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\networking\background-transfers.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use the background transfer API to copy files reliably over the network.</source>
          <target state="new">Use the background transfer API to copy files reliably over the network.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Background transfers</source>
          <target state="new">Background transfers</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Background transfers</source>
          <target state="new">Background transfers</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows.Networking.backgroundTransfer</source>
          <target state="new">Windows.Networking.backgroundTransfer</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows.Foundation.Uri</source>
          <target state="new">Windows.Foundation.Uri</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows.Networking.Sockets</source>
          <target state="new">Windows.Networking.Sockets</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use the background transfer API to copy files reliably over the network.</source>
          <target state="new">Use the background transfer API to copy files reliably over the network.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The background transfer API provides advanced upload and download features that run in the background during app suspension and persist beyond app termination.</source>
          <target state="new">The background transfer API provides advanced upload and download features that run in the background during app suspension and persist beyond app termination.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The API monitors network status and automatically suspends and resumes transfers when connectivity is lost, and transfers are also Data Sense-aware and Battery Sense-aware, meaning that download activity adjusts based on your current connectivity and device battery status.</source>
          <target state="new">The API monitors network status and automatically suspends and resumes transfers when connectivity is lost, and transfers are also Data Sense-aware and Battery Sense-aware, meaning that download activity adjusts based on your current connectivity and device battery status.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The API is ideal for uploading and downloading large files using HTTP(S).</source>
          <target state="new">The API is ideal for uploading and downloading large files using HTTP(S).</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>FTP is also supported, but only for downloads.</source>
          <target state="new">FTP is also supported, but only for downloads.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Background Transfer runs separately from the calling app and is primarily designed for long-term transfer operations for resources like video, music, and large images.</source>
          <target state="new">Background Transfer runs separately from the calling app and is primarily designed for long-term transfer operations for resources like video, music, and large images.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For these scenarios, using Background Transfer is essential because downloads continue to progress even when the app is suspended.</source>
          <target state="new">For these scenarios, using Background Transfer is essential because downloads continue to progress even when the app is suspended.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you are downloading small resources that are likely to complete quickly, you should use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HttpClient<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn298639)</ept> APIs instead of Background Transfer.</source>
          <target state="new">If you are downloading small resources that are likely to complete quickly, you should use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HttpClient<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn298639)</ept> APIs instead of Background Transfer.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Using Windows.Networking.BackgroundTransfer</source>
          <target state="new">Using Windows.Networking.BackgroundTransfer</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>How does the Background Transfer feature work?</source>
          <target state="new">How does the Background Transfer feature work?</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When an app uses Background Transfer to initiate a transfer, the request is configured and initialized using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundDownloader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207126)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BackgroundUploader<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207140)</ept> class objects.</source>
          <target state="new">When an app uses Background Transfer to initiate a transfer, the request is configured and initialized using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundDownloader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207126)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BackgroundUploader<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207140)</ept> class objects.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each transfer operation is handled individually by the system and separate from the calling app.</source>
          <target state="new">Each transfer operation is handled individually by the system and separate from the calling app.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Progress information is available if you want to give status to the user in your app's UI, and your app can pause, resume, cancel, or even read from the data while the transfer is occurring.</source>
          <target state="new">Progress information is available if you want to give status to the user in your app's UI, and your app can pause, resume, cancel, or even read from the data while the transfer is occurring.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The way transfers are handled by the system promotes smart power usage and prevents problems that can arise when a connected app encounters events such as app suspension, termination, or sudden network status changes.</source>
          <target state="new">The way transfers are handled by the system promotes smart power usage and prevents problems that can arise when a connected app encounters events such as app suspension, termination, or sudden network status changes.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Performing authenticated file requests with Background Transfer</source>
          <target state="new">Performing authenticated file requests with Background Transfer</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Background Transfer provides methods that support basic server and proxy credentials, cookies, and the use of custom HTTP headers (via <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetRequestHeader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207146)</ept>) for each transfer operation.</source>
          <target state="new">Background Transfer provides methods that support basic server and proxy credentials, cookies, and the use of custom HTTP headers (via <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetRequestHeader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207146)</ept>) for each transfer operation.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>How does this feature adapt to network status changes or unexpected shutdowns?</source>
          <target state="new">How does this feature adapt to network status changes or unexpected shutdowns?</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The Background Transfer feature maintains a consistent experience for each transfer operation when network status changes occur, by intelligently leveraging connectivity and carrier data-plan status information provided by the <bpt id="p1">[</bpt>Connectivity<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh452990)</ept> feature.</source>
          <target state="new">The Background Transfer feature maintains a consistent experience for each transfer operation when network status changes occur, by intelligently leveraging connectivity and carrier data-plan status information provided by the <bpt id="p1">[</bpt>Connectivity<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh452990)</ept> feature.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To define behavior for different network scenarios, an app sets a cost policy for each operation using values defined by <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207138)</ept>.</source>
          <target state="new">To define behavior for different network scenarios, an app sets a cost policy for each operation using values defined by <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207138)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, the cost policy defined for an operation can indicate that the operation should be paused automatically when the device is using a metered network.</source>
          <target state="new">For example, the cost policy defined for an operation can indicate that the operation should be paused automatically when the device is using a metered network.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The transfer is then automatically resumed (or restarted) when a connection to an "unrestricted" network has been established.</source>
          <target state="new">The transfer is then automatically resumed (or restarted) when a connection to an "unrestricted" network has been established.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information on how networks are defined by cost, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NetworkCostType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207292)</ept>.</source>
          <target state="new">For more information on how networks are defined by cost, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NetworkCostType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207292)</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>While the Background Transfer feature has its own mechanisms for handling network status changes, there are other general connectivity considerations for network-connected apps.</source>
          <target state="new">While the Background Transfer feature has its own mechanisms for handling network status changes, there are other general connectivity considerations for network-connected apps.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Read <bpt id="p1">[</bpt>Leveraging available network connection information<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh452983)</ept> for additional info.</source>
          <target state="new">Read <bpt id="p1">[</bpt>Leveraging available network connection information<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh452983)</ept> for additional info.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For apps running on mobile devices, there are features that allow the user to monitor and restrict the amount of data that is transferred based on the type of connection, roaming status, and the user's data plan.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For apps running on mobile devices, there are features that allow the user to monitor and restrict the amount of data that is transferred based on the type of connection, roaming status, and the user's data plan.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Because of this, background transfers may be paused on the phone even when the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207138)</ept> indicates that the transfer should proceed.</source>
          <target state="new">Because of this, background transfers may be paused on the phone even when the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207138)</ept> indicates that the transfer should proceed.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following table indicates when background transfers are allowed on the phone for each <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207138)</ept> value, given the current state of the phone.</source>
          <target state="new">The following table indicates when background transfers are allowed on the phone for each <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207138)</ept> value, given the current state of the phone.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ConnectionCost<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207244)</ept> class to determine the phone's current state.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ConnectionCost<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207244)</ept> class to determine the phone's current state.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Device State</source>
          <target state="new">Device State</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>UnrestrictedOnly</source>
          <target state="new">UnrestrictedOnly</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="new">Default</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Always</source>
          <target state="new">Always</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Connected to WiFi</source>
          <target state="new">Connected to WiFi</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="new">Allow</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="new">Allow</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="new">Allow</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Metered Connection, not roaming, under data limit, on track to stay under limit</source>
          <target state="new">Metered Connection, not roaming, under data limit, on track to stay under limit</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="new">Deny</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="new">Allow</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="new">Allow</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Metered Connection, not roaming, under data limit, on track to exceed limit</source>
          <target state="new">Metered Connection, not roaming, under data limit, on track to exceed limit</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="new">Deny</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="new">Deny</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="new">Allow</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Metered Connection, roaming, under data limit</source>
          <target state="new">Metered Connection, roaming, under data limit</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="new">Deny</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="new">Deny</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="new">Allow</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Metered Connection, over data limit.</source>
          <target state="new">Metered Connection, over data limit.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This state only occurs when the user enables "Restrict background data in the Data Sense UI.</source>
          <target state="new">This state only occurs when the user enables "Restrict background data in the Data Sense UI.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="new">Deny</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="new">Deny</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="new">Deny</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Uploading files</source>
          <target state="new">Uploading files</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When using Background Transfer an upload exists as an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept> that exposes a number of control methods that are used to restart or cancel the operation.</source>
          <target state="new">When using Background Transfer an upload exists as an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept> that exposes a number of control methods that are used to restart or cancel the operation.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>App events (e.g. suspension or termination) and connectivity changes are handled automatically by the system per <bpt id="p1">**</bpt>UploadOperation<ept id="p1">**</ept>; uploads will continue during app suspension periods or pause and persist beyond app termination.</source>
          <target state="new">App events (e.g. suspension or termination) and connectivity changes are handled automatically by the system per <bpt id="p1">**</bpt>UploadOperation<ept id="p1">**</ept>; uploads will continue during app suspension periods or pause and persist beyond app termination.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Additionally, setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701018)</ept> property will indicate whether or not your app will start uploads while a metered network is being used for Internet connectivity.</source>
          <target state="new">Additionally, setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701018)</ept> property will indicate whether or not your app will start uploads while a metered network is being used for Internet connectivity.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following examples will walk you through the creation and initialization of a basic upload and how to enumerate and reintroduce operations persisted from a previous app session.</source>
          <target state="new">The following examples will walk you through the creation and initialization of a basic upload and how to enumerate and reintroduce operations persisted from a previous app session.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Uploading a single file</source>
          <target state="new">Uploading a single file</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The creation of an upload begins with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundUploader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207140)</ept>.</source>
          <target state="new">The creation of an upload begins with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundUploader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207140)</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This class is used to provide the methods that enable your app to configure the upload before creating the resultant <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept>.</source>
          <target state="new">This class is used to provide the methods that enable your app to configure the upload before creating the resultant <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following example shows how to do this with the required <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> objects.</source>
          <target state="new">The following example shows how to do this with the required <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> objects.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Identify the file and destination for the upload</source>
          <target state="new">Identify the file and destination for the upload</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Before we can begin with the creation of an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept>, we first need to identify the URI of the location to upload to, and the file that will be uploaded.</source>
          <target state="new">Before we can begin with the creation of an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept>, we first need to identify the URI of the location to upload to, and the file that will be uploaded.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the following example, the <bpt id="p1">*</bpt>uriString<ept id="p1">*</ept> value is populated using a string from UI input, and the <bpt id="p2">*</bpt>file<ept id="p2">*</ept> value using the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object returned by a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>PickSingleFileAsync<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> operation.</source>
          <target state="new">In the following example, the <bpt id="p1">*</bpt>uriString<ept id="p1">*</ept> value is populated using a string from UI input, and the <bpt id="p2">*</bpt>file<ept id="p2">*</ept> value using the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object returned by a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>PickSingleFileAsync<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> operation.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>uploadFile<ept id="p1">]</ept><bpt id="p2">(./code/backgroundtransfer/upload_quickstart/js/main.js#Snippetupload_quickstart_B "</bpt>Identify the file and destination for the upload<ept id="p2">")</ept></source>
          <target state="new"><bpt id="p1">[</bpt>uploadFile<ept id="p1">]</ept><bpt id="p2">(./code/backgroundtransfer/upload_quickstart/js/main.js#Snippetupload_quickstart_B "</bpt>Identify the file and destination for the upload<ept id="p2">")</ept></target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Create and initialize the upload operation</source>
          <target state="new">Create and initialize the upload operation</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In the previous step the <bpt id="p1">*</bpt>uriString<ept id="p1">*</ept> and <bpt id="p2">*</bpt>file<ept id="p2">*</ept> values are passed to an instance of our next example, UploadOp, where they are used to configure and start the new upload operation.</source>
          <target state="new">In the previous step the <bpt id="p1">*</bpt>uriString<ept id="p1">*</ept> and <bpt id="p2">*</bpt>file<ept id="p2">*</ept> values are passed to an instance of our next example, UploadOp, where they are used to configure and start the new upload operation.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>First, <bpt id="p1">*</bpt>uriString<ept id="p1">*</ept> is parsed to create the required <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Uri<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> object.</source>
          <target state="new">First, <bpt id="p1">*</bpt>uriString<ept id="p1">*</ept> is parsed to create the required <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Uri<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> object.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Next, the properties of the provided <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> (<bpt id="p3">*</bpt>file<ept id="p3">*</ept>) are used by <bpt id="p4">[</bpt><bpt id="p5">**</bpt>BackgroundUploader<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br207140)</ept> to populate the request header and set the <bpt id="p6">*</bpt>SourceFile<ept id="p6">*</ept> property with the <bpt id="p7">**</bpt>StorageFile<ept id="p7">**</ept> object.</source>
          <target state="new">Next, the properties of the provided <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> (<bpt id="p3">*</bpt>file<ept id="p3">*</ept>) are used by <bpt id="p4">[</bpt><bpt id="p5">**</bpt>BackgroundUploader<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br207140)</ept> to populate the request header and set the <bpt id="p6">*</bpt>SourceFile<ept id="p6">*</ept> property with the <bpt id="p7">**</bpt>StorageFile<ept id="p7">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetRequestHeader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207146)</ept> method is then called to insert the file name, provided as a string, and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile.Name<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227220)</ept> property.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetRequestHeader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207146)</ept> method is then called to insert the file name, provided as a string, and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile.Name<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227220)</ept> property.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Finally, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundUploader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207140)</ept> creates the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>UploadOperation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept> (<bpt id="p5">*</bpt>upload<ept id="p5">*</ept>).</source>
          <target state="new">Finally, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundUploader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207140)</ept> creates the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>UploadOperation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept> (<bpt id="p5">*</bpt>upload<ept id="p5">*</ept>).</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>uploadFile<ept id="p1">]</ept><bpt id="p2">(./code/backgroundtransfer/upload_quickstart/js/main.js#Snippetupload_quickstart_A "</bpt>Create and initialize the upload operation<ept id="p2">")</ept></source>
          <target state="new"><bpt id="p1">[</bpt>uploadFile<ept id="p1">]</ept><bpt id="p2">(./code/backgroundtransfer/upload_quickstart/js/main.js#Snippetupload_quickstart_A "</bpt>Create and initialize the upload operation<ept id="p2">")</ept></target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Note the asynchronous method calls defined using JavaScript promises.</source>
          <target state="new">Note the asynchronous method calls defined using JavaScript promises.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Looking at a line from the last example:</source>
          <target state="new">Looking at a line from the last example:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Uploading multiple files</source>
          <target state="new">Uploading multiple files</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Identify the files and destination for the upload</source>
          <target state="new">Identify the files and destination for the upload</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Create objects for the provided parameters</source>
          <target state="new">Create objects for the provided parameters</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Create and initialize the multi-part upload operation</source>
          <target state="new">Create and initialize the multi-part upload operation</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Restarting interrupted upload operations</source>
          <target state="new">Restarting interrupted upload operations</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>On completion or cancellation of an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept>, any associated system resources are released.</source>
          <target state="new">On completion or cancellation of an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept>, any associated system resources are released.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>However, if your app is terminated before either of these things can occur, any active operations are paused and the resources associated with each remain occupied.</source>
          <target state="new">However, if your app is terminated before either of these things can occur, any active operations are paused and the resources associated with each remain occupied.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If these operations are not enumerated and re-introduced to the next app session, they will not be completed and will continue to occupy device resources.</source>
          <target state="new">If these operations are not enumerated and re-introduced to the next app session, they will not be completed and will continue to occupy device resources.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Before defining the function that enumerates persisted operations, we need to create an array that will contain the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept> objects that it will return:</source>
          <target state="new">Before defining the function that enumerates persisted operations, we need to create an array that will contain the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UploadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept> objects that it will return:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>uploadFile<ept id="p1">]</ept><bpt id="p2">(./code/backgroundtransfer/upload_quickstart/js/main.js#Snippetupload_quickstart_C "</bpt>Restart interrupted upload operation<ept id="p2">")</ept></source>
          <target state="new"><bpt id="p1">[</bpt>uploadFile<ept id="p1">]</ept><bpt id="p2">(./code/backgroundtransfer/upload_quickstart/js/main.js#Snippetupload_quickstart_C "</bpt>Restart interrupted upload operation<ept id="p2">")</ept></target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Next we define the function that enumerates persisted operations and stores them in our array.</source>
          <target state="new">Next we define the function that enumerates persisted operations and stores them in our array.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">**</bpt>load<ept id="p1">**</ept> method called to re-assign callbacks to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>UploadOperation<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept>, should it persist through app termination, is in the UploadOp class we define later in this section.</source>
          <target state="new">Note that the <bpt id="p1">**</bpt>load<ept id="p1">**</ept> method called to re-assign callbacks to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>UploadOperation<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br207224)</ept>, should it persist through app termination, is in the UploadOp class we define later in this section.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>uploadFile<ept id="p1">]</ept><bpt id="p2">(./code/backgroundtransfer/upload_quickstart/js/main.js#Snippetupload_quickstart_D "</bpt>Enumerate persisted operations<ept id="p2">")</ept></source>
          <target state="new"><bpt id="p1">[</bpt>uploadFile<ept id="p1">]</ept><bpt id="p2">(./code/backgroundtransfer/upload_quickstart/js/main.js#Snippetupload_quickstart_D "</bpt>Enumerate persisted operations<ept id="p2">")</ept></target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Downloading files</source>
          <target state="new">Downloading files</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When using Background Transfer, each download exists as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept> that exposes a number of control methods used to pause, resume, restart, and cancel the operation.</source>
          <target state="new">When using Background Transfer, each download exists as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept> that exposes a number of control methods used to pause, resume, restart, and cancel the operation.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>App events (e.g. suspension or termination) and connectivity changes are handled automatically by the system per <bpt id="p1">**</bpt>DownloadOperation<ept id="p1">**</ept>; downloads will continue during app suspension periods or pause and persist beyond app termination.</source>
          <target state="new">App events (e.g. suspension or termination) and connectivity changes are handled automatically by the system per <bpt id="p1">**</bpt>DownloadOperation<ept id="p1">**</ept>; downloads will continue during app suspension periods or pause and persist beyond app termination.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For mobile network scenarios, setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701018)</ept> property will indicate whether or not your app will begin or continue downloads while a metered network is being used for Internet connectivity.</source>
          <target state="new">For mobile network scenarios, setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CostPolicy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701018)</ept> property will indicate whether or not your app will begin or continue downloads while a metered network is being used for Internet connectivity.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If you are downloading small resources that are likely to complete quickly, you should use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HttpClient<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn298639)</ept> APIs instead of Background Transfer.</source>
          <target state="new">If you are downloading small resources that are likely to complete quickly, you should use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HttpClient<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn298639)</ept> APIs instead of Background Transfer.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The following examples will walk you through the creation and initialization of a basic download, and how to enumerate and reintroduce operations persisted from a previous app session.</source>
          <target state="new">The following examples will walk you through the creation and initialization of a basic download, and how to enumerate and reintroduce operations persisted from a previous app session.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Configure and start a Background Transfer file download</source>
          <target state="new">Configure and start a Background Transfer file download</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how strings representing a URI and a file name can be used to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> object and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> that will contain the requested file.</source>
          <target state="new">The following example demonstrates how strings representing a URI and a file name can be used to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> object and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> that will contain the requested file.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>In this example, the new file is automatically placed in a pre-defined location.</source>
          <target state="new">In this example, the new file is automatically placed in a pre-defined location.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Alternatively, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileSavePicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207871)</ept> can be used allow users to indicate where to save the file on the device.</source>
          <target state="new">Alternatively, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileSavePicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207871)</ept> can be used allow users to indicate where to save the file on the device.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">**</bpt>load<ept id="p1">**</ept> method called to re-assign callbacks to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DownloadOperation<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept>, should it persist through app termination, is in the DownloadOp class defined later in this section.</source>
          <target state="new">Note that the <bpt id="p1">**</bpt>load<ept id="p1">**</ept> method called to re-assign callbacks to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DownloadOperation<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept>, should it persist through app termination, is in the DownloadOp class defined later in this section.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>uploadFile</source>
          <target state="new">uploadFile</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Note the asynchronous method calls defined using JavaScript promises.</source>
          <target state="new">Note the asynchronous method calls defined using JavaScript promises.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Looking at line 17 from the previous code example:</source>
          <target state="new">Looking at line 17 from the previous code example:</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The async method call is followed by a then statement which indicates methods, defined by the app, that are called when a result from the async method call is returned.</source>
          <target state="new">The async method call is followed by a then statement which indicates methods, defined by the app, that are called when a result from the async method call is returned.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For more information on this programming pattern, see <bpt id="p1">[</bpt>Asynchronous programming in JavaScript using promises<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/hh464930.aspx)</ept>.</source>
          <target state="new">For more information on this programming pattern, see <bpt id="p1">[</bpt>Asynchronous programming in JavaScript using promises<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/hh464930.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Adding additional operation control methods</source>
          <target state="new">Adding additional operation control methods</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The level of control can be increased by implementing additional <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept> methods.</source>
          <target state="new">The level of control can be increased by implementing additional <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept> methods.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example, adding the following code to the example above will introduce the ability to cancel the download.</source>
          <target state="new">For example, adding the following code to the example above will introduce the ability to cancel the download.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>uploadFile</source>
          <target state="new">uploadFile</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Enumerating persisted operations at start-up</source>
          <target state="new">Enumerating persisted operations at start-up</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>On completion or cancellation of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept>, any associated system resources are released.</source>
          <target state="new">On completion or cancellation of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept>, any associated system resources are released.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>However, if your app is terminated before either of these events occur, downloads will pause and persist in the background.</source>
          <target state="new">However, if your app is terminated before either of these events occur, downloads will pause and persist in the background.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate how to re-introduce persisted downloads into a new app session.</source>
          <target state="new">The following examples demonstrate how to re-introduce persisted downloads into a new app session.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Before defining the function that enumerates persisted operations, we need to create an array that will contain the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept> objects that it will return:</source>
          <target state="new">Before defining the function that enumerates persisted operations, we need to create an array that will contain the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept> objects that it will return:</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>uploadFile</source>
          <target state="new">uploadFile</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Next we define the function that enumerates persisted operations and stores them in our array.</source>
          <target state="new">Next we define the function that enumerates persisted operations and stores them in our array.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">**</bpt>load<ept id="p1">**</ept> method called to re-assign callbacks for a persisted <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DownloadOperation<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept> is in the DownloadOp example we define later in this section.</source>
          <target state="new">Note that the <bpt id="p1">**</bpt>load<ept id="p1">**</ept> method called to re-assign callbacks for a persisted <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DownloadOperation<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br207154)</ept> is in the DownloadOp example we define later in this section.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>uploadFile</source>
          <target state="new">uploadFile</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You can now use the populated list to restart pending operations.</source>
          <target state="new">You can now use the populated list to restart pending operations.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Post-processing</source>
          <target state="new">Post-processing</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A new feature in Windows 10 is the ability to run application code at the completion of a background transfer even when the app is not running.</source>
          <target state="new">A new feature in Windows 10 is the ability to run application code at the completion of a background transfer even when the app is not running.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For example, your app might want to update a list of available movies after a movie has finished downloading, rather than have your app scan for new movies every time it starts.</source>
          <target state="new">For example, your app might want to update a list of available movies after a movie has finished downloading, rather than have your app scan for new movies every time it starts.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Or your app might want to handle a failed file transfer by trying again using a different server or port.</source>
          <target state="new">Or your app might want to handle a failed file transfer by trying again using a different server or port.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Post-processing is invoked for both successful and failed transfers, so you can use it to implement custom error-handling and retry logic.</source>
          <target state="new">Post-processing is invoked for both successful and failed transfers, so you can use it to implement custom error-handling and retry logic.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Postprocessing uses the existing background task infrastructure.</source>
          <target state="new">Postprocessing uses the existing background task infrastructure.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You create a background task and associate it with your transfers before you start the transfers.</source>
          <target state="new">You create a background task and associate it with your transfers before you start the transfers.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The transfers are then executed in the background, and when they are complete, your background task is called to perform post-processing.</source>
          <target state="new">The transfers are then executed in the background, and when they are complete, your background task is called to perform post-processing.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Post-processing uses a new class, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCompletionGroup<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn804209)</ept>.</source>
          <target state="new">Post-processing uses a new class, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCompletionGroup<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn804209)</ept>.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This class is similar to the existing <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferGroup<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn279030)</ept> in that it allows you to group background transfers together, but <bpt id="p3">**</bpt>BackgroundTransferCompletionGroup<ept id="p3">**</ept> adds the ability to designate a background task to be run when the transfer is complete.</source>
          <target state="new">This class is similar to the existing <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferGroup<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn279030)</ept> in that it allows you to group background transfers together, but <bpt id="p3">**</bpt>BackgroundTransferCompletionGroup<ept id="p3">**</ept> adds the ability to designate a background task to be run when the transfer is complete.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You initiate a background transfer with post-processing as follows.</source>
          <target state="new">You initiate a background transfer with post-processing as follows.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCompletionGroup<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn804209)</ept> object.</source>
          <target state="new">Create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferCompletionGroup<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn804209)</ept> object.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Then, create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskBuilder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224768)</ept> object.</source>
          <target state="new">Then, create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskBuilder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224768)</ept> object.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Trigger<ept id="p1">**</ept> property of the builder object to the completion group object, and the <bpt id="p2">**</bpt>TaskEngtyPoint<ept id="p2">**</ept> property of the builder to the entry point of the background task that should execute on transfer completion.</source>
          <target state="new">Set the <bpt id="p1">**</bpt>Trigger<ept id="p1">**</ept> property of the builder object to the completion group object, and the <bpt id="p2">**</bpt>TaskEngtyPoint<ept id="p2">**</ept> property of the builder to the entry point of the background task that should execute on transfer completion.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Finally, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskBuilder.Register<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224772)</ept> method to register your background task.</source>
          <target state="new">Finally, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskBuilder.Register<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224772)</ept> method to register your background task.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Note that many completion groups can share one background task entry point, but you can have only one completion group per background task registration.</source>
          <target state="new">Note that many completion groups can share one background task entry point, but you can have only one completion group per background task registration.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Next you associate background transfers with the completion group.</source>
          <target state="new">Next you associate background transfers with the completion group.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Once all transfers are created, enable the completion group.</source>
          <target state="new">Once all transfers are created, enable the completion group.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The code in the background task extracts the list of operations from the trigger details, and your code can then inspect the details for each operation and perform appropriate post-processing for each operation.</source>
          <target state="new">The code in the background task extracts the list of operations from the trigger details, and your code can then inspect the details for each operation and perform appropriate post-processing for each operation.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The post-processing task is a regular background task.</source>
          <target state="new">The post-processing task is a regular background task.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>It is part of the pool of all background tasks, and it is subject to the same resource management policy as all background tasks.</source>
          <target state="new">It is part of the pool of all background tasks, and it is subject to the same resource management policy as all background tasks.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Also, note that post-processing does not replace foreground completion handlers.</source>
          <target state="new">Also, note that post-processing does not replace foreground completion handlers.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If your app defines a foreground completion handler, and your app is running when the file transfer completes, then both your foreground completion handler and your background completion handler will be called.</source>
          <target state="new">If your app defines a foreground completion handler, and your app is running when the file transfer completes, then both your foreground completion handler and your background completion handler will be called.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The order in which foreground and background tasks are called is not guaranteed.</source>
          <target state="new">The order in which foreground and background tasks are called is not guaranteed.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If you define both, you should ensure that the two tasks will work properly and not interfere with each other if they are running concurrently.</source>
          <target state="new">If you define both, you should ensure that the two tasks will work properly and not interfere with each other if they are running concurrently.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Request timeouts</source>
          <target state="new">Request timeouts</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>There are two primary connection timeout scenarios to take into consideration:</source>
          <target state="new">There are two primary connection timeout scenarios to take into consideration:</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>When establishing a new connection for a transfer, the connection request is aborted if it is not established within five minutes.</source>
          <target state="new">When establishing a new connection for a transfer, the connection request is aborted if it is not established within five minutes.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>After a connection has been established, an HTTP request message that has not received a response within two minutes is aborted.</source>
          <target state="new">After a connection has been established, an HTTP request message that has not received a response within two minutes is aborted.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  In either scenario, assuming there is Internet connectivity, Background Transfer will retry a request up to three times automatically.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  In either scenario, assuming there is Internet connectivity, Background Transfer will retry a request up to three times automatically.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>In the event Internet connectivity is not detected, additional requests will wait until it is.</source>
          <target state="new">In the event Internet connectivity is not detected, additional requests will wait until it is.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Debugging guidance</source>
          <target state="new">Debugging guidance</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Stopping a debugging session in Microsoft Visual Studio is comparable to closing your app; PUT uploads are paused and POST uploads are terminated.</source>
          <target state="new">Stopping a debugging session in Microsoft Visual Studio is comparable to closing your app; PUT uploads are paused and POST uploads are terminated.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Even while debugging, your app should enumerate and then restart or cancel any persisted uploads.</source>
          <target state="new">Even while debugging, your app should enumerate and then restart or cancel any persisted uploads.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For example, you can have your app cancel enumerated persisted upload operations at app startup if there is no interest in previous operations for that debug session.</source>
          <target state="new">For example, you can have your app cancel enumerated persisted upload operations at app startup if there is no interest in previous operations for that debug session.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>While enumerating downloads/uploads on app startup during a debug session, you can have your app cancel them if there is no interest in previous operations for that debug session.</source>
          <target state="new">While enumerating downloads/uploads on app startup during a debug session, you can have your app cancel them if there is no interest in previous operations for that debug session.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Note that if there are Visual Studio project updates, like changes to the app manifest, and the app is uninstalled and re-deployed, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetCurrentUploadsAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701149)</ept> cannot enumerate operations created using the previous app deployment.</source>
          <target state="new">Note that if there are Visual Studio project updates, like changes to the app manifest, and the app is uninstalled and re-deployed, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetCurrentUploadsAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701149)</ept> cannot enumerate operations created using the previous app deployment.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>When using Background Transfer during development, you may get into a situation where the internal caches of active and completed transfer operations can get out of sync.</source>
          <target state="new">When using Background Transfer during development, you may get into a situation where the internal caches of active and completed transfer operations can get out of sync.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This may result in the inability to start new transfer operations or interact with existing operations and <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferGroup<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn279030)</ept> objects.</source>
          <target state="new">This may result in the inability to start new transfer operations or interact with existing operations and <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferGroup<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn279030)</ept> objects.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>In some cases, attempting to interact with existing operations may trigger a crash.</source>
          <target state="new">In some cases, attempting to interact with existing operations may trigger a crash.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This result can occur if the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TransferBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn279033)</ept> property is set to <bpt id="p3">**</bpt>Parallel<ept id="p3">**</ept>.</source>
          <target state="new">This result can occur if the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TransferBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn279033)</ept> property is set to <bpt id="p3">**</bpt>Parallel<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This issue occurs only in certain scenarios during development and is not applicable to end users of your app.</source>
          <target state="new">This issue occurs only in certain scenarios during development and is not applicable to end users of your app.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Four scenarios using Visual Studio can cause this issue.</source>
          <target state="new">Four scenarios using Visual Studio can cause this issue.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>You create a new project with the same app name as an existing project, but a different language (from C++ to C#, for example).</source>
          <target state="new">You create a new project with the same app name as an existing project, but a different language (from C++ to C#, for example).</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>You change the target architecture (from x86 to x64, for example) in an existing project.</source>
          <target state="new">You change the target architecture (from x86 to x64, for example) in an existing project.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>You change the culture (from neutral to en-US, for example) in an existing project.</source>
          <target state="new">You change the culture (from neutral to en-US, for example) in an existing project.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>You add or remove a capability in the package manifest (adding <bpt id="p1">**</bpt>Enterprise Authentication<ept id="p1">**</ept>, for example) in an existing project.</source>
          <target state="new">You add or remove a capability in the package manifest (adding <bpt id="p1">**</bpt>Enterprise Authentication<ept id="p1">**</ept>, for example) in an existing project.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Regular app servicing, including manifest updates which add or remove capabilities, do not trigger this issue on end user deployments of your app.</source>
          <target state="new">Regular app servicing, including manifest updates which add or remove capabilities, do not trigger this issue on end user deployments of your app.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>To work around this issue, completely uninstall all versions of the app and re-deploy with the new language, architecture, culture, or capability.</source>
          <target state="new">To work around this issue, completely uninstall all versions of the app and re-deploy with the new language, architecture, culture, or capability.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This can be done via the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> screen or using PowerShell and the <bpt id="p2">**</bpt>Remove-AppxPackage<ept id="p2">**</ept> cmdlet.</source>
          <target state="new">This can be done via the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> screen or using PowerShell and the <bpt id="p2">**</bpt>Remove-AppxPackage<ept id="p2">**</ept> cmdlet.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Exceptions in Windows.Networking.BackgroundTransfer</source>
          <target state="new">Exceptions in Windows.Networking.BackgroundTransfer</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An exception is thrown when an invalid string for a the Uniform Resource Identifier (URI) is passed to the constructor for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Foundation.Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> object.</source>
          <target state="new">An exception is thrown when an invalid string for a the Uniform Resource Identifier (URI) is passed to the constructor for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Foundation.Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> object.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET:  <ept id="p1">**</ept>The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Windows.Foundation.Uri<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> type appears as <bpt id="p4">[</bpt><bpt id="p5">**</bpt>System.Uri<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/system.uri.aspx)</ept> in C# and VB.</source>
          <target state="new"><bpt id="p1">**</bpt>.NET:  <ept id="p1">**</ept>The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Windows.Foundation.Uri<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept> type appears as <bpt id="p4">[</bpt><bpt id="p5">**</bpt>System.Uri<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/system.uri.aspx)</ept> in C# and VB.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>In C# and Visual Basic, this error can be avoided by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>System.Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.uri.aspx)</ept> class in the .NET 4.5 and one of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>System.Uri.TryCreate<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/system.uri.trycreate.aspx)</ept> methods to test the string received from the app user before the URI is constructed.</source>
          <target state="new">In C# and Visual Basic, this error can be avoided by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>System.Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.uri.aspx)</ept> class in the .NET 4.5 and one of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>System.Uri.TryCreate<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/system.uri.trycreate.aspx)</ept> methods to test the string received from the app user before the URI is constructed.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>In C++, there is no method to try and parse a string to a URI.</source>
          <target state="new">In C++, there is no method to try and parse a string to a URI.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If an app gets input from the user for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Foundation.Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept>, the constructor should be in a try/catch block.</source>
          <target state="new">If an app gets input from the user for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Foundation.Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225998)</ept>, the constructor should be in a try/catch block.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>If an exception is thrown, the app can notify the user and request a new hostname.</source>
          <target state="new">If an exception is thrown, the app can notify the user and request a new hostname.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.backgroundTransfer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207242)</ept> namespace has convenient helper methods and uses enumerations in the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Networking.Sockets<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226960)</ept> namespace for handling errors.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.backgroundTransfer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207242)</ept> namespace has convenient helper methods and uses enumerations in the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Networking.Sockets<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226960)</ept> namespace for handling errors.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This can be useful for handling specific network exceptions differently in your app.</source>
          <target state="new">This can be useful for handling specific network exceptions differently in your app.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>An error encountered on an asynchronous method in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.backgroundTransfer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207242)</ept> namespace is returned as an <bpt id="p3">**</bpt>HRESULT<ept id="p3">**</ept> value.</source>
          <target state="new">An error encountered on an asynchronous method in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.backgroundTransfer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207242)</ept> namespace is returned as an <bpt id="p3">**</bpt>HRESULT<ept id="p3">**</ept> value.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferError.GetStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701093)</ept> method is used to convert a network error from a background transfer operation to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh747818)</ept> enumeration value.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTransferError.GetStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701093)</ept> method is used to convert a network error from a background transfer operation to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh747818)</ept> enumeration value.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Most of the <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values correspond to an error returned by the native HTTP or FTP client operation.</source>
          <target state="new">Most of the <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values correspond to an error returned by the native HTTP or FTP client operation.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An app can filter on specific <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values to modify app behavior depending on the cause of the exception.</source>
          <target state="new">An app can filter on specific <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values to modify app behavior depending on the cause of the exception.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>For parameter validation errors, an app can also use the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> from the exception to learn more detailed information on the error that caused the exception.</source>
          <target state="new">For parameter validation errors, an app can also use the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> from the exception to learn more detailed information on the error that caused the exception.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Possible <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> values are listed in the <bpt id="p2">*</bpt>Winerror.h<ept id="p2">*</ept> header file.</source>
          <target state="new">Possible <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> values are listed in the <bpt id="p2">*</bpt>Winerror.h<ept id="p2">*</ept> header file.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>For most parameter validation errors, the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> returned is <bpt id="p2">**</bpt>E\_INVALIDARG<ept id="p2">**</ept>.</source>
          <target state="new">For most parameter validation errors, the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> returned is <bpt id="p2">**</bpt>E\_INVALIDARG<ept id="p2">**</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>