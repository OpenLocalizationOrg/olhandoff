<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8e2abc71b1a6613d4c8aa39fdb54add746dc389</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\threading-async\best-practices-for-using-the-thread-pool.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Best practices for using the thread pool</source>
          <target state="new">Best practices for using the thread pool</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This topic describes best practices for working with the thread pool.</source>
          <target state="new">This topic describes best practices for working with the thread pool.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Best practices for using the thread pool</source>
          <target state="new">Best practices for using the thread pool</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic describes best practices for working with the thread pool.</source>
          <target state="new">This topic describes best practices for working with the thread pool.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Do's</source>
          <target state="new">Do's</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use the thread pool to do parallel work in your app.</source>
          <target state="new">Use the thread pool to do parallel work in your app.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use work items to accomplish extended tasks without blocking the UI thread.</source>
          <target state="new">Use work items to accomplish extended tasks without blocking the UI thread.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create work items that are short-lived and independent.</source>
          <target state="new">Create work items that are short-lived and independent.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Work items run asynchronously and they can be submitted to the pool in any order from the queue.</source>
          <target state="new">Work items run asynchronously and they can be submitted to the pool in any order from the queue.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Dispatch updates to the UI thread with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.UI.Core.CoreDispatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208211)</ept>.</source>
          <target state="new">Dispatch updates to the UI thread with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.UI.Core.CoreDispatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208211)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ThreadPoolTimer.CreateTimer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh967921)</ept> instead of the <bpt id="p3">**</bpt>Sleep<ept id="p3">**</ept> function.</source>
          <target state="new">Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ThreadPoolTimer.CreateTimer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh967921)</ept> instead of the <bpt id="p3">**</bpt>Sleep<ept id="p3">**</ept> function.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use the thread pool instead of creating your own thread management system.</source>
          <target state="new">Use the thread pool instead of creating your own thread management system.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The thread pool runs at the OS level with advanced capability and is optimized to dynamically scale according to device resources and activity within the process and across the system.</source>
          <target state="new">The thread pool runs at the OS level with advanced capability and is optimized to dynamically scale according to device resources and activity within the process and across the system.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In C++, ensure that work item delegates use the agile threading model (C++ delegates are agile by default).</source>
          <target state="new">In C++, ensure that work item delegates use the agile threading model (C++ delegates are agile by default).</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use pre-allocated work items when you can't tolerate a resource allocation failure at time of use.</source>
          <target state="new">Use pre-allocated work items when you can't tolerate a resource allocation failure at time of use.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Dont's</source>
          <target state="new">Dont's</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Don't create periodic timers with a <bpt id="p1">*</bpt>period<ept id="p1">*</ept> value of <ph id="ph1">&amp;lt;</ph>1 millisecond (including 0).</source>
          <target state="new">Don't create periodic timers with a <bpt id="p1">*</bpt>period<ept id="p1">*</ept> value of <ph id="ph1">&amp;lt;</ph>1 millisecond (including 0).</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This will cause the work item to behave as a single-shot timer.</source>
          <target state="new">This will cause the work item to behave as a single-shot timer.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Don't submit periodic work items that take longer to complete than the amount of time you specified in the <bpt id="p1">*</bpt>period<ept id="p1">*</ept> parameter.</source>
          <target state="new">Don't submit periodic work items that take longer to complete than the amount of time you specified in the <bpt id="p1">*</bpt>period<ept id="p1">*</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Don't try to send UI updates (other than toasts and notifications) from a work item dispatched from a background task.</source>
          <target state="new">Don't try to send UI updates (other than toasts and notifications) from a work item dispatched from a background task.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Instead, use background task progress and completion handlers - for example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTaskInstance.Progress<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR224800)</ept>.</source>
          <target state="new">Instead, use background task progress and completion handlers - for example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTaskInstance.Progress<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR224800)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you use work-item handlers that use the <bpt id="p1">**</bpt>async<ept id="p1">**</ept> keyword, be aware that the thread pool work item may be set to the complete state before all of the code in the handler has executed.</source>
          <target state="new">When you use work-item handlers that use the <bpt id="p1">**</bpt>async<ept id="p1">**</ept> keyword, be aware that the thread pool work item may be set to the complete state before all of the code in the handler has executed.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Code following an <bpt id="p1">**</bpt>await<ept id="p1">**</ept> keyword within the handler may execute after the work item has been set to the complete state.</source>
          <target state="new">Code following an <bpt id="p1">**</bpt>await<ept id="p1">**</ept> keyword within the handler may execute after the work item has been set to the complete state.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Don't try to run a pre-allocated work item more than once without reinitializing it.</source>
          <target state="new">Don't try to run a pre-allocated work item more than once without reinitializing it.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create a periodic work item</source>
          <target state="new">Create a periodic work item</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Create a periodic work item</source>
          <target state="new">Create a periodic work item</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Submit a work item to the thread pool</source>
          <target state="new">Submit a work item to the thread pool</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use a timer to submit a work item</source>
          <target state="new">Use a timer to submit a work item</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>