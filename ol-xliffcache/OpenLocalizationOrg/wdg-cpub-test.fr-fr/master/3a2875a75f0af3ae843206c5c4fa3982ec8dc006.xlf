<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a2875a75f0af3ae843206c5c4fa3982ec8dc006</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\monetize\enable-consumable-in-app-product-purchases.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Offer consumable in-app products&amp;\#8212;items that can be purchased, used, and purchased again&amp;\#8212;through the Store commerce platform to provide your customers with a purchase experience that is both robust and reliable.</source>
          <target state="new">Offer consumable in-app products&amp;\#8212;items that can be purchased, used, and purchased again&amp;\#8212;through the Store commerce platform to provide your customers with a purchase experience that is both robust and reliable.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Enable consumable in-app product purchases</source>
          <target state="new">Enable consumable in-app product purchases</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enable consumable in-app product purchases</source>
          <target state="new">Enable consumable in-app product purchases</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Offer consumable in-app products—items that can be purchased, used, and purchased again—through the Store commerce platform to provide your customers with a purchase experience that is both robust and reliable.</source>
          <target state="new">Offer consumable in-app products—items that can be purchased, used, and purchased again—through the Store commerce platform to provide your customers with a purchase experience that is both robust and reliable.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This is especially useful for things like in-game currency (gold, coins, etc.) that can be purchased and then used to purchase specific power-ups.</source>
          <target state="new">This is especially useful for things like in-game currency (gold, coins, etc.) that can be purchased and then used to purchase specific power-ups.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This topic covers the purchase and fulfillment reporting of consumable in-app products.</source>
          <target state="new">This topic covers the purchase and fulfillment reporting of consumable in-app products.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you are unfamiliar with in-app products, please review <bpt id="p1">[</bpt>Enable in-app product purchases<ept id="p1">](enable-in-app-product-purchases.md)</ept> to learn about license information, and how to properly list in-app products in the Store.</source>
          <target state="new">If you are unfamiliar with in-app products, please review <bpt id="p1">[</bpt>Enable in-app product purchases<ept id="p1">](enable-in-app-product-purchases.md)</ept> to learn about license information, and how to properly list in-app products in the Store.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you code and test new in-app products for the first time, you must use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CurrentAppSimulator<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh779766)</ept> object instead of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CurrentApp<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh779765)</ept> object.</source>
          <target state="new">When you code and test new in-app products for the first time, you must use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CurrentAppSimulator<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh779766)</ept> object instead of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CurrentApp<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh779765)</ept> object.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This way you can verify your license logic using simulated calls to the license server instead of calling the live server.</source>
          <target state="new">This way you can verify your license logic using simulated calls to the license server instead of calling the live server.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To do this, you need to customize the file named "WindowsStoreProxy.xml" in %userprofile%\\AppData\\local\\packages\\<ph id="ph1">&amp;lt;</ph>package name<ph id="ph2">&amp;gt;</ph>\\LocalState\\Microsoft\\Windows Store\\ApiData.</source>
          <target state="new">To do this, you need to customize the file named "WindowsStoreProxy.xml" in %userprofile%\\AppData\\local\\packages\\<ph id="ph1">&amp;lt;</ph>package name<ph id="ph2">&amp;gt;</ph>\\LocalState\\Microsoft\\Windows Store\\ApiData.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Microsoft Visual Studio simulator creates this file when you run your app for the first time—or you can also load a custom one at runtime.</source>
          <target state="new">The Microsoft Visual Studio simulator creates this file when you run your app for the first time—or you can also load a custom one at runtime.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">**</bpt>CurrentAppSimulator<ept id="p1">**</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">**</bpt>CurrentAppSimulator<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This topic also references code examples provided in the <bpt id="p1">[</bpt>Store sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=627610)</ept>.</source>
          <target state="new">This topic also references code examples provided in the <bpt id="p1">[</bpt>Store sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=627610)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This sample is a great way to get hands-on experience with the different monetization options provided for Universal Windows Platform (UWP) apps.</source>
          <target state="new">This sample is a great way to get hands-on experience with the different monetization options provided for Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Step 1: Making the purchase request</source>
          <target state="new">Step 1: Making the purchase request</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The initial purchase request is made with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestProductPurchaseAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263381)</ept> like any other purchase made through the Store.</source>
          <target state="new">The initial purchase request is made with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestProductPurchaseAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263381)</ept> like any other purchase made through the Store.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The difference for consumable in-app products is that after a successful purchase, a customer cannot purchase the same product again until the app has notified the Store that the previous purchase was successfully fulfilled.</source>
          <target state="new">The difference for consumable in-app products is that after a successful purchase, a customer cannot purchase the same product again until the app has notified the Store that the previous purchase was successfully fulfilled.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It's your app's responsibility to fulfill purchased consumables and notify the Store of the fulfillment.</source>
          <target state="new">It's your app's responsibility to fulfill purchased consumables and notify the Store of the fulfillment.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example shows a consumable in-app product purchase request.</source>
          <target state="new">The following example shows a consumable in-app product purchase request.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You'll notice code comments indicating when your app should conduct its local fulfillment of the consumable in-app product for two different scenarios—when the request is successful, and when the request is not successful because of an unfulfilled purchase of that same product.</source>
          <target state="new">You'll notice code comments indicating when your app should conduct its local fulfillment of the consumable in-app product for two different scenarios—when the request is successful, and when the request is not successful because of an unfulfilled purchase of that same product.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Step 2: Tracking local fulfillment of the consumable</source>
          <target state="new">Step 2: Tracking local fulfillment of the consumable</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When granting your customer access to the consumable in-app product, it's important to keep track of which product is fulfilled (<bpt id="p1">*</bpt>productId<ept id="p1">*</ept>), and which transaction that fulfillment is associated with (<bpt id="p2">*</bpt>transactionId<ept id="p2">*</ept>).</source>
          <target state="new">When granting your customer access to the consumable in-app product, it's important to keep track of which product is fulfilled (<bpt id="p1">*</bpt>productId<ept id="p1">*</ept>), and which transaction that fulfillment is associated with (<bpt id="p2">*</bpt>transactionId<ept id="p2">*</ept>).</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  Your app is responsible for the accurately reporting fulfillment to the Store.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  Your app is responsible for the accurately reporting fulfillment to the Store.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This step is essential to maintaining a fair and reliable purchase experience for your customers.</source>
          <target state="new">This step is essential to maintaining a fair and reliable purchase experience for your customers.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following example demonstrates use of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PurchaseResults<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263392)</ept> properties from the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RequestProductPurchaseAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn263381)</ept> call in the previous step to identify the purchased product for fulfillment.</source>
          <target state="new">The following example demonstrates use of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PurchaseResults<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263392)</ept> properties from the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RequestProductPurchaseAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn263381)</ept> call in the previous step to identify the purchased product for fulfillment.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An array is used to store the product information in a location that can later be referenced to confirm that local fulfillment was successful.</source>
          <target state="new">An array is used to store the product information in a location that can later be referenced to confirm that local fulfillment was successful.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This next example shows how to use the array from the previous example to access product ID/transaction ID pairs that are later used when reporting fulfillment to the Store.</source>
          <target state="new">This next example shows how to use the array from the previous example to access product ID/transaction ID pairs that are later used when reporting fulfillment to the Store.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  Whatever methodology your app uses to track and confirm fulfillment, your app must demonstrate due diligence to ensure that your customers are not charged for items they haven't received.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  Whatever methodology your app uses to track and confirm fulfillment, your app must demonstrate due diligence to ensure that your customers are not charged for items they haven't received.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Step 3: Reporting product fulfillment to the Store</source>
          <target state="new">Step 3: Reporting product fulfillment to the Store</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>After local fulfillment is completed, your app must make a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ReportConsumableFulfillmentAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263380)</ept> call that includes the <bpt id="p3">*</bpt>productId<ept id="p3">*</ept> and the transaction the product purchase is included in.</source>
          <target state="new">After local fulfillment is completed, your app must make a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ReportConsumableFulfillmentAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263380)</ept> call that includes the <bpt id="p3">*</bpt>productId<ept id="p3">*</ept> and the transaction the product purchase is included in.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  Failure to report fulfilled consumable in-app products to the Store will result in the user being unable to purchase that product again until fulfillment for the previous purchase is reported.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  Failure to report fulfilled consumable in-app products to the Store will result in the user being unable to purchase that product again until fulfillment for the previous purchase is reported.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Step 4: Identifying unfulfilled purchases</source>
          <target state="new">Step 4: Identifying unfulfilled purchases</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Your app can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetUnfulfilledConsumablesAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263379)</ept> method to check for unfulfilled consumable in-app products at any time.</source>
          <target state="new">Your app can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetUnfulfilledConsumablesAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263379)</ept> method to check for unfulfilled consumable in-app products at any time.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This method should be called on a regular basis to check for unfulfilled consumables that exist due to unanticipated app events like an interruption in network connectivity or app termination.</source>
          <target state="new">This method should be called on a regular basis to check for unfulfilled consumables that exist due to unanticipated app events like an interruption in network connectivity or app termination.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetUnfulfilledConsumablesAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263379)</ept> can be used to enumerate unfulfilled consumables, and how your app can iterate through this list to complete local fulfillment.</source>
          <target state="new">The following example demonstrates how <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetUnfulfilledConsumablesAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263379)</ept> can be used to enumerate unfulfilled consumables, and how your app can iterate through this list to complete local fulfillment.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enable in-app product purchases</source>
          <target state="new">Enable in-app product purchases</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Store sample (demonstrates trials and in-app purchases)</source>
          <target state="new">Store sample (demonstrates trials and in-app purchases)</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Windows.ApplicationModel.Store</source>
          <target state="new">Windows.ApplicationModel.Store</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>