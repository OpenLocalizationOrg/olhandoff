<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="2bbbc4e4-67c5-4195-b934-8ca58473dc95" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="2bbbc4e4-67c5-4195-b934-8ca58473dc95" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="fe02207d-2142-4984-b807-18d1de72200d">
        <trans-unit id="229d0087-ed8a-4254-9c11-0521967f30ab" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="9f27ae4d-bada-4885-a766-0a2764480c00" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="cf080d04-a06b-410f-92ff-3ba80a5750f7" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="6d96c256-08ec-4a77-9739-daccc490b77b" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="a7f3c86f-45a8-40ae-be3e-79e6e476c09d" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="b159051e-90b2-406d-81f0-eeabb1aaef14" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="1e5a2525-4808-4d4b-8413-98558a4345d3">&lt;code&gt;</bpt>Get-VM<ept id="1e5a2525-4808-4d4b-8413-98558a4345d3">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="1e5a2525-4808-4d4b-8413-98558a4345d3">&lt;code&gt;</bpt>Get-VM<ept id="1e5a2525-4808-4d4b-8413-98558a4345d3">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="1813bdd7-d4b8-4485-a494-78f5a2223377" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="5c458f3e-a8bb-4153-9d0a-bc2603f6b1d8" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="52b4d475-86ea-417a-87d9-df7fa48e567e" xml:space="preserve">
          <source><bpt id="7d888fcc-c7ca-4302-89cb-0fbd202e3a0b">&lt;strong&gt;</bpt>Requirements<ept id="7d888fcc-c7ca-4302-89cb-0fbd202e3a0b">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="7d888fcc-c7ca-4302-89cb-0fbd202e3a0b">&lt;strong&gt;</bpt>Requirements<ept id="7d888fcc-c7ca-4302-89cb-0fbd202e3a0b">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="d72128d5-f400-4e61-9023-9bc6ac33632f" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="3d5532d7-b53a-4ba9-8e19-ad6352c241c3" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="19083d03-f398-437f-b952-08c27e8b1fc0" xml:space="preserve">
          <source><bpt id="167401ea-d58e-437a-b1b5-9dc5868e5f1d">&lt;strong&gt;</bpt>Common Variables<ept id="167401ea-d58e-437a-b1b5-9dc5868e5f1d">&lt;/strong&gt;</ept> :  
<bpt id="4f9a51d7-1c2a-4ab0-a726-8aff5d5a5007">&lt;code&gt;</bpt>$VMName<ept id="4f9a51d7-1c2a-4ab0-a726-8aff5d5a5007">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="167401ea-d58e-437a-b1b5-9dc5868e5f1d">&lt;strong&gt;</bpt>Common Variables<ept id="167401ea-d58e-437a-b1b5-9dc5868e5f1d">&lt;/strong&gt;</ept> :  
<bpt id="4f9a51d7-1c2a-4ab0-a726-8aff5d5a5007">&lt;code&gt;</bpt>$VMName<ept id="4f9a51d7-1c2a-4ab0-a726-8aff5d5a5007">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="2e397b45-c6dc-420a-aba0-be92d38c1455" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="8b015058-48cf-448d-902f-c200b5da7f99">&lt;code&gt;</bpt>Get-VM<ept id="8b015058-48cf-448d-902f-c200b5da7f99">&lt;/code&gt;</ept>  
<bpt id="26ca81a0-b9d6-40c8-b0ae-1f3c2abc732e">&lt;code&gt;</bpt>$cred<ept id="26ca81a0-b9d6-40c8-b0ae-1f3c2abc732e">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="8b015058-48cf-448d-902f-c200b5da7f99">&lt;code&gt;</bpt>Get-VM<ept id="8b015058-48cf-448d-902f-c200b5da7f99">&lt;/code&gt;</ept>  
<bpt id="26ca81a0-b9d6-40c8-b0ae-1f3c2abc732e">&lt;code&gt;</bpt>$cred<ept id="26ca81a0-b9d6-40c8-b0ae-1f3c2abc732e">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="d1252153-cd00-43e0-aa5e-4cde05a60bb2" xml:space="preserve">
          <source>Can be populated using <bpt id="06e71baf-94f0-479f-8819-77bb5b2f577e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="06e71baf-94f0-479f-8819-77bb5b2f577e">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="06e71baf-94f0-479f-8819-77bb5b2f577e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="06e71baf-94f0-479f-8819-77bb5b2f577e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c8eeece4-9ff6-4de2-a1af-de6fa939735a" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="748975fc-c023-402c-8ec3-b7e18b2b8a47" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="1aef6a83-c484-448c-b9df-e50f636153fb" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="d82b2e22-fa93-42f8-ae1b-de410e2a95a2" xml:space="preserve">
          <source><bpt id="88cb4103-41a4-4538-97bb-7572605204b5">&lt;strong&gt;</bpt>Outcome<ept id="88cb4103-41a4-4538-97bb-7572605204b5">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="88cb4103-41a4-4538-97bb-7572605204b5">&lt;strong&gt;</bpt>Outcome<ept id="88cb4103-41a4-4538-97bb-7572605204b5">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="f762d0e7-91d9-45d7-a2d2-6a706b958d7f" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="a60b879f-1a69-4ed8-aacd-8fd5ca9357c9" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="1ae6e7db-1502-45a1-ab33-ce8a0971b659" xml:space="preserve">
          <source><bpt id="99e14cf9-f823-40db-b74d-b05923ec6033">&lt;strong&gt;</bpt>Outcome<ept id="99e14cf9-f823-40db-b74d-b05923ec6033">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="99e14cf9-f823-40db-b74d-b05923ec6033">&lt;strong&gt;</bpt>Outcome<ept id="99e14cf9-f823-40db-b74d-b05923ec6033">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="da4d7499-ab49-400f-a057-200edd2f9733" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="dcac5271-3345-4442-a1fa-f8ef8ec21d7f" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="0857baee-c752-4bba-8c66-db75e651158d" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="0520a3cd-de44-418b-a1c4-98a6eda56118" xml:space="preserve">
          <source><bpt id="f93ad9d7-830c-4111-a33d-713ef0ab06c4">&lt;em&gt;</bpt>* Outcome *<ept id="f93ad9d7-830c-4111-a33d-713ef0ab06c4">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="f93ad9d7-830c-4111-a33d-713ef0ab06c4">&lt;em&gt;</bpt>* Outcome *<ept id="f93ad9d7-830c-4111-a33d-713ef0ab06c4">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="5809f0ad-5ef3-4f97-af2e-6a837e2cda66" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="127d08dd-0759-45a5-a180-8a8cf37d1361" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="1e568e3f-1ae3-460d-a60f-efc0d5d9c759" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="b4e34bf1-25dd-4ef4-9d0a-ba56744272fd" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="022649ed-1e9f-4c4e-85ff-e63329997350" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="3e9e28e6-c050-43a0-b7d6-13c2ce0edd67" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="8331d318-6307-4838-9b4a-509620dbd4ea" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="fc1616e5-ed49-4a55-b27c-b22de8e53acf" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="9365e8a5-01a3-46ba-aaee-9692de4b5c87">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="9365e8a5-01a3-46ba-aaee-9692de4b5c87">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="9365e8a5-01a3-46ba-aaee-9692de4b5c87">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="9365e8a5-01a3-46ba-aaee-9692de4b5c87">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="0dad789e-55d0-45eb-af07-5314b4e2a93f" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="ed4c0ec9-06c0-4de5-8d16-80bf5eb1c231" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="05f0e7b6-17a9-416c-a161-c5be731d9b99" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="2a36bf9d-641a-41c8-a962-dd79933d3f61" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="05a7c926-0cb7-4de7-9ed1-7cf84954e7d5" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="af3928ea-8f27-4a76-b4e8-249b97831a13" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="986e9f03-5bf4-49e8-b144-838506e1efd2" xml:space="preserve">
          <source><bpt id="a7acc927-0906-4754-abb4-11b8365b9402">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="a7acc927-0906-4754-abb4-11b8365b9402">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="a7acc927-0906-4754-abb4-11b8365b9402">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="a7acc927-0906-4754-abb4-11b8365b9402">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f142d5a6-385d-4308-8bcc-f1de14faa806" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="8ade7e61-be86-4921-9ba8-f7c2acfa5eed" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="4d7d686a-dbd8-4ae0-a191-799c09355649" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="49624c97-2003-4c33-b977-8ff01724c286" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="f364ce0c-618b-43f2-8a50-d7581b3bb481" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>