<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="3c9025b4-09b3-4be3-877d-411cb7c53e36" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="3c9025b4-09b3-4be3-877d-411cb7c53e36" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">7c8369907f03597d2426402b6d4cd79fd10afb88</olfilehash>
    </header>
    <body>
      <group id="6973e887-b238-4bb7-9714-fbda59fe764b">
        <trans-unit id="d533ff68-1edd-4ac5-9545-2f281952a234" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="b27aee37-d885-452a-87d2-f42a7796cd74" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="2d057f9f-1f6b-4b83-9b22-d0cd965c12ee" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="3ab883a9-bdc3-4408-a44a-d37ab5fba236" xml:space="preserve">
          <source>12-Nov update.Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">12-Nov update.Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="ccaddc64-5f64-4683-a93c-4a58e66f3a81" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="ce1226ea-2ab6-403d-a2c2-e68707cd236a" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="525dda45-b63a-4cd4-857a-7806104b1829" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="17578d23-6a00-48c2-b2e7-dc615c189d68">&lt;code&gt;</bpt>Get-VM<ept id="17578d23-6a00-48c2-b2e7-dc615c189d68">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="17578d23-6a00-48c2-b2e7-dc615c189d68">&lt;code&gt;</bpt>Get-VM<ept id="17578d23-6a00-48c2-b2e7-dc615c189d68">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="16e3a34f-3003-4cec-b972-2911b6f65333" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="24895171-3eb1-4686-9866-e09e4cf494fc" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="3a26605f-d950-41f4-baa4-b532cdff658b" xml:space="preserve">
          <source><bpt id="46bf7d36-3655-494a-b720-30a7572f7a66">&lt;strong&gt;</bpt>Requirements<ept id="46bf7d36-3655-494a-b720-30a7572f7a66">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="46bf7d36-3655-494a-b720-30a7572f7a66">&lt;strong&gt;</bpt>Requirements<ept id="46bf7d36-3655-494a-b720-30a7572f7a66">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="f5499d78-07dc-4044-bff5-fe1671aa726c" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="08817c85-985a-446a-91ac-259d54b38cd8" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="21e75374-f8bb-47dc-9761-bc05d30d4771" xml:space="preserve">
          <source><bpt id="d07fcefa-4e81-4864-8019-dfc64b62e11b">&lt;strong&gt;</bpt>Common Variables<ept id="d07fcefa-4e81-4864-8019-dfc64b62e11b">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="d07fcefa-4e81-4864-8019-dfc64b62e11b">&lt;strong&gt;</bpt>Common Variables<ept id="d07fcefa-4e81-4864-8019-dfc64b62e11b">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="dc824eca-a1a3-4877-9e68-2610e6e4ddb8" xml:space="preserve">
          <source><bpt id="44713acb-1e87-4ee9-ad3f-f8ac2efa4b19">&lt;code&gt;</bpt>$VMName<ept id="44713acb-1e87-4ee9-ad3f-f8ac2efa4b19">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="44713acb-1e87-4ee9-ad3f-f8ac2efa4b19">&lt;code&gt;</bpt>$VMName<ept id="44713acb-1e87-4ee9-ad3f-f8ac2efa4b19">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="83d2e488-e75a-4658-979f-f8348d11daa5" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="a8910af1-aea0-4ea2-bc3d-d3d2ac453680">&lt;code&gt;</bpt>Get-VM<ept id="a8910af1-aea0-4ea2-bc3d-d3d2ac453680">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="a8910af1-aea0-4ea2-bc3d-d3d2ac453680">&lt;code&gt;</bpt>Get-VM<ept id="a8910af1-aea0-4ea2-bc3d-d3d2ac453680">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4dff11e0-7c79-4b21-864e-fafee9d3c665" xml:space="preserve">
          <source><bpt id="43f9761a-a13b-460d-abf4-f658eb1d2fbe">&lt;code&gt;</bpt>$cred<ept id="43f9761a-a13b-460d-abf4-f658eb1d2fbe">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="43f9761a-a13b-460d-abf4-f658eb1d2fbe">&lt;code&gt;</bpt>$cred<ept id="43f9761a-a13b-460d-abf4-f658eb1d2fbe">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="c133cce1-9adb-4e69-a16a-6849b5e29352" xml:space="preserve">
          <source>Can be populated using <bpt id="0f8f7dab-76e2-4668-9bde-fb612f82126e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="0f8f7dab-76e2-4668-9bde-fb612f82126e">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="0f8f7dab-76e2-4668-9bde-fb612f82126e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="0f8f7dab-76e2-4668-9bde-fb612f82126e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ee2cdf26-da7e-4234-9163-3f83614c4368" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="31abd908-30fc-4794-acb3-d25050589282" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="66b80cba-0dc8-4b66-aaf0-b0aa245a9ee2" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="6b5df335-f817-49fd-8dd8-ac9021c166ac" xml:space="preserve">
          <source><bpt id="c26e9dc5-cc8e-44a8-bd85-1a6be9b83840">&lt;strong&gt;</bpt>Outcome<ept id="c26e9dc5-cc8e-44a8-bd85-1a6be9b83840">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="c26e9dc5-cc8e-44a8-bd85-1a6be9b83840">&lt;strong&gt;</bpt>Outcome<ept id="c26e9dc5-cc8e-44a8-bd85-1a6be9b83840">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bac9143b-fd13-48f4-beaf-e4d28cdc9b87" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="1c2a0a69-95f1-43cb-a233-259dae250461" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="63d3fa67-894c-42cb-8e5c-5a8cc28de266" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="ed6dffe6-fb87-403c-87fc-60cfb8558850" xml:space="preserve">
          <source><bpt id="3efbc787-bc4b-44f2-9c86-7bec1e015fa4">&lt;strong&gt;</bpt>Outcome<ept id="3efbc787-bc4b-44f2-9c86-7bec1e015fa4">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="3efbc787-bc4b-44f2-9c86-7bec1e015fa4">&lt;strong&gt;</bpt>Outcome<ept id="3efbc787-bc4b-44f2-9c86-7bec1e015fa4">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="200fc0f9-c84a-4859-9d64-349da2b51f8f" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="2529882e-100d-443c-b044-16d26b47e4ea" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="9ff848b3-adf9-46fb-b470-fd9ba513bfe0" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="47ef249f-e3c3-4085-a1fc-4e9b618a6950" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="5167149b-438c-4d2f-a423-4a0ebd74bc26" xml:space="preserve">
          <source><bpt id="3d3f96c6-8e0a-4073-92e6-acd844ee039c">&lt;em&gt;</bpt>* Outcome *<ept id="3d3f96c6-8e0a-4073-92e6-acd844ee039c">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="3d3f96c6-8e0a-4073-92e6-acd844ee039c">&lt;em&gt;</bpt>* Outcome *<ept id="3d3f96c6-8e0a-4073-92e6-acd844ee039c">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="be04d67e-abfe-4449-8865-6e0fcee53137" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="72060023-476f-48da-9a1a-ef4b3deaca59" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="1d4fa1f8-2f52-493f-aec5-9dac31d6b027" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="c5be3df2-c20b-49c7-b82e-ffa376556ba5" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="4c3ec10e-53a1-4ef9-985b-efc4daba3beb" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="3ac486fd-d471-4d10-8e98-18cf61b28bf9" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="85c8d7b5-1eec-4bd3-9113-6233338bc342" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="de6cc418-4915-4ee5-af8e-5f4eb15c761f" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="819a6fc3-897f-479f-aad7-d7ab78b6083e" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="617cd0fe-789a-40e9-85f0-f500624d8b3a">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="617cd0fe-789a-40e9-85f0-f500624d8b3a">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="617cd0fe-789a-40e9-85f0-f500624d8b3a">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="617cd0fe-789a-40e9-85f0-f500624d8b3a">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="2b74a2f8-d2e7-452a-9f02-bce785dce059" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="9225547b-ba0a-438f-a8ab-664553859535" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="7c63ccd5-b9d4-4b00-b380-9a54fc41cf18" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="46058f2e-5dc0-4193-b57e-970c1c70c9a5" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="cf6c8d3e-612b-4dc1-8d0e-be36cbcb9823" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="a9ad6581-6c32-454c-91ca-a387a25187bb" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="f5b38b98-6681-423b-91ff-75c68a91a1d8" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="859db863-a3da-4f12-96af-d0b80e51e1b3" xml:space="preserve">
          <source><bpt id="8118532e-7215-4179-8cef-f19d096933f2">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="8118532e-7215-4179-8cef-f19d096933f2">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="8118532e-7215-4179-8cef-f19d096933f2">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="8118532e-7215-4179-8cef-f19d096933f2">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9cda4e33-41c7-471f-b2cd-6de7fbe39a12" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="25afe74f-67e7-416a-9997-a9259e5c8c26" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="20f26ab7-6c61-4ed7-9fa9-f211c1a8114f" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="d82ee742-d44f-49e3-a352-8132b8a377c0" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="8babc34f-d863-4e93-b37b-c63fef624823" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>