<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="76f0448b-8fd8-4b40-a32e-11968e081319" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="76f0448b-8fd8-4b40-a32e-11968e081319" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="9749a917-b879-43a0-9ac8-18783aa90367">
        <trans-unit id="f4816406-ef97-4034-acfa-124d31f2645d" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="04ed45e3-0fc6-46c8-94c6-7fcf53621825" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="fabf80c1-420c-4bf9-9156-5a1b63621aed" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="865ce928-4755-4b33-8a78-cdc1777f9b42" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="8ef33f1a-b2be-48cd-9c0a-e3caccfae800" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="3d242487-de55-4aa8-8660-91ef12f1bae8" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="89e0b3ad-467e-46e7-97b0-a6108c239708">&lt;code&gt;</bpt>Get-VM<ept id="89e0b3ad-467e-46e7-97b0-a6108c239708">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="89e0b3ad-467e-46e7-97b0-a6108c239708">&lt;code&gt;</bpt>Get-VM<ept id="89e0b3ad-467e-46e7-97b0-a6108c239708">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="411054f0-9410-498a-9e36-070e80767a11" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="c1fec949-4d2d-4593-bf7a-992c62c80441" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="d60bd68d-ec0d-42d5-a4d0-686110e70cf8" xml:space="preserve">
          <source><bpt id="b247c51a-c0a0-42b6-b149-01849c9f887b">&lt;strong&gt;</bpt>Requirements<ept id="b247c51a-c0a0-42b6-b149-01849c9f887b">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="b247c51a-c0a0-42b6-b149-01849c9f887b">&lt;strong&gt;</bpt>Requirements<ept id="b247c51a-c0a0-42b6-b149-01849c9f887b">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="6ae792dd-b441-466b-b799-695c6ef95776" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="b999401c-dbfd-4734-9aa3-fd02adeb305a" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="6349d1aa-81a9-4d62-adf9-bea24a3e7438" xml:space="preserve">
          <source><bpt id="789d0d41-7a0e-47c1-b155-4bfe6d433ec2">&lt;strong&gt;</bpt>Common Variables<ept id="789d0d41-7a0e-47c1-b155-4bfe6d433ec2">&lt;/strong&gt;</ept> :  
<bpt id="8d45d110-1d00-4d6d-b8b5-c1b353932cbe">&lt;code&gt;</bpt>$VMName<ept id="8d45d110-1d00-4d6d-b8b5-c1b353932cbe">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="789d0d41-7a0e-47c1-b155-4bfe6d433ec2">&lt;strong&gt;</bpt>Common Variables<ept id="789d0d41-7a0e-47c1-b155-4bfe6d433ec2">&lt;/strong&gt;</ept> :  
<bpt id="8d45d110-1d00-4d6d-b8b5-c1b353932cbe">&lt;code&gt;</bpt>$VMName<ept id="8d45d110-1d00-4d6d-b8b5-c1b353932cbe">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="5dc60814-9c25-42fc-a576-35021b992a5e" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="706ffc43-d417-469d-bd55-da8d3d93a222">&lt;code&gt;</bpt>Get-VM<ept id="706ffc43-d417-469d-bd55-da8d3d93a222">&lt;/code&gt;</ept>  
<bpt id="cb53ea31-a14f-4c60-9eb8-8d74976f35be">&lt;code&gt;</bpt>$cred<ept id="cb53ea31-a14f-4c60-9eb8-8d74976f35be">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="706ffc43-d417-469d-bd55-da8d3d93a222">&lt;code&gt;</bpt>Get-VM<ept id="706ffc43-d417-469d-bd55-da8d3d93a222">&lt;/code&gt;</ept>  
<bpt id="cb53ea31-a14f-4c60-9eb8-8d74976f35be">&lt;code&gt;</bpt>$cred<ept id="cb53ea31-a14f-4c60-9eb8-8d74976f35be">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="6504f289-9fa1-4b2e-a01a-29c219b90444" xml:space="preserve">
          <source>Can be populated using <bpt id="c1120b66-0d4c-471e-9e1c-d502af1beff3">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c1120b66-0d4c-471e-9e1c-d502af1beff3">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="c1120b66-0d4c-471e-9e1c-d502af1beff3">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c1120b66-0d4c-471e-9e1c-d502af1beff3">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="a247a638-4b06-495e-be86-524e8c4e3f24" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="5c0748c8-596f-4caa-a3e2-d589596559d0" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="2bcc59e6-975c-44f6-a50a-b3b6483b3d93" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="4a241994-209f-48b6-a45b-e77b567a4b12" xml:space="preserve">
          <source><bpt id="332ec069-fb5c-4c8b-bff9-d2e53459f52a">&lt;strong&gt;</bpt>Outcome<ept id="332ec069-fb5c-4c8b-bff9-d2e53459f52a">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="332ec069-fb5c-4c8b-bff9-d2e53459f52a">&lt;strong&gt;</bpt>Outcome<ept id="332ec069-fb5c-4c8b-bff9-d2e53459f52a">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="62ab125c-3b83-463c-a261-c31130a38aaa" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="124b45d4-4633-4fa8-879d-4611319703c2" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="399d335b-85a1-4368-be32-31ae0eb32585" xml:space="preserve">
          <source><bpt id="394c8e7b-95ee-49d3-9822-fd71078b721b">&lt;strong&gt;</bpt>Outcome<ept id="394c8e7b-95ee-49d3-9822-fd71078b721b">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="394c8e7b-95ee-49d3-9822-fd71078b721b">&lt;strong&gt;</bpt>Outcome<ept id="394c8e7b-95ee-49d3-9822-fd71078b721b">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="1a54039b-263a-4534-995b-fb03ed2dba55" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="3667aca2-c6ac-489f-8802-9c239e83315d" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="ec374631-11b7-437e-bfa0-192ebc18da3c" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="6e6acf39-1519-4914-9f6c-bb67d6f41504" xml:space="preserve">
          <source><bpt id="7fb43403-861d-4cb7-8103-542bd1e3a53d">&lt;em&gt;</bpt>* Outcome *<ept id="7fb43403-861d-4cb7-8103-542bd1e3a53d">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="7fb43403-861d-4cb7-8103-542bd1e3a53d">&lt;em&gt;</bpt>* Outcome *<ept id="7fb43403-861d-4cb7-8103-542bd1e3a53d">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="2233cdf3-3136-478d-b3ff-7115717c3a95" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="9a55034e-2c66-42e5-b70e-67e7ca99ab71" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="5d562d78-132b-422c-b4bd-18f6794253b6" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="a1baa226-d6cd-403d-a9cb-623b76d2c255" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="73d5055a-b017-4b3c-a725-b94244f41fb2" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="46841b0a-25db-4994-8edd-1d6026aae592" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="c38b291e-127f-46e3-87ff-200d290f586a" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="8b6f1c28-7df3-444d-a27e-03c9d9ad4325" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="f617ad23-f4ee-4073-b446-654aed228fe2">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="f617ad23-f4ee-4073-b446-654aed228fe2">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="f617ad23-f4ee-4073-b446-654aed228fe2">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="f617ad23-f4ee-4073-b446-654aed228fe2">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="545619fe-2079-48bd-ac97-cb7373c91303" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="13dd6ede-8109-43c7-8418-6e0843615cc1" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="225bf93c-3197-4a6d-b71b-91b7e23cd8de" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="5c5e2ee4-1d66-4840-82e2-e4bbefb3a834" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="509a0c1d-c4d3-4e91-95df-f27ed96f7763" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="73f8544e-6d73-4e97-9ea4-3a369ed9cb77" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="ce6fea38-35ef-45da-96bc-6bb24333d470" xml:space="preserve">
          <source><bpt id="1e58f3e5-d337-4a29-b1b0-0315b5495c75">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="1e58f3e5-d337-4a29-b1b0-0315b5495c75">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="1e58f3e5-d337-4a29-b1b0-0315b5495c75">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="1e58f3e5-d337-4a29-b1b0-0315b5495c75">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="17915619-0512-499a-9e32-27ec21ed951d" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="882cbc8e-a906-47cb-857e-2cb79ed61340" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="e6289462-dc2a-4d16-a41c-baea1ab2e2e5" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="822391b4-96e4-4334-b0aa-c7638f62fbd2" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="91379122-d5d6-4119-82e2-a9ea36139da3" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>