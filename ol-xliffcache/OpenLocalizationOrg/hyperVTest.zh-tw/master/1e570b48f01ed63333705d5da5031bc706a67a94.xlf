<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="03c88e6b-755c-493d-afce-c05432efea14" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="03c88e6b-755c-493d-afce-c05432efea14" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="ddc439c8-1140-4c7e-943a-7c79835e2a57">
        <trans-unit id="af3f0cf6-1cda-4452-a40e-4d10666285d2" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="368e188c-df04-4c15-86fd-828bbec8d87d" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="e3261468-3387-4cb5-b814-216951158c1f" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="a1089ed1-baaf-432e-8509-d9e058ee61f3" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="0fdefa27-1a8f-4e49-a4bd-234e21cf3b33" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="75dc6f5b-e258-43fe-ab89-5e847e91e04b" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="044102ad-f25e-4602-8562-9a00be64211e">&lt;code&gt;</bpt>Get-VM<ept id="044102ad-f25e-4602-8562-9a00be64211e">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="044102ad-f25e-4602-8562-9a00be64211e">&lt;code&gt;</bpt>Get-VM<ept id="044102ad-f25e-4602-8562-9a00be64211e">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="917063eb-d208-4621-becf-6c8af262044a" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="139a9e72-8700-475a-bc03-0b89542d71ad" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="256a98e3-75e8-4423-9709-2574fb274bc9" xml:space="preserve">
          <source><bpt id="6d8c14f3-1617-4cff-89c2-9b8b9a59250a">&lt;strong&gt;</bpt>Requirements<ept id="6d8c14f3-1617-4cff-89c2-9b8b9a59250a">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="6d8c14f3-1617-4cff-89c2-9b8b9a59250a">&lt;strong&gt;</bpt>Requirements<ept id="6d8c14f3-1617-4cff-89c2-9b8b9a59250a">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="24537c27-5278-42ec-b269-81e9ae8da84c" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="5a0e363f-fcc1-488d-a796-763f9a74f0c9" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="7f03f87f-0036-4b21-8a27-b173d29aae7d" xml:space="preserve">
          <source><bpt id="9312d052-e064-4706-9e34-bd696a43027e">&lt;strong&gt;</bpt>Common Variables<ept id="9312d052-e064-4706-9e34-bd696a43027e">&lt;/strong&gt;</ept> :  
<bpt id="808f70e1-62b7-485b-a4f8-ea9ac3ce4640">&lt;code&gt;</bpt>$VMName<ept id="808f70e1-62b7-485b-a4f8-ea9ac3ce4640">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="9312d052-e064-4706-9e34-bd696a43027e">&lt;strong&gt;</bpt>Common Variables<ept id="9312d052-e064-4706-9e34-bd696a43027e">&lt;/strong&gt;</ept> :  
<bpt id="808f70e1-62b7-485b-a4f8-ea9ac3ce4640">&lt;code&gt;</bpt>$VMName<ept id="808f70e1-62b7-485b-a4f8-ea9ac3ce4640">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="c2315044-2f78-47d8-9848-53136dfe9ac5" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="c40ef354-6138-4b6b-8b38-d043422deff6">&lt;code&gt;</bpt>Get-VM<ept id="c40ef354-6138-4b6b-8b38-d043422deff6">&lt;/code&gt;</ept>  
<bpt id="cd492cc3-a9d1-4a52-8cdc-62adf1a130f6">&lt;code&gt;</bpt>$cred<ept id="cd492cc3-a9d1-4a52-8cdc-62adf1a130f6">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="c40ef354-6138-4b6b-8b38-d043422deff6">&lt;code&gt;</bpt>Get-VM<ept id="c40ef354-6138-4b6b-8b38-d043422deff6">&lt;/code&gt;</ept>  
<bpt id="cd492cc3-a9d1-4a52-8cdc-62adf1a130f6">&lt;code&gt;</bpt>$cred<ept id="cd492cc3-a9d1-4a52-8cdc-62adf1a130f6">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="869ff834-141b-4776-9467-7a95286d650e" xml:space="preserve">
          <source>Can be populated using <bpt id="3a10c400-832c-4f2f-a87a-463ae4636a04">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="3a10c400-832c-4f2f-a87a-463ae4636a04">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="3a10c400-832c-4f2f-a87a-463ae4636a04">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="3a10c400-832c-4f2f-a87a-463ae4636a04">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="2f626334-d124-400f-9411-20f359cb2f1d" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="937f9390-dce2-4d01-bfaf-d348b51a14b2" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="af1e7a26-f49d-4370-bf59-667878a3383b" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="f06b43df-b4ed-45e6-a6b8-d11980518010" xml:space="preserve">
          <source><bpt id="2eeef92a-b06e-479a-aa67-85809b29fa91">&lt;strong&gt;</bpt>Outcome<ept id="2eeef92a-b06e-479a-aa67-85809b29fa91">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="2eeef92a-b06e-479a-aa67-85809b29fa91">&lt;strong&gt;</bpt>Outcome<ept id="2eeef92a-b06e-479a-aa67-85809b29fa91">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="fe6a2ac3-427e-406e-9862-d8e568d95064" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="c20cca41-3a78-4670-92f1-75c24c307491" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="492a6572-35ff-4a19-99a0-3a9f52203adf" xml:space="preserve">
          <source><bpt id="d020a4ca-4fa3-466c-a3a7-ef3ca619d43a">&lt;strong&gt;</bpt>Outcome<ept id="d020a4ca-4fa3-466c-a3a7-ef3ca619d43a">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="d020a4ca-4fa3-466c-a3a7-ef3ca619d43a">&lt;strong&gt;</bpt>Outcome<ept id="d020a4ca-4fa3-466c-a3a7-ef3ca619d43a">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="03a27cda-5efb-4c81-bf4e-44a96b9dd055" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="c549b48a-39fb-4664-a853-9873e514e994" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="c39f76cd-d3d8-4388-a7d4-391237e9a285" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="5d1d4bf1-9bd0-414e-8d6f-acbbf6b0a690" xml:space="preserve">
          <source><bpt id="5442f3ba-be2b-43d3-bf8a-8d9c1d92e3d0">&lt;em&gt;</bpt>* Outcome *<ept id="5442f3ba-be2b-43d3-bf8a-8d9c1d92e3d0">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="5442f3ba-be2b-43d3-bf8a-8d9c1d92e3d0">&lt;em&gt;</bpt>* Outcome *<ept id="5442f3ba-be2b-43d3-bf8a-8d9c1d92e3d0">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="6d01b302-68cb-49dd-9e02-0ebb8f2f16c5" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="f6aa8961-22c9-4546-a93a-d0e282a8e553" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="144e1d25-dad3-41bb-a275-5eb9acc5a1a3" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="cfe8acd0-4bb8-4de4-be30-b4c41a1f61ba" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="cc7ebf85-5554-4387-b0c8-32d580d7ebae" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="25c4fa3d-622c-453a-82e5-e859c88956a3" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="5e1ab883-f0b2-448c-95a9-975320d84167" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="2807f161-80b2-4cf1-aaa8-5edb9cae4d96" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="f358ed5e-be1e-489f-93a7-3358f0f3d92d">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="f358ed5e-be1e-489f-93a7-3358f0f3d92d">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="f358ed5e-be1e-489f-93a7-3358f0f3d92d">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="f358ed5e-be1e-489f-93a7-3358f0f3d92d">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="e51ddd89-2330-4a74-831b-2212e97e485a" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="7cfa8acb-4f11-4db7-90d4-bb6893366325" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="6d5b9087-85d8-48fa-ad9d-e8c323538f8e" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="30f9d883-66ba-4d37-8276-07359c17e00b" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="ab2a04f2-9334-4ac4-b405-da5331aa2be9" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="684429c0-2afb-4578-b1e9-84dca38ddd11" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="cef1a209-0d7c-4471-806c-a98f31413a19" xml:space="preserve">
          <source><bpt id="79675783-29d9-41bd-8033-4f6a208b2a96">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="79675783-29d9-41bd-8033-4f6a208b2a96">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="79675783-29d9-41bd-8033-4f6a208b2a96">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="79675783-29d9-41bd-8033-4f6a208b2a96">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8a71d665-0eb5-42e1-9f31-b5c3da563c91" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="55bd39ad-6ac7-45ff-a946-4b495ed7dd1b" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="b071ff6b-719d-4b3f-b944-bc270b549ecb" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="ac5861ef-a555-40f5-bc24-f374f615ac45" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="0c4e81fb-8a1b-4ecf-bf03-422fdac6ee7b" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>