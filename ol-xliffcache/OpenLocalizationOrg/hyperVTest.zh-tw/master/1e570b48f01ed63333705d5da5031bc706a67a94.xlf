<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="b39d11c4-d59d-4af6-a476-97d4207f1a28" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="b39d11c4-d59d-4af6-a476-97d4207f1a28" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="f2b1957a-b2b3-46b0-9eed-4a2889daaea7">
        <trans-unit id="8c5c6625-d350-4b5b-b9dc-80a26aac6787" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="abfc5d5c-0495-493c-81e0-f1dded2ff724" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="9eacb84e-2b92-4779-947e-1acaf665a428" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="0835868c-a477-47dd-a191-183e2aa2fc9d" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="b244d32b-63ae-4866-b315-f812461da7cb" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="c763d96f-ee0f-479e-99df-8fb162ba7306" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="efe3e82d-7dc0-4be8-aea5-6ec3b1721fe8">&lt;code&gt;</bpt>Get-VM<ept id="efe3e82d-7dc0-4be8-aea5-6ec3b1721fe8">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="efe3e82d-7dc0-4be8-aea5-6ec3b1721fe8">&lt;code&gt;</bpt>Get-VM<ept id="efe3e82d-7dc0-4be8-aea5-6ec3b1721fe8">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="5a97b874-0ead-4bc8-aa82-585859725a4b" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="6a9eb534-111c-4e05-9534-b4a82837c2b6" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="41807406-e5c0-4c73-94b0-bc39bb4ba43a" xml:space="preserve">
          <source><bpt id="c270df2d-3c17-4b8e-ba36-26704bd1dbfb">&lt;strong&gt;</bpt>Requirements<ept id="c270df2d-3c17-4b8e-ba36-26704bd1dbfb">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="c270df2d-3c17-4b8e-ba36-26704bd1dbfb">&lt;strong&gt;</bpt>Requirements<ept id="c270df2d-3c17-4b8e-ba36-26704bd1dbfb">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="4f51aaf8-7369-497c-9ae2-46f25a629c93" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="67ce79c9-2f1a-407d-83f3-56061d4fe98c" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="3547ef7d-bd82-4638-bad3-797967093ede" xml:space="preserve">
          <source><bpt id="13c460d9-f880-4ed7-8688-ec29ecc0bb5e">&lt;strong&gt;</bpt>Common Variables<ept id="13c460d9-f880-4ed7-8688-ec29ecc0bb5e">&lt;/strong&gt;</ept> :  
<bpt id="a1899790-0af2-4646-8239-4f963026a5ed">&lt;code&gt;</bpt>$VMName<ept id="a1899790-0af2-4646-8239-4f963026a5ed">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="13c460d9-f880-4ed7-8688-ec29ecc0bb5e">&lt;strong&gt;</bpt>Common Variables<ept id="13c460d9-f880-4ed7-8688-ec29ecc0bb5e">&lt;/strong&gt;</ept> :  
<bpt id="a1899790-0af2-4646-8239-4f963026a5ed">&lt;code&gt;</bpt>$VMName<ept id="a1899790-0af2-4646-8239-4f963026a5ed">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="c5f6060e-baf5-4e6f-bf1d-0133da7d0a08" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="edb525f9-e313-46c1-a828-33636a53320f">&lt;code&gt;</bpt>Get-VM<ept id="edb525f9-e313-46c1-a828-33636a53320f">&lt;/code&gt;</ept>  
<bpt id="7e48b88f-3c9e-438f-9a05-0791353d3144">&lt;code&gt;</bpt>$cred<ept id="7e48b88f-3c9e-438f-9a05-0791353d3144">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="edb525f9-e313-46c1-a828-33636a53320f">&lt;code&gt;</bpt>Get-VM<ept id="edb525f9-e313-46c1-a828-33636a53320f">&lt;/code&gt;</ept>  
<bpt id="7e48b88f-3c9e-438f-9a05-0791353d3144">&lt;code&gt;</bpt>$cred<ept id="7e48b88f-3c9e-438f-9a05-0791353d3144">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="48be283f-eb3e-4ca2-939e-53b50ecb4321" xml:space="preserve">
          <source>Can be populated using <bpt id="11fffb3d-bcfa-43bf-a6b6-83f14dd78a4e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="11fffb3d-bcfa-43bf-a6b6-83f14dd78a4e">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="11fffb3d-bcfa-43bf-a6b6-83f14dd78a4e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="11fffb3d-bcfa-43bf-a6b6-83f14dd78a4e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0ecf47a2-7d76-4976-9c52-53ff2b300648" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="46ec4b20-9e0f-4f64-816b-227e470ff184" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="a0856203-2785-4eec-93a8-604765715c3f" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="6d148f01-8cff-490a-a1e5-3b636399d9bb" xml:space="preserve">
          <source><bpt id="c424ab05-c445-4c21-98c3-c2ace9cf6d01">&lt;strong&gt;</bpt>Outcome<ept id="c424ab05-c445-4c21-98c3-c2ace9cf6d01">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="c424ab05-c445-4c21-98c3-c2ace9cf6d01">&lt;strong&gt;</bpt>Outcome<ept id="c424ab05-c445-4c21-98c3-c2ace9cf6d01">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="d3de3854-8d45-47a4-b9c4-79df0a771b59" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="ddd2dfc4-9df4-4e60-8c24-7aae65dfd7aa" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="f79adb1d-78b0-4966-a44d-5ef2dd8d7a4c" xml:space="preserve">
          <source><bpt id="923cefe4-f211-449a-853e-f868f0f7feda">&lt;strong&gt;</bpt>Outcome<ept id="923cefe4-f211-449a-853e-f868f0f7feda">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="923cefe4-f211-449a-853e-f868f0f7feda">&lt;strong&gt;</bpt>Outcome<ept id="923cefe4-f211-449a-853e-f868f0f7feda">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="2b41e612-f903-41da-a682-0b3ff875c041" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="97e16d25-808d-4879-a10b-0affb4dc4eea" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="eb233d55-2b22-451c-b03a-524eb90e8f75" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="7258f58a-128f-45f3-96b2-ecbdedb7d515" xml:space="preserve">
          <source><bpt id="6ea48fd9-4ef9-4973-8905-6d82bc43a03a">&lt;em&gt;</bpt>* Outcome *<ept id="6ea48fd9-4ef9-4973-8905-6d82bc43a03a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="6ea48fd9-4ef9-4973-8905-6d82bc43a03a">&lt;em&gt;</bpt>* Outcome *<ept id="6ea48fd9-4ef9-4973-8905-6d82bc43a03a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="35cad92b-d3f5-4ff6-8f2b-6c1efd7b2c4e" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="5ca8eacb-f138-49f2-8ea6-247e020c49b8" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="8526dc2a-b891-489c-a374-8f4b418488f4" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="052c84fe-3aeb-4e42-9d29-63156108e41f" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="cea161ad-564b-46c4-9f14-b2b58ebfa53a" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="686fc992-c2e9-4a21-9eb2-fe2f8839c110" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="83b8c293-c449-40c6-8327-0ba0b1a5ede9" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="9c48eca2-2e79-4f8f-8d19-028b52690f6b" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="c32e010e-e006-4c9d-af1b-42765f735d18">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="c32e010e-e006-4c9d-af1b-42765f735d18">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="c32e010e-e006-4c9d-af1b-42765f735d18">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="c32e010e-e006-4c9d-af1b-42765f735d18">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="ecb75d6f-82b2-4a0e-8350-f59c76fc8e01" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="7a83fc8d-d508-4bd2-8076-7c7a80a779cd" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="e7323a97-6604-4af7-b3b0-9ca870250419" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="43ead796-8c86-481c-986c-73518f998642" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="12e2aad1-f880-402e-82b5-3831f5073da1" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="17a84b5d-e209-4db7-b036-217ae7e270cd" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="4fb95607-bfd8-435e-b78f-73938230267e" xml:space="preserve">
          <source><bpt id="3256a06c-e7af-49d1-9aad-7e92644fdcad">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="3256a06c-e7af-49d1-9aad-7e92644fdcad">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="3256a06c-e7af-49d1-9aad-7e92644fdcad">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="3256a06c-e7af-49d1-9aad-7e92644fdcad">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6d6a4c17-6283-4ee4-8b58-fe51bdb4cc44" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="326aada1-fe3b-4bc9-923a-e98cafbd4b77" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="7e2acfcb-e555-4244-8800-f0c38ebe6bef" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="d9749397-b1e9-4466-af83-4b6493a9dacf" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="0dee7843-ca90-4e1c-8084-572d6a80206e" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>