<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="3a5357ca-8d48-4fa8-abc2-dcf8ac84d3b7" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="3a5357ca-8d48-4fa8-abc2-dcf8ac84d3b7" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="69dfa343-7e8f-4a49-b94d-7ad1ac927d80">
        <trans-unit id="5583cebd-51b2-49ff-a6ad-949f075f6688" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="314df4e4-10ef-4fda-8cad-968d4b0d8014" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="a130999e-2909-4cd8-b7af-dc33cf7dd827" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="ee9f3f65-6b86-410d-9ded-33cf490e3325" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="8f2651d6-87a2-4c5d-9723-4125f3fb9268" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="170b59a8-8208-4a8b-9cd4-364336aad967" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="30e6cfeb-0a94-4aa5-a60b-8f8dc1f661d0">&lt;code&gt;</bpt>Get-VM<ept id="30e6cfeb-0a94-4aa5-a60b-8f8dc1f661d0">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="30e6cfeb-0a94-4aa5-a60b-8f8dc1f661d0">&lt;code&gt;</bpt>Get-VM<ept id="30e6cfeb-0a94-4aa5-a60b-8f8dc1f661d0">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="af6c2e08-a223-4639-90a2-f67ad8231c4d" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="8aea26cc-2b39-4da7-b4f3-f5e54f73505d" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="dbabd523-9042-4e1d-9185-57a728c588c8" xml:space="preserve">
          <source><bpt id="8261d94f-2916-4fe8-a247-52635bf3044a">&lt;strong&gt;</bpt>Requirements<ept id="8261d94f-2916-4fe8-a247-52635bf3044a">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="8261d94f-2916-4fe8-a247-52635bf3044a">&lt;strong&gt;</bpt>Requirements<ept id="8261d94f-2916-4fe8-a247-52635bf3044a">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="3292a395-a6ad-4d7e-a725-c8f93f6a7c84" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="b54548da-d677-4ac6-bb1e-d3371b3918f9" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="532331f4-9794-4feb-90b8-0dd10128d9fb" xml:space="preserve">
          <source><bpt id="eea1fcea-123b-45bb-b376-a85706b0ea27">&lt;strong&gt;</bpt>Common Variables<ept id="eea1fcea-123b-45bb-b376-a85706b0ea27">&lt;/strong&gt;</ept> :  
<bpt id="6c60beae-e646-462d-9087-eee2399797c5">&lt;code&gt;</bpt>$VMName<ept id="6c60beae-e646-462d-9087-eee2399797c5">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="eea1fcea-123b-45bb-b376-a85706b0ea27">&lt;strong&gt;</bpt>Common Variables<ept id="eea1fcea-123b-45bb-b376-a85706b0ea27">&lt;/strong&gt;</ept> :  
<bpt id="6c60beae-e646-462d-9087-eee2399797c5">&lt;code&gt;</bpt>$VMName<ept id="6c60beae-e646-462d-9087-eee2399797c5">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="4b5db7c4-e6e1-48a2-a8ad-a3407fac0ba0" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="27e8b905-db13-4ff7-9c52-a98c71c6eaa8">&lt;code&gt;</bpt>Get-VM<ept id="27e8b905-db13-4ff7-9c52-a98c71c6eaa8">&lt;/code&gt;</ept>  
<bpt id="16b9937f-29b5-4770-9ab7-46fd4f7f3a5d">&lt;code&gt;</bpt>$cred<ept id="16b9937f-29b5-4770-9ab7-46fd4f7f3a5d">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="27e8b905-db13-4ff7-9c52-a98c71c6eaa8">&lt;code&gt;</bpt>Get-VM<ept id="27e8b905-db13-4ff7-9c52-a98c71c6eaa8">&lt;/code&gt;</ept>  
<bpt id="16b9937f-29b5-4770-9ab7-46fd4f7f3a5d">&lt;code&gt;</bpt>$cred<ept id="16b9937f-29b5-4770-9ab7-46fd4f7f3a5d">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="6c596718-dc54-4b42-b27a-ea999a4797d4" xml:space="preserve">
          <source>Can be populated using <bpt id="98dfc05f-76bd-482e-acf4-352c0ce68312">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="98dfc05f-76bd-482e-acf4-352c0ce68312">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="98dfc05f-76bd-482e-acf4-352c0ce68312">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="98dfc05f-76bd-482e-acf4-352c0ce68312">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8712cd22-0e94-4fdf-a2bf-ebf090e0662c" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="dfd542f1-ec95-41b3-8c7e-7dabfbef36a7" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="edb0a2f3-f2c9-4016-a9ed-d3bca11d67ec" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="78d3d2c6-b72c-4f27-abfc-394259a36f08" xml:space="preserve">
          <source><bpt id="421b875e-82ef-4f4a-b299-a4e0420b9500">&lt;strong&gt;</bpt>Outcome<ept id="421b875e-82ef-4f4a-b299-a4e0420b9500">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="421b875e-82ef-4f4a-b299-a4e0420b9500">&lt;strong&gt;</bpt>Outcome<ept id="421b875e-82ef-4f4a-b299-a4e0420b9500">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="6cc4eca2-bf89-494b-91f3-ac2c09e80d3d" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="47599365-eacd-4dad-b01d-142e32e9d507" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="289a8cf9-4bf5-4642-ac74-eaa007a0a788" xml:space="preserve">
          <source><bpt id="0ea472ef-7211-4080-91c7-636cb8061b01">&lt;strong&gt;</bpt>Outcome<ept id="0ea472ef-7211-4080-91c7-636cb8061b01">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="0ea472ef-7211-4080-91c7-636cb8061b01">&lt;strong&gt;</bpt>Outcome<ept id="0ea472ef-7211-4080-91c7-636cb8061b01">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="0786b619-86d5-4b79-9af2-134d647c4da8" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="cffb1013-0d7d-436e-b295-9e8fd1f72b1d" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="3caaa528-28c6-4fe1-a084-fc8c4e4b105b" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="f0b9a169-dfd7-445c-87d9-ab50bdfb5b38" xml:space="preserve">
          <source><bpt id="3b526003-1cd4-4b8e-9b0c-eb61279beb7a">&lt;em&gt;</bpt>* Outcome *<ept id="3b526003-1cd4-4b8e-9b0c-eb61279beb7a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="3b526003-1cd4-4b8e-9b0c-eb61279beb7a">&lt;em&gt;</bpt>* Outcome *<ept id="3b526003-1cd4-4b8e-9b0c-eb61279beb7a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="96e8f31f-3c69-4acd-b660-0da36918475b" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="9529f245-7e2e-4159-a2db-cd26e2d3b197" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="a360231c-5646-4d89-b681-293b9ef6b3e6" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="494aae38-04e0-4253-9853-2bf1cae3a5a2" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="2587d9f1-e4f8-4b8a-8b0f-cbea45334b07" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="819f2e25-b1f3-4491-835a-957bc3fae701" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="98c87e7f-76ef-42e4-bb60-fcf4c17db53a" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="eaf404ad-ce05-436b-a054-e0b2c36ef88f" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="f92e89ed-cb7a-4f57-9320-9caa02dbfe03">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="f92e89ed-cb7a-4f57-9320-9caa02dbfe03">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="f92e89ed-cb7a-4f57-9320-9caa02dbfe03">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="f92e89ed-cb7a-4f57-9320-9caa02dbfe03">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="f9f76020-5e71-4ea9-a2e9-9e6424759665" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="fd173e82-fc97-46a5-ae6f-8f3079fe9856" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="e776f8d5-0e43-4587-9205-cf7804bc740d" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="2e65e0de-a1c1-493d-8786-3f79245137fc" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="3e4bcd80-07e9-4c02-82e7-8a4022af4e14" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="f16968b9-49b9-4ce6-8612-d583ba828451" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="efca7f5d-9c7e-4dc5-8412-6b3b8c2e6be6" xml:space="preserve">
          <source><bpt id="c37240ad-2d10-41a1-9208-ea0472403412">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="c37240ad-2d10-41a1-9208-ea0472403412">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="c37240ad-2d10-41a1-9208-ea0472403412">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="c37240ad-2d10-41a1-9208-ea0472403412">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d315b444-6b9a-4716-9fe6-c0bd42225caf" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="cb8e86a3-1ffa-4c1c-baf9-40476593a19d" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="2f001250-b6fc-4c1f-972d-30e8c155fd04" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="88501c75-c7a8-42cc-bf52-b280c3cc1016" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="1c010711-4e9f-4a34-9f41-68885b0289ae" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>