{
  "nodes": [
    {
      "pos": [
        27,
        134
      ],
      "content": "Getting Started with a Cordova mobile services project (Visual Studio Connected Services) | Microsoft Azure"
    },
    {
      "pos": [
        153,
        297
      ],
      "content": "Describes the first steps you can take after connecting your Cordova project to Azure Mobile Services by using Visual Studio Connected Services."
    },
    {
      "pos": [
        622,
        677
      ],
      "content": "Getting Started with Mobile Services (Cordova Projects)"
    },
    {
      "pos": [
        784,
        795
      ],
      "content": "First steps"
    },
    {
      "pos": [
        796,
        928
      ],
      "content": "The first step you need to do in order to follow the code in these examples depends on what type of mobile service you connected to."
    },
    {
      "pos": [
        932,
        1221
      ],
      "content": "For a JavaScript backend mobile service, create a table called TodoItem.  To create a table,  locate the mobile service under the Azure node in Server Explorer, right-click the mobile service's node to open the context menu, and choose <bpt id=\"p1\">**</bpt>Create Table<ept id=\"p1\">**</ept>. Enter \"TodoItem\" as the table name.",
      "nodes": [
        {
          "content": "For a JavaScript backend mobile service, create a table called TodoItem.",
          "pos": [
            0,
            72
          ]
        },
        {
          "content": "To create a table,  locate the mobile service under the Azure node in Server Explorer, right-click the mobile service's node to open the context menu, and choose <bpt id=\"p1\">**</bpt>Create Table<ept id=\"p1\">**</ept>.",
          "pos": [
            74,
            291
          ]
        },
        {
          "content": "Enter \"TodoItem\" as the table name.",
          "pos": [
            292,
            327
          ]
        }
      ]
    },
    {
      "pos": [
        1225,
        1579
      ],
      "content": "If you have a .NET backend mobile service, there's already a TodoItem table in the default project template that Visual Studio created for you, but you need to publish it to Azure. To publish it, open the context menu for the mobile service project in Solution Explorer, and choose <bpt id=\"p2\">**</bpt>Publish Web<ept id=\"p2\">**</ept>. Accept the defaults, and choose the <bpt id=\"p3\">**</bpt>Publish<ept id=\"p3\">**</ept><ph id=\"ph3\"/> button.",
      "nodes": [
        {
          "content": "If you have a .NET backend mobile service, there's already a TodoItem table in the default project template that Visual Studio created for you, but you need to publish it to Azure.",
          "pos": [
            0,
            180
          ]
        },
        {
          "content": "To publish it, open the context menu for the mobile service project in Solution Explorer, and choose <bpt id=\"p2\">**</bpt>Publish Web<ept id=\"p2\">**</ept>.",
          "pos": [
            181,
            336
          ]
        },
        {
          "content": "Accept the defaults, and choose the <bpt id=\"p3\">**</bpt>Publish<ept id=\"p3\">**</ept><ph id=\"ph3\"/> button.",
          "pos": [
            337,
            444
          ]
        }
      ]
    },
    {
      "pos": [
        1583,
        1612
      ],
      "content": "Create a reference to a table"
    },
    {
      "pos": [
        1614,
        1851
      ],
      "content": "The following code gets a reference to a table that contains data for a TodoItem, which you can use in subsequent operations to read and update the data table. The TodoItem table is created automatically when you create a mobile service.",
      "nodes": [
        {
          "content": "The following code gets a reference to a table that contains data for a TodoItem, which you can use in subsequent operations to read and update the data table.",
          "pos": [
            0,
            159
          ]
        },
        {
          "content": "The TodoItem table is created automatically when you create a mobile service.",
          "pos": [
            160,
            237
          ]
        }
      ]
    },
    {
      "pos": [
        1916,
        2140
      ],
      "content": "For these examples to work, permissions on the table must be set to <bpt id=\"p4\">**</bpt>Anybody with an Application Key<ept id=\"p4\">**</ept>. Later, you can set up authentication. See <bpt id=\"p5\">[</bpt>Get started with authentication<ept id=\"p5\">](mobile-services-html-get-started-users.md)</ept>.",
      "nodes": [
        {
          "content": "For these examples to work, permissions on the table must be set to <bpt id=\"p4\">**</bpt>Anybody with an Application Key<ept id=\"p4\">**</ept>.",
          "pos": [
            0,
            142
          ]
        },
        {
          "content": "Later, you can set up authentication.",
          "pos": [
            143,
            180
          ]
        },
        {
          "content": "See <bpt id=\"p5\">[</bpt>Get started with authentication<ept id=\"p5\">](mobile-services-html-get-started-users.md)</ept>.",
          "pos": [
            181,
            300
          ]
        }
      ]
    },
    {
      "pos": [
        2144,
        2166
      ],
      "content": "Add an item to a table"
    },
    {
      "pos": [
        2168,
        2463
      ],
      "content": "Insert a new item into a data table. An id (a GUID of type string) is automatically created as the primary key for the new row. Call the <bpt id=\"p6\">**</bpt>done<ept id=\"p6\">**</ept><ph id=\"ph4\"/> method on the returned <bpt id=\"p7\">[</bpt>Promise<ept id=\"p7\">](https://msdn.microsoft.com/library/dn802826.aspx)</ept><ph id=\"ph5\"/> object to get a copy of the inserted object and handle any errors.",
      "nodes": [
        {
          "content": "Insert a new item into a data table.",
          "pos": [
            0,
            36
          ]
        },
        {
          "content": "An id (a GUID of type string) is automatically created as the primary key for the new row.",
          "pos": [
            37,
            127
          ]
        },
        {
          "content": "Call the <bpt id=\"p6\">**</bpt>done<ept id=\"p6\">**</ept><ph id=\"ph4\"/> method on the returned <bpt id=\"p7\">[</bpt>Promise<ept id=\"p7\">](https://msdn.microsoft.com/library/dn802826.aspx)</ept><ph id=\"ph5\"/> object to get a copy of the inserted object and handle any errors.",
          "pos": [
            128,
            399
          ]
        }
      ]
    },
    {
      "pos": [
        2744,
        2765
      ],
      "content": "Read or query a table"
    },
    {
      "pos": [
        2767,
        2965
      ],
      "content": "The following code queries a table for all items, sorted by the text field. You can add code to process the query results in the success handler. In this case, a local array of the items is updated.",
      "nodes": [
        {
          "content": "The following code queries a table for all items, sorted by the text field.",
          "pos": [
            0,
            75
          ]
        },
        {
          "content": "You can add code to process the query results in the success handler.",
          "pos": [
            76,
            145
          ]
        },
        {
          "content": "In this case, a local array of the items is updated.",
          "pos": [
            146,
            198
          ]
        }
      ]
    },
    {
      "pos": [
        3089,
        3190
      ],
      "content": "You can use the where method to modify the query. Here's an example that filters out completed items.",
      "nodes": [
        {
          "content": "You can use the where method to modify the query.",
          "pos": [
            0,
            49
          ]
        },
        {
          "content": "Here's an example that filters out completed items.",
          "pos": [
            50,
            101
          ]
        }
      ]
    },
    {
      "pos": [
        3375,
        3493
      ],
      "content": "For more examples of queries you can use, see <bpt id=\"p8\">[</bpt>query<ept id=\"p8\">]((http://msdn.microsoft.com/library/azure/jj613353.aspx))</ept><ph id=\"ph6\"/> object."
    },
    {
      "pos": [
        3497,
        3516
      ],
      "content": "Update a table item"
    },
    {
      "pos": [
        3518,
        3798
      ],
      "content": "Update a row in a data table. In this code, when the mobile service responds, the item is removed from the list. Call the <bpt id=\"p9\">**</bpt>done<ept id=\"p9\">**</ept><ph id=\"ph7\"/> method on the returned <bpt id=\"p10\">[</bpt>Promise<ept id=\"p10\">](https://msdn.microsoft.com/library/dn802826.aspx)</ept><ph id=\"ph8\"/> object to get a copy of the inserted object and handle any errors.",
      "nodes": [
        {
          "content": "Update a row in a data table.",
          "pos": [
            0,
            29
          ]
        },
        {
          "content": "In this code, when the mobile service responds, the item is removed from the list.",
          "pos": [
            30,
            112
          ]
        },
        {
          "content": "Call the <bpt id=\"p9\">**</bpt>done<ept id=\"p9\">**</ept><ph id=\"ph7\"/> method on the returned <bpt id=\"p10\">[</bpt>Promise<ept id=\"p10\">](https://msdn.microsoft.com/library/dn802826.aspx)</ept><ph id=\"ph8\"/> object to get a copy of the inserted object and handle any errors.",
          "pos": [
            113,
            386
          ]
        }
      ]
    },
    {
      "pos": [
        3968,
        3987
      ],
      "content": "Delete a table item"
    },
    {
      "pos": [
        3989,
        4211
      ],
      "content": "Delete a row in a data table using the <bpt id=\"p11\">**</bpt>del<ept id=\"p11\">**</ept><ph id=\"ph9\"/> method. Call the <bpt id=\"p12\">**</bpt>done<ept id=\"p12\">**</ept><ph id=\"ph10\"/> method on the returned <bpt id=\"p13\">[</bpt>Promise<ept id=\"p13\">](https://msdn.microsoft.com/library/dn802826.aspx)</ept><ph id=\"ph11\"/> object to get a copy of the inserted object and handle any errors.",
      "nodes": [
        {
          "content": "Delete a row in a data table using the <bpt id=\"p11\">**</bpt>del<ept id=\"p11\">**</ept><ph id=\"ph9\"/> method.",
          "pos": [
            0,
            108
          ]
        },
        {
          "content": "Call the <bpt id=\"p12\">**</bpt>done<ept id=\"p12\">**</ept><ph id=\"ph10\"/> method on the returned <bpt id=\"p13\">[</bpt>Promise<ept id=\"p13\">](https://msdn.microsoft.com/library/dn802826.aspx)</ept><ph id=\"ph11\"/> object to get a copy of the inserted object and handle any errors.",
          "pos": [
            109,
            386
          ]
        }
      ]
    },
    {
      "pos": [
        4323,
        4426
      ],
      "content": "<bpt id=\"p14\">[</bpt>Learn more about mobile services<ept id=\"p14\">](https://azure.microsoft.com/documentation/services/mobile-services/)</ept>"
    }
  ],
  "content": "<properties\n    pageTitle=\"Getting Started with a Cordova mobile services project (Visual Studio Connected Services) | Microsoft Azure\"\n    description=\"Describes the first steps you can take after connecting your Cordova project to Azure Mobile Services by using Visual Studio Connected Services.\"\n    services=\"mobile-services\"\n    documentationCenter=\"\"\n    authors=\"mlhoop\"\n    manager=\"douge\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"mobile-services\"\n    ms.workload=\"mobile\"\n    ms.tgt_pltfrm=\"vs-getting-started\"\n    ms.devlang=\"multiple\"\n    ms.topic=\"article\"\n    ms.date=\"01/05/2016\"\n    ms.author=\"mlearned\"/>\n\n# Getting Started with Mobile Services (Cordova Projects)\n\n[AZURE.INCLUDE [mobile-service-note-mobile-apps](../../includes/mobile-services-note-mobile-apps.md)]\n\n##First steps\nThe first step you need to do in order to follow the code in these examples depends on what type of mobile service you connected to.\n\n- For a JavaScript backend mobile service, create a table called TodoItem.  To create a table,  locate the mobile service under the Azure node in Server Explorer, right-click the mobile service's node to open the context menu, and choose **Create Table**. Enter \"TodoItem\" as the table name.\n\n- If you have a .NET backend mobile service, there's already a TodoItem table in the default project template that Visual Studio created for you, but you need to publish it to Azure. To publish it, open the context menu for the mobile service project in Solution Explorer, and choose **Publish Web**. Accept the defaults, and choose the **Publish** button.\n\n##Create a reference to a table\n\nThe following code gets a reference to a table that contains data for a TodoItem, which you can use in subsequent operations to read and update the data table. The TodoItem table is created automatically when you create a mobile service.\n\n    var todoTable = mobileServiceClient.getTable('TodoItem');\n\nFor these examples to work, permissions on the table must be set to **Anybody with an Application Key**. Later, you can set up authentication. See [Get started with authentication](mobile-services-html-get-started-users.md).\n\n##Add an item to a table\n\nInsert a new item into a data table. An id (a GUID of type string) is automatically created as the primary key for the new row. Call the **done** method on the returned [Promise](https://msdn.microsoft.com/library/dn802826.aspx) object to get a copy of the inserted object and handle any errors.\n\n    function TodoItem(text) {\n        this.text = text;\n        this.complete = false;\n    }\n\n    var items = new Array();\n    var insertTodoItem = function (todoItem) {\n        todoTable.insert(todoItem).done(function (item) {\n            items.push(item)\n        });\n    };\n\n##Read or query a table\n\nThe following code queries a table for all items, sorted by the text field. You can add code to process the query results in the success handler. In this case, a local array of the items is updated.\n\n    todoTable.orderBy('text')\n        .read().done(function (results) {\n            items = results.slice();\n        });\n\nYou can use the where method to modify the query. Here's an example that filters out completed items.\n\n    todoTable.where(function () {\n            return (this.complete === false);\n        })\n        .read().done(function (results) {\n            items = results.slice();\n        });\n\nFor more examples of queries you can use, see [query]((http://msdn.microsoft.com/library/azure/jj613353.aspx)) object.\n\n##Update a table item\n\nUpdate a row in a data table. In this code, when the mobile service responds, the item is removed from the list. Call the **done** method on the returned [Promise](https://msdn.microsoft.com/library/dn802826.aspx) object to get a copy of the inserted object and handle any errors.\n\n    todoTable.update(todoItem).done(function (item) {\n        // Update a local collection of items.\n        items.splice(items.indexOf(todoItem), 1, item);\n    });\n\n##Delete a table item\n\nDelete a row in a data table using the **del** method. Call the **done** method on the returned [Promise](https://msdn.microsoft.com/library/dn802826.aspx) object to get a copy of the inserted object and handle any errors.\n\n    todoTable.del(todoItem).done(function (item) {\n        items.splice(items.indexOf(todoItem), 1);\n    });\n\n[Learn more about mobile services](https://azure.microsoft.com/documentation/services/mobile-services/)\n"
}