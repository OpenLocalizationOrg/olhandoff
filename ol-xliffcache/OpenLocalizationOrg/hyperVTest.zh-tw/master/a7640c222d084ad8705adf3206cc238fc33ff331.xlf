<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="141960c3-1e04-475e-a96c-54adba60a6eb" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="141960c3-1e04-475e-a96c-54adba60a6eb" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">a7640c222d084ad8705adf3206cc238fc33ff331</olfilehash>
    </header>
    <body>
      <group id="c0e2f551-d358-43ed-b185-49ad210da389">
        <trans-unit id="b4a56caa-7688-4344-bd83-ebb96e557b16" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="1730bce9-6040-455e-8809-d13b1863af1d" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="aad530a2-f3a8-4b60-ac4c-2ba116229cbb" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="ee15cd54-379e-466c-9857-e3b0ae064ca4" xml:space="preserve">
          <source>Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="8fac0a44-3b1d-4dfb-be98-33bc49623cd2" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="fd91a8db-0736-4cfe-9ee7-6374aa217952" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="593146cb-288b-4f60-b3b6-c3c980a55a89" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="56e01f5d-f40a-434f-9b5a-04b7033951d3">&lt;code&gt;</bpt>Get-VM<ept id="56e01f5d-f40a-434f-9b5a-04b7033951d3">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="56e01f5d-f40a-434f-9b5a-04b7033951d3">&lt;code&gt;</bpt>Get-VM<ept id="56e01f5d-f40a-434f-9b5a-04b7033951d3">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="b6e84487-997d-4fbb-a534-0e931ebfecc6" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="354bc669-8971-4f09-a7f1-3bc27cfe7e8d" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="0773cc93-d7a3-4b99-ad21-e90918d94be6" xml:space="preserve">
          <source><bpt id="492e2db7-c7f4-4cc0-bc40-9653614da41b">&lt;strong&gt;</bpt>Requirements<ept id="492e2db7-c7f4-4cc0-bc40-9653614da41b">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="492e2db7-c7f4-4cc0-bc40-9653614da41b">&lt;strong&gt;</bpt>Requirements<ept id="492e2db7-c7f4-4cc0-bc40-9653614da41b">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="ddc0e876-5568-46c9-9432-e7e6fab1d174" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="75489c46-f7db-44bf-9d99-3c38eddbfedc" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="f62e358c-c504-4003-9f4c-494ccf022a6b" xml:space="preserve">
          <source><bpt id="b0a05c3d-a3d0-40a3-9008-8c051133dff9">&lt;strong&gt;</bpt>Common Variables<ept id="b0a05c3d-a3d0-40a3-9008-8c051133dff9">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="b0a05c3d-a3d0-40a3-9008-8c051133dff9">&lt;strong&gt;</bpt>Common Variables<ept id="b0a05c3d-a3d0-40a3-9008-8c051133dff9">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="3b9e449f-0a63-4260-b000-7e6f096f3bd2" xml:space="preserve">
          <source><bpt id="54ff7c44-f7ea-43b1-9a8d-b4bcb6367788">&lt;code&gt;</bpt>$VMName<ept id="54ff7c44-f7ea-43b1-9a8d-b4bcb6367788">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="54ff7c44-f7ea-43b1-9a8d-b4bcb6367788">&lt;code&gt;</bpt>$VMName<ept id="54ff7c44-f7ea-43b1-9a8d-b4bcb6367788">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="1102c39c-e991-4be5-8a23-aad60a7d3da4" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="28015b0d-d671-45b1-bcd1-52c65c8e77b5">&lt;code&gt;</bpt>Get-VM<ept id="28015b0d-d671-45b1-bcd1-52c65c8e77b5">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="28015b0d-d671-45b1-bcd1-52c65c8e77b5">&lt;code&gt;</bpt>Get-VM<ept id="28015b0d-d671-45b1-bcd1-52c65c8e77b5">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f1baf167-ad1e-421b-ba96-8161f03831cf" xml:space="preserve">
          <source><bpt id="d42028b1-a34f-44d5-8ba7-7d48c5d5aec6">&lt;code&gt;</bpt>$cred<ept id="d42028b1-a34f-44d5-8ba7-7d48c5d5aec6">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="d42028b1-a34f-44d5-8ba7-7d48c5d5aec6">&lt;code&gt;</bpt>$cred<ept id="d42028b1-a34f-44d5-8ba7-7d48c5d5aec6">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="25d66d3b-a39e-4395-942f-712c7f94fdcd" xml:space="preserve">
          <source>Can be populated using <bpt id="01b96203-5a75-473e-b8cf-0cfc8c72189d">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="01b96203-5a75-473e-b8cf-0cfc8c72189d">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="01b96203-5a75-473e-b8cf-0cfc8c72189d">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="01b96203-5a75-473e-b8cf-0cfc8c72189d">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="24c22598-a693-44e3-808b-ec11ab0177f1" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="b4cd44fe-bf16-4d7c-a83d-b7ed76af881f" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="823461c4-54a4-481f-9d50-0db0823c973a" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="7c462e13-8697-474e-a37e-00865e78d0d9" xml:space="preserve">
          <source><bpt id="1b55359f-74fb-4fee-8f2c-c555526182b2">&lt;strong&gt;</bpt>Outcome<ept id="1b55359f-74fb-4fee-8f2c-c555526182b2">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="1b55359f-74fb-4fee-8f2c-c555526182b2">&lt;strong&gt;</bpt>Outcome<ept id="1b55359f-74fb-4fee-8f2c-c555526182b2">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="47953768-1149-4de1-a9a3-7e35c3e64f92" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="325669bc-aac2-4055-a007-bb25f62e26c4" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="c7ef33b5-0cf9-440d-8d43-476370fc5f14" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="3b27ed6b-0f02-4aa4-8e97-f296a6248f2e" xml:space="preserve">
          <source><bpt id="87889581-cd44-4b80-b86f-1bdb6b594613">&lt;strong&gt;</bpt>Outcome<ept id="87889581-cd44-4b80-b86f-1bdb6b594613">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="87889581-cd44-4b80-b86f-1bdb6b594613">&lt;strong&gt;</bpt>Outcome<ept id="87889581-cd44-4b80-b86f-1bdb6b594613">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="cbf1369c-9643-47a7-b177-b1fc2f7ae695" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="660fcfcd-b5e3-48b7-8f8a-21a0302e96af" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="3e60f489-1b62-49d2-8e25-de4016008f7d" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="7fac2a7d-5d42-4ad4-b2e8-5fa7088c937b" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="596089e3-851c-4e73-8021-9ed532190c2f" xml:space="preserve">
          <source><bpt id="7048122b-91ae-44a2-bcf5-896c192f9533">&lt;em&gt;</bpt>* Outcome *<ept id="7048122b-91ae-44a2-bcf5-896c192f9533">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="7048122b-91ae-44a2-bcf5-896c192f9533">&lt;em&gt;</bpt>* Outcome *<ept id="7048122b-91ae-44a2-bcf5-896c192f9533">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="2b4902f5-06c7-4552-ac4f-608420399464" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="27823725-9b69-4dba-8819-89d12cbc5655" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="e737a696-6889-4954-95f6-19763679e157" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="21c885c8-005d-4c10-afe9-7671f3efcd7a" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="bb98e2c8-ef1c-4832-a9d2-2d9469b1a000" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="18f45f05-edaa-422d-ae79-031efed9c679" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="3bd75da4-e1ca-4a87-8f9d-1556f5388550" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="dee0bb5d-1acd-4c55-b2cd-48e7f4755e77" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="86f31007-77ec-43cc-99f3-e20be59b6362" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="039d2a16-02a7-4511-8c5c-a1ce02ea8bbe">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="039d2a16-02a7-4511-8c5c-a1ce02ea8bbe">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="039d2a16-02a7-4511-8c5c-a1ce02ea8bbe">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="039d2a16-02a7-4511-8c5c-a1ce02ea8bbe">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="6e7f4d68-07ca-4735-a769-4efb5ce86c2b" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="d6b43b42-7492-4deb-a622-f822cb4a2d18" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="efce056e-7f22-4265-90c8-371916b293ee" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="d8b13d2e-91b0-443f-a4ef-4b3d2b983a80" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="5206cd7d-fb49-4642-8161-de5d0c06e161" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="8078f7ce-790f-4c22-aaef-f2567490dce8" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="0f3116fe-138b-43c5-980b-69b635c1ac20" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="fdb8f320-0a7d-4c9f-b018-7156bb01ee77" xml:space="preserve">
          <source><bpt id="1d18a51c-7bdc-48e4-bd27-c2a29810bf9a">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="1d18a51c-7bdc-48e4-bd27-c2a29810bf9a">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="1d18a51c-7bdc-48e4-bd27-c2a29810bf9a">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="1d18a51c-7bdc-48e4-bd27-c2a29810bf9a">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8b4a4728-8e1d-474f-a13e-5bad0bd9e2ae" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="604fcb43-2f48-4c98-af5a-218bc716e8f8" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="f549d5d6-50ce-4177-a488-514ef599c9a1" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="4ea410ee-b235-4cdf-89d2-6d953ed7b67a" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="ac5c800e-7737-4440-ba61-cf3f75bef7cf" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>