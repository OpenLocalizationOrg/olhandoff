<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Store JavaScript backend project code in source control | Azure Mobile Services</source>
          <target state="new">Store JavaScript backend project code in source control | Azure Mobile Services</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to store your server script files and modules in a local Git repo on your computer.</source>
          <target state="new">Learn how to store your server script files and modules in a local Git repo on your computer.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Store your mobile service project code in source control</source>
          <target state="new">Store your mobile service project code in source control</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>[AZURE.SELECTOR]</source>
          <target state="new">[AZURE.SELECTOR]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET backend<ept id="p1">](mobile-services-dotnet-backend-store-code-source-control.md)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>.NET backend<ept id="p1">](mobile-services-dotnet-backend-store-code-source-control.md)</ept></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p2">[</bpt>Javascript backend<ept id="p2">](mobile-services-store-scripts-source-control.md)</ept></source>
          <target state="new"><bpt id="p2">[</bpt>Javascript backend<ept id="p2">](mobile-services-store-scripts-source-control.md)</ept></target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic shows you how to use the source control provided by Azure Mobile Services to store your server scripts.</source>
          <target state="new">This topic shows you how to use the source control provided by Azure Mobile Services to store your server scripts.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Scripts and other JavaScript backend code files can be promoted from your local Git repository to your production mobile service.</source>
          <target state="new">Scripts and other JavaScript backend code files can be promoted from your local Git repository to your production mobile service.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It also shows how to define shared code that can be required by multiple scripts and how to use the package.json file to add Node.js modules to your mobile service.</source>
          <target state="new">It also shows how to define shared code that can be required by multiple scripts and how to use the package.json file to add Node.js modules to your mobile service.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To complete this tutorial, you must have already created a mobile service by completing the [Get started with Mobile Services] tutorial.</source>
          <target state="new">To complete this tutorial, you must have already created a mobile service by completing the [Get started with Mobile Services] tutorial.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Enable source control in your mobile service</source>
          <target state="new">Enable source control in your mobile service</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Install Git and create the local repository</source>
          <target state="new">Install Git and create the local repository</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Install Git on your local computer.</source>
          <target state="new">Install Git on your local computer.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The steps required to install Git vary between operating systems.</source>
          <target state="new">The steps required to install Git vary between operating systems.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See [Installing Git] for operating system specific distributions and installation guidance.</source>
          <target state="new">See [Installing Git] for operating system specific distributions and installation guidance.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph4">[AZURE.NOTE]</ph>
On some operating systems, both a command-line and GUI version of Git are available.</source>
          <target state="new"><ph id="ph4">[AZURE.NOTE]</ph>
On some operating systems, both a command-line and GUI version of Git are available.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The instructions provided in this article use the command-line version.</source>
          <target state="new">The instructions provided in this article use the command-line version.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Open a command-line, such as <bpt id="p3">**</bpt>GitBash<ept id="p3">**</ept><ph id="ph5" /> (Windows) or <bpt id="p4">**</bpt>Bash<ept id="p4">**</ept><ph id="ph6" /> (Unix Shell).</source>
          <target state="new">Open a command-line, such as <bpt id="p3">**</bpt>GitBash<ept id="p3">**</ept><ph id="ph5" /> (Windows) or <bpt id="p4">**</bpt>Bash<ept id="p4">**</ept><ph id="ph6" /> (Unix Shell).</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>On OS X systems you can access the command-line through the <bpt id="p5">**</bpt>Terminal<ept id="p5">**</ept><ph id="ph7" /> application.</source>
          <target state="new">On OS X systems you can access the command-line through the <bpt id="p5">**</bpt>Terminal<ept id="p5">**</ept><ph id="ph7" /> application.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>From the command line, change to the directory where you will store your scripts.</source>
          <target state="new">From the command line, change to the directory where you will store your scripts.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph8">`cd SourceControl`</ph>.</source>
          <target state="new">For example, <ph id="ph8">`cd SourceControl`</ph>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the following command to create a local copy of your new Git repository, replacing <ph id="ph9">`&lt;your_git_URL&gt;`</ph><ph id="ph10" /> with the URL of the Git repository for your mobile service:</source>
          <target state="new">Use the following command to create a local copy of your new Git repository, replacing <ph id="ph9">`&lt;your_git_URL&gt;`</ph><ph id="ph10" /> with the URL of the Git repository for your mobile service:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When prompted, type in the user name and password that you set when you enabled source control in your mobile service.</source>
          <target state="new">When prompted, type in the user name and password that you set when you enabled source control in your mobile service.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>After successful authentication, you will see a series of responses like this:</source>
          <target state="new">After successful authentication, you will see a series of responses like this:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Browse to the directory from which you ran the <ph id="ph11">`git clone`</ph><ph id="ph12" /> command, and notice the following directory structure:</source>
          <target state="new">Browse to the directory from which you ran the <ph id="ph11">`git clone`</ph><ph id="ph12" /> command, and notice the following directory structure:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>![4][4]</source>
          <target state="new">![4][4]</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In this case, a new directory is created with the name of the mobile service, which is the local repository for the data service.</source>
          <target state="new">In this case, a new directory is created with the name of the mobile service, which is the local repository for the data service.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Open the .\service\table subfolder and notice that it contains a TodoItem.json file, which is a JSON representation of the operation permissions on the TodoItem table.</source>
          <target state="new">Open the .\service\table subfolder and notice that it contains a TodoItem.json file, which is a JSON representation of the operation permissions on the TodoItem table.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When server scripts have been defined on this table, you will also have one or more files named <ph id="ph13">&lt;code&gt;</ph>TodoItem.<bpt id="p6">_</bpt>&amp;lt;operation&amp;gt;<ept id="p6">_</ept>.js<ph id="ph14">&lt;/code&gt;</ph><ph id="ph15" /> that contain the scripts for the given table operation.</source>
          <target state="new">When server scripts have been defined on this table, you will also have one or more files named <ph id="ph13">&lt;code&gt;</ph>TodoItem.<bpt id="p6">_</bpt>&amp;lt;operation&amp;gt;<ept id="p6">_</ept>.js<ph id="ph14">&lt;/code&gt;</ph><ph id="ph15" /> that contain the scripts for the given table operation.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Scheduler and custom API scripts are maintained in separate folders with those respective names.</source>
          <target state="new">Scheduler and custom API scripts are maintained in separate folders with those respective names.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see [Source control].</source>
          <target state="new">For more information, see [Source control].</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Now that you have created your local repository, you can make changes to server scripts and push the changes back to the mobile service.</source>
          <target state="new">Now that you have created your local repository, you can make changes to server scripts and push the changes back to the mobile service.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Deploy updated script files to your mobile service</source>
          <target state="new">Deploy updated script files to your mobile service</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Browse to the .\service\table subfolder, and if a file todoitem.insert.js files doesn't already exist, create it now.</source>
          <target state="new">Browse to the .\service\table subfolder, and if a file todoitem.insert.js files doesn't already exist, create it now.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Open the new file todoitem.insert.js in a text editor and paste in the following code and save your changes:</source>
          <target state="new">Open the new file todoitem.insert.js in a text editor and paste in the following code and save your changes:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This code simply writes the inserted item to the log.</source>
          <target state="new">This code simply writes the inserted item to the log.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If this file already contains code, simply add some valid JavaScript code to this file, such as a call to <ph id="ph16">`console.log()`</ph>, then save your changes.</source>
          <target state="new">If this file already contains code, simply add some valid JavaScript code to this file, such as a call to <ph id="ph16">`console.log()`</ph>, then save your changes.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the Git command prompt, type the following command to start tracking the new script file:</source>
          <target state="new">In the Git command prompt, type the following command to start tracking the new script file:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Type the following command to commit changes:</source>
          <target state="new">Type the following command to commit changes:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Type the following command to upload the changes to the remote repository:</source>
          <target state="new">Type the following command to upload the changes to the remote repository:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You should see a series of commands that indicates that the commit is deployed to the mobile service.</source>
          <target state="new">You should see a series of commands that indicates that the commit is deployed to the mobile service.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Back in the [Azure classic portal], click the <bpt id="p7">**</bpt>Data<ept id="p7">**</ept><ph id="ph17" /> tab, then click the <bpt id="p8">**</bpt>TodoItem<ept id="p8">**</ept><ph id="ph18" /> table, click  <bpt id="p9">**</bpt>Script<ept id="p9">**</ept>, then select the <bpt id="p10">**</bpt>Insert<ept id="p10">**</ept><ph id="ph19" /> operation.</source>
          <target state="new">Back in the [Azure classic portal], click the <bpt id="p7">**</bpt>Data<ept id="p7">**</ept><ph id="ph17" /> tab, then click the <bpt id="p8">**</bpt>TodoItem<ept id="p8">**</ept><ph id="ph18" /> table, click  <bpt id="p9">**</bpt>Script<ept id="p9">**</ept>, then select the <bpt id="p10">**</bpt>Insert<ept id="p10">**</ept><ph id="ph19" /> operation.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Notice that the displayed insert operation script is the same as the JavaScript code that you just uploaded to the repository.</source>
          <target state="new">Notice that the displayed insert operation script is the same as the JavaScript code that you just uploaded to the repository.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Leverage shared code and Node.js modules in your server scripts</source>
          <target state="new">Leverage shared code and Node.js modules in your server scripts</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Mobile Services provides access to the full set of core Node.js modules, which you can use in your code by using the <bpt id="p11">**</bpt>require<ept id="p11">**</ept><ph id="ph20" /> function.</source>
          <target state="new">Mobile Services provides access to the full set of core Node.js modules, which you can use in your code by using the <bpt id="p11">**</bpt>require<ept id="p11">**</ept><ph id="ph20" /> function.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Your mobile service can also use Node.js modules that are not part of the core Node.js package, and you can even define your own shared code as Node.js modules.</source>
          <target state="new">Your mobile service can also use Node.js modules that are not part of the core Node.js package, and you can even define your own shared code as Node.js modules.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information about creating modules, see [Modules] in the Node.js API reference documentation.</source>
          <target state="new">For more information about creating modules, see [Modules] in the Node.js API reference documentation.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The recommended way to add Node.js modules to your mobile service is by adding references to the service's package.json file.</source>
          <target state="new">The recommended way to add Node.js modules to your mobile service is by adding references to the service's package.json file.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Next, you will add the [node-uuid] Node.js module to your mobile service by updating the package.json file.</source>
          <target state="new">Next, you will add the [node-uuid] Node.js module to your mobile service by updating the package.json file.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When the update is pushed to Azure, the mobile service is restarted and the module is installed.</source>
          <target state="new">When the update is pushed to Azure, the mobile service is restarted and the module is installed.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This module is then used to generate a new GUID value for the <bpt id="p12">**</bpt>uuid<ept id="p12">**</ept><ph id="ph21" /> property on inserted items.</source>
          <target state="new">This module is then used to generate a new GUID value for the <bpt id="p12">**</bpt>uuid<ept id="p12">**</ept><ph id="ph21" /> property on inserted items.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Navigate to the <ph id="ph22">`.\service`</ph><ph id="ph23" /> folder of your local Git repository, and open the package.json file in a text editor, and add the following field to the <bpt id="p13">**</bpt>dependencies<ept id="p13">**</ept><ph id="ph24" /> object:</source>
          <target state="new">Navigate to the <ph id="ph22">`.\service`</ph><ph id="ph23" /> folder of your local Git repository, and open the package.json file in a text editor, and add the following field to the <bpt id="p13">**</bpt>dependencies<ept id="p13">**</ept><ph id="ph24" /> object:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph25">[AZURE.NOTE]</ph>This update to the package.json file will cause a restart in your mobile service after the commit is pushed.</source>
          <target state="new"><ph id="ph25">[AZURE.NOTE]</ph>This update to the package.json file will cause a restart in your mobile service after the commit is pushed.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Now browse to the .\service\table subfolder, open the todoitem.insert.js file and modify it as follows:</source>
          <target state="new">Now browse to the .\service\table subfolder, open the todoitem.insert.js file and modify it as follows:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This code adds a uuid column to the table, populating it with unique GUID identifiers.</source>
          <target state="new">This code adds a uuid column to the table, populating it with unique GUID identifiers.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>As in the previous section, type the following command in the Git command prompt:</source>
          <target state="new">As in the previous section, type the following command in the Git command prompt:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This adds the new file, commits your changes, and pushes the new node-uuid module and changes to the todoitem.insert.js script to your mobile service.</source>
          <target state="new">This adds the new file, commits your changes, and pushes the new node-uuid module and changes to the todoitem.insert.js script to your mobile service.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Now that you have completed this tutorial you know how to store your scripts in source control.</source>
          <target state="new">Now that you have completed this tutorial you know how to store your scripts in source control.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Consider learning more about working with server scripts and with custom APIs:</source>
          <target state="new">Consider learning more about working with server scripts and with custom APIs:</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>[Work with server scripts in Mobile Services]
  <ph id="ph26">&lt;br/&gt;</ph>Shows how to work with server scripts, job scheduler, and custom APIs.</source>
          <target state="new">[Work with server scripts in Mobile Services]
  <ph id="ph26">&lt;br/&gt;</ph>Shows how to work with server scripts, job scheduler, and custom APIs.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>[Enable source control in your mobile service]: #enable-source-control
[Install Git and create the local repository]: #clone-repo
[Deploy updated script files to your mobile service]: #deploy-scripts
[Leverage shared code and Node.js modules in your server scripts]: #use-npm</source>
          <target state="new">[Enable source control in your mobile service]: #enable-source-control
[Install Git and create the local repository]: #clone-repo
[Deploy updated script files to your mobile service]: #deploy-scripts
[Leverage shared code and Node.js modules in your server scripts]: #use-npm</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>[4]: ./media/mobile-services-store-scripts-source-control/mobile-source-local-repo.png
[5]: ./media/mobile-services-store-scripts-source-control/mobile-portal-data-tables.png
[6]: ./media/mobile-services-store-scripts-source-control/mobile-insert-script-source-control.png</source>
          <target state="new">[4]: ./media/mobile-services-store-scripts-source-control/mobile-source-local-repo.png
[5]: ./media/mobile-services-store-scripts-source-control/mobile-portal-data-tables.png
[6]: ./media/mobile-services-store-scripts-source-control/mobile-insert-script-source-control.png</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>[Git website]: http://git-scm.com
[Source control]: http://msdn.microsoft.com/library/windowsazure/c25aaede-c1f0-4004-8b78-113708761643
[Installing Git]: http://git-scm.com/book/en/Getting-Started-Installing-Git
[Get started with Mobile Services]: mobile-services-ios-get-started.md
[Work with server scripts in Mobile Services]: mobile-services-how-to-use-server-scripts.md
[Azure classic portal]: https://manage.windowsazure.com/
[Modules]: http://nodejs.org/api/modules.html
[node-uuid]: https://npmjs.org/package/node-uuid</source>
          <target state="new">[Git website]: http://git-scm.com
[Source control]: http://msdn.microsoft.com/library/windowsazure/c25aaede-c1f0-4004-8b78-113708761643
[Installing Git]: http://git-scm.com/book/en/Getting-Started-Installing-Git
[Get started with Mobile Services]: mobile-services-ios-get-started.md
[Work with server scripts in Mobile Services]: mobile-services-how-to-use-server-scripts.md
[Azure classic portal]: https://manage.windowsazure.com/
[Modules]: http://nodejs.org/api/modules.html
[node-uuid]: https://npmjs.org/package/node-uuid</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa5c9a86caf0c0c51ddeab2a6ed596f3c8d2a0d0</xliffext:olfilehash>
  </header>
</xliff>