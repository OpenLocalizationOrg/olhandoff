<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">3d65d8644039235c2dd987cab11dcfa22965815c</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">description: Behind your UI are your business and data layers.</source>
          <target xml:space="preserve">description: Behind your UI are your business and data layers.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Porting Windows Phone Silverlight business and data layers to UWP</source>
          <target xml:space="preserve">title: Porting Windows Phone Silverlight business and data layers to UWP</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 27c66759-2b35-41f5-9f7a-ceb97f4a0e3f</source>
          <target xml:space="preserve">ms.assetid: 27c66759-2b35-41f5-9f7a-ceb97f4a0e3f</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Porting Windows Phone Silverlight business and data layers to UWP</source>
          <target xml:space="preserve">Porting Windows Phone Silverlight business and data layers to UWP</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-input-and-sensors.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for I/O, device, and app model</pc>.</source>
          <target xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for I/O, device, and app model</pc>.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Behind your UI are your business and data layers.</source>
          <target xml:space="preserve">Behind your UI are your business and data layers.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">The code in these layers calls operating system and .NET Framework APIs (for example, background processing, location, the camera, the file system, network, and other data access).</source>
          <target xml:space="preserve">The code in these layers calls operating system and .NET Framework APIs (for example, background processing, location, the camera, the file system, network, and other data access).</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br211369)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The vast majority of those are <pc dataRefEnd="id2" dataRefStart="id1" id="p1">available to a Universal Windows Platform (UWP) app</pc>, so you can expect to be able to port much of this code without change.</source>
          <target xml:space="preserve">The vast majority of those are <pc dataRefEnd="id2" dataRefStart="id1" id="p1">available to a Universal Windows Platform (UWP) app</pc>, so you can expect to be able to port much of this code without change.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Asynchronous methods</source>
          <target xml:space="preserve">Asynchronous methods</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">One of the priorities of the Universal Windows Platform (UWP) is to enable you to build apps that are truly, and consistently, responsive.</source>
          <target xml:space="preserve">One of the priorities of the Universal Windows Platform (UWP) is to enable you to build apps that are truly, and consistently, responsive.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Animations are always smooth, and touch interactions such as panning and swiping are instantaneous and free of lag, making it feel like the UI is glued to your finger.</source>
          <target xml:space="preserve">Animations are always smooth, and touch interactions such as panning and swiping are instantaneous and free of lag, making it feel like the UI is glued to your finger.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To achieve this, any UWP API that can't guarantee to complete within 50ms has been made asynchronous and its name suffixed with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc>.</source>
          <target xml:space="preserve">To achieve this, any UWP API that can't guarantee to complete within 50ms has been made asynchronous and its name suffixed with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc>.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Your UI thread will return immediately from calling an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc> method, and the work will take place on another thread.</source>
          <target xml:space="preserve">Your UI thread will return immediately from calling an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc> method, and the work will take place on another thread.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Consuming an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc> method is made very easy, syntactically, using the C# <pc dataRefEnd="id4" dataRefStart="id3" id="p2">await</pc> operator, JavaScript promise objects, and C++ continuations.</source>
          <target xml:space="preserve">Consuming an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Async</pc> method is made very easy, syntactically, using the C# <pc dataRefEnd="id4" dataRefStart="id3" id="p2">await</pc> operator, JavaScript promise objects, and C++ continuations.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187335)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming</pc>.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Background processing</source>
          <target xml:space="preserve">Background processing</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A Windows Phone Silverlight app can use a managed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ScheduledTaskAgent</pc> object to perform a task while the app is not in the foreground.</source>
          <target xml:space="preserve">A Windows Phone Silverlight app can use a managed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ScheduledTaskAgent</pc> object to perform a task while the app is not in the foreground.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224768)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A UWP app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> class to create and register a background task in a similar way.</source>
          <target xml:space="preserve">A UWP app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundTaskBuilder</pc></pc> class to create and register a background task in a similar way.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">You define a class that implements the work of your background task.</source>
          <target xml:space="preserve">You define a class that implements the work of your background task.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224811)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The system runs your background task periodically, calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method of your class to execute the work.</source>
          <target xml:space="preserve">The system runs your background task periodically, calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run</pc></pc> method of your class to execute the work.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In a UWP app, remember to set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Tasks</pc> declaration in the app package manifest.</source>
          <target xml:space="preserve">In a UWP app, remember to set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Tasks</pc> declaration in the app package manifest.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt299103)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Support your app with background tasks</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Support your app with background tasks</pc>.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To transfer large data files in the background, a Windows Phone Silverlight app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundTransferService</pc> class.</source>
          <target xml:space="preserve">To transfer large data files in the background, a Windows Phone Silverlight app uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundTransferService</pc> class.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207242)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A UWP app uses APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Networking.BackgroundTransfer</pc></pc> namespace to do this.</source>
          <target xml:space="preserve">A UWP app uses APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Networking.BackgroundTransfer</pc></pc> namespace to do this.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">The features use a similar pattern to initiate transfers, but the new API has improved capabilities and performance.</source>
          <target xml:space="preserve">The features use a similar pattern to initiate transfers, but the new API has improved capabilities and performance.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh452975)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Transferring data in the background</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Transferring data in the background</pc>.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A Windows Phone Silverlight app uses the managed classes in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.BackgroundAudio</pc> namespace to play audio while the app is not in the foreground.</source>
          <target xml:space="preserve">A Windows Phone Silverlight app uses the managed classes in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.BackgroundAudio</pc> namespace to play audio while the app is not in the foreground.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt282140)</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?linkid=619997)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The UWP uses the Windows Phone Store app model, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Audio</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background audio</pc> sample.</source>
          <target xml:space="preserve">The UWP uses the Windows Phone Store app model, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Background Audio</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Background audio</pc> sample.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Cloud services, networking, and databases</source>
          <target xml:space="preserve">Cloud services, networking, and databases</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Hosting data and app services in the cloud is possible using Azure.</source>
          <target xml:space="preserve">Hosting data and app services in the cloud is possible using Azure.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=403138)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Getting Started with Mobile Services</pc>.</source>
          <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Getting Started with Mobile Services</pc>.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://azure.microsoft.com/documentation/articles/mobile-services-windows-store-dotnet-get-started-offline-data/)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For solutions that require both online and offline data see: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using offline data sync in Mobile Services</pc>.</source>
          <target xml:space="preserve">For solutions that require both online and offline data see: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Using offline data sync in Mobile Services</pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The UWP has partial support for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Net.HttpWebRequest</pc> class, but the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Net.WebClient</pc> class is not supported.</source>
          <target xml:space="preserve">The UWP has partial support for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Net.HttpWebRequest</pc> class, but the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Net.WebClient</pc> class is not supported.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298639)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/system.net.http.httpclient(v=vs.118).aspx)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The recommended, forward-looking alternative is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Web.Http.HttpClient</pc></pc> class (or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">System.Net.Http.HttpClient</pc> if you need your code to be portable to other platforms that support .NET).</source>
          <target xml:space="preserve">The recommended, forward-looking alternative is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Web.Http.HttpClient</pc></pc> class (or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">System.Net.Http.HttpClient</pc> if you need your code to be portable to other platforms that support .NET).</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/system.net.http.httprequestmessage.aspx)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">These APIs use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Net.Http.HttpRequestMessage</pc> to represent an HTTP request.</source>
          <target xml:space="preserve">These APIs use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Net.Http.HttpRequestMessage</pc> to represent an HTTP request.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">UWP apps do not currently include built-in support for data-intensive scenarios such as line of business (LOB) scenarios.</source>
          <target xml:space="preserve">UWP apps do not currently include built-in support for data-intensive scenarios such as line of business (LOB) scenarios.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">However, you can make use SQLite for local transactional database services.</source>
          <target xml:space="preserve">However, you can make use SQLite for local transactional database services.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://visualstudiogallery.msdn.microsoft.com/4913e7d5-96c9-4dde-a1a1-69820d615936)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SQLite</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SQLite</pc>.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Pass absolute URIs, not relative URIs, to Windows Runtime types.</source>
          <target xml:space="preserve">Pass absolute URIs, not relative URIs, to Windows Runtime types.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/hh763341.aspx)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Passing a URI to the Windows Runtime</pc>.</source>
          <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Passing a URI to the Windows Runtime</pc>.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">Launchers and Choosers</source>
          <target xml:space="preserve">Launchers and Choosers</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">With Launchers and Choosers (found in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Tasks</pc> namespace), a Windows Phone Silverlight app can interact with the operating system to perform common operations such as composing an email, choosing a photo, or sharing certain kinds of data with another app.</source>
          <target xml:space="preserve">With Launchers and Choosers (found in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Tasks</pc> namespace), a Windows Phone Silverlight app can interact with the operating system to perform common operations such as composing an email, choosing a photo, or sharing certain kinds of data with another app.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](wpsl-to-uwp-namespace-and-class-mappings.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Search for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Tasks</pc> in the topic <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows Phone Silverlight to Windows 10 namespace and class mappings</pc> to find the equivalent UWP type.</source>
          <target xml:space="preserve">Search for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Tasks</pc> in the topic <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows Phone Silverlight to Windows 10 namespace and class mappings</pc> to find the equivalent UWP type.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">These range from similar mechanisms, called launchers and pickers, to implementing a contract for sharing data between apps.</source>
          <target xml:space="preserve">These range from similar mechanisms, called launchers and pickers, to implementing a contract for sharing data between apps.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">A Windows Phone Silverlight app can be put into a dormant state or even tombstoned when using, for example, the photo Chooser task.</source>
          <target xml:space="preserve">A Windows Phone Silverlight app can be put into a dormant state or even tombstoned when using, for example, the photo Chooser task.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207847)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A UWP app remains active and running while using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> class.</source>
          <target xml:space="preserve">A UWP app remains active and running while using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Monetization (trial mode and in-app purchases)</source>
          <target xml:space="preserve">Monetization (trial mode and in-app purchases)</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1"> [</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A Windows Phone Silverlight app can use the UWP<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> class for most of its trial mode and in-app purchase functionality, so that code doesn't need to be ported.</source>
          <target xml:space="preserve">A Windows Phone Silverlight app can use the UWP<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> class for most of its trial mode and in-app purchase functionality, so that code doesn't need to be ported.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">But, a Windows Phone Silverlight app calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MarketplaceDetailTask.Show</pc> to offer the app for purchase:</source>
          <target xml:space="preserve">But, a Windows Phone Silverlight app calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MarketplaceDetailTask.Show</pc> to offer the app for purchase:</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1"> [</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh967813)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Port that code to call the UWP<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestAppPurchaseAsync</pc></pc> method:</source>
          <target xml:space="preserve">Port that code to call the UWP<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestAppPurchaseAsync</pc></pc> method:</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you have code that simulates your app purchase and in-app purchase features for testing purposes, then you can port that to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc> class instead.</source>
          <target xml:space="preserve">If you have code that simulates your app purchase and in-app purchase features for testing purposes, then you can port that to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc> class instead.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Notifications for tile or toast updates</source>
          <target xml:space="preserve">Notifications for tile or toast updates</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">Notifications are an extension of the push notification model for Windows Phone Silverlight apps.</source>
          <target xml:space="preserve">Notifications are an extension of the push notification model for Windows Phone Silverlight apps.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">When you receive a notification from the Windows Push Notification Service (WNS), you can surface the info to the UI with a tile update or with a toast.</source>
          <target xml:space="preserve">When you receive a notification from the Windows Push Notification Service (WNS), you can surface the info to the UI with a tile update or with a toast.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](w8x-to-uwp-porting-xaml-and-ui.md#tiles-and-toasts)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For porting the UI side of your notification features, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tiles and toasts</pc>.</source>
          <target xml:space="preserve">For porting the UI side of your notification features, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tiles and toasts</pc>.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868266)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more details on the use of notifications in a UWP app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sending toast notifications</pc>.</source>
          <target xml:space="preserve">For more details on the use of notifications in a UWP app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sending toast notifications</pc>.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868259)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For info and tutorials on using tiles, toasts, badges, banners, and notifications in a Windows Runtime app using C++, C#, or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with tiles, badges, and toast notifications</pc>.</source>
          <target xml:space="preserve">For info and tutorials on using tiles, toasts, badges, banners, and notifications in a Windows Runtime app using C++, C#, or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Working with tiles, badges, and toast notifications</pc>.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">Storage (file access)</source>
          <target xml:space="preserve">Storage (file access)</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">Windows Phone Silverlight code that stores app settings as key-value pairs in isolated storage is easily ported.</source>
          <target xml:space="preserve">Windows Phone Silverlight code that stores app settings as key-value pairs in isolated storage is easily ported.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">Here is a before-and-after example, first the Windows Phone Silverlight version:</source>
          <target xml:space="preserve">Here is a before-and-after example, first the Windows Phone Silverlight version:</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">And the UWP equivalent:</source>
          <target xml:space="preserve">And the UWP equivalent:</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Although a subset of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.Storage</pc> namespace is available to them, many Windows Phone Silverlight apps perform file i/o with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsolatedStorageFile</pc> class because it has been supported for longer.</source>
          <target xml:space="preserve">Although a subset of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.Storage</pc> namespace is available to them, many Windows Phone Silverlight apps perform file i/o with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsolatedStorageFile</pc> class because it has been supported for longer.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Assuming that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsolatedStorageFile</pc> is being used, here's a before-and-after example of writing and reading a file, first the Windows Phone Silverlight version:</source>
          <target xml:space="preserve">Assuming that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsolatedStorageFile</pc> is being used, here's a before-and-after example of writing and reading a file, first the Windows Phone Silverlight version:</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">And the same functionality using the UWP:</source>
          <target xml:space="preserve">And the same functionality using the UWP:</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">A Windows Phone Silverlight app has read-only access to the optional SD card.</source>
          <target xml:space="preserve">A Windows Phone Silverlight app has read-only access to the optional SD card.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">A UWP app has read-write access to the SD card.</source>
          <target xml:space="preserve">A UWP app has read-write access to the SD card.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt188699)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Access the SD card</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Access the SD card</pc>.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt188703)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For info about accessing photos, music, and video files in a UWP app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files and folders in the Music, Pictures, and Videos libraries</pc>.</source>
          <target xml:space="preserve">For info about accessing photos, music, and video files in a UWP app, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files and folders in the Music, Pictures, and Videos libraries</pc>.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt185399)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files, folders, and libraries</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Files, folders, and libraries</pc>.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-form-factors-and-ux.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for form factor and UX</pc>.</source>
          <target xml:space="preserve">The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for form factor and UX</pc>.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">Related topics</source>
          <target xml:space="preserve">Related topics</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source xml:space="preserve">Namespace and class mappings</source>
          <target xml:space="preserve">Namespace and class mappings</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>