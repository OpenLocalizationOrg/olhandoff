<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">b76980657904bdd370cd79ecdde3d10b2823a127</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: A7E0DA1E-535A-459E-9A35-68A4150EE9F5</source>
          <target xml:space="preserve">ms.assetid: A7E0DA1E-535A-459E-9A35-68A4150EE9F5</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">description: This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Hardware DRM</source>
          <target xml:space="preserve">title: Hardware DRM</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Hardware DRM</source>
          <target xml:space="preserve">Hardware DRM</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Hardware-based DRM is only supported on certain hardware with a Windows 10 version of that hardware's firmware.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Hardware-based DRM is only supported on certain hardware with a Windows 10 version of that hardware's firmware.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://www.microsoft.com/playready/licensing/compliance/)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PlayReady Compliance and Robustness Rules</pc> for more information on the guarantees provided.</source>
          <target xml:space="preserve">Refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PlayReady Compliance and Robustness Rules</pc> for more information on the guarantees provided.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">Increasingly, content providers are moving towards hardware-based protections for granting permission to play back full high value content in apps.</source>
          <target xml:space="preserve">Increasingly, content providers are moving towards hardware-based protections for granting permission to play back full high value content in apps.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Robust support for a hardware implementation of the cryptographic core has been added to PlayReady to meet this need.</source>
          <target xml:space="preserve">Robust support for a hardware implementation of the cryptographic core has been added to PlayReady to meet this need.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">This support enables secure playback of high definition (1080p) and ultra-high definition (UHD) content on multiple device platforms.</source>
          <target xml:space="preserve">This support enables secure playback of high definition (1080p) and ultra-high definition (UHD) content on multiple device platforms.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.</source>
          <target xml:space="preserve">Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Windows TEE Implementation</source>
          <target xml:space="preserve">Windows TEE Implementation</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">This topic provides a brief overview of how Windows 10 implements the trusted execution environment.</source>
          <target xml:space="preserve">This topic provides a brief overview of how Windows 10 implements the trusted execution environment.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">The details of the Windows TEE implementation is out of scope for this document.</source>
          <target xml:space="preserve">The details of the Windows TEE implementation is out of scope for this document.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">However, a brief discussion of the difference between the standard porting kit TEE port and the Windows port will be beneficial.</source>
          <target xml:space="preserve">However, a brief discussion of the difference between the standard porting kit TEE port and the Windows port will be beneficial.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Windows implements the OEM proxy layer and transfers the serialized PRITEE functions calls to a user mode driver in the Windows Media Foundation subsystem.</source>
          <target xml:space="preserve">Windows implements the OEM proxy layer and transfers the serialized PRITEE functions calls to a user mode driver in the Windows Media Foundation subsystem.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">This will eventually get routed to either the Windows TrEE (Trusted Execution Environment) driver or the OEM’s graphics driver.</source>
          <target xml:space="preserve">This will eventually get routed to either the Windows TrEE (Trusted Execution Environment) driver or the OEM’s graphics driver.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">The details of either of these approaches is out of scope for this document.</source>
          <target xml:space="preserve">The details of either of these approaches is out of scope for this document.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">The following diagram shows the general component interaction for the Windows port.</source>
          <target xml:space="preserve">The following diagram shows the general component interaction for the Windows port.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">WMLA@Microsoft.com&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you want to develop a Windows PlayReady TEE implementation, you can contact <pc dataRefEnd="id2" dataRefStart="id1" id="p1"></pc>.</source>
          <target xml:space="preserve">If you want to develop a Windows PlayReady TEE implementation, you can contact <pc dataRefEnd="id2" dataRefStart="id1" id="p1"></pc>.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">windows tee component diagram</source>
          <target xml:space="preserve">windows tee component diagram</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Considerations for Using Hardware DRM</source>
          <target xml:space="preserve">Considerations for Using Hardware DRM</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">This topic provides a brief list of things that should be considered when developing apps designed to use hardware DRM.</source>
          <target xml:space="preserve">This topic provides a brief list of things that should be considered when developing apps designed to use hardware DRM.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Protected Media Process (PMP) is not supported.</source>
          <target xml:space="preserve">Protected Media Process (PMP) is not supported.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Output protection level (OPL) 270 support (no down resolution).</source>
          <target xml:space="preserve">Output protection level (OPL) 270 support (no down resolution).</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Microsoft recommends that high definition content for hardware DRM have an OPL greater than 270 (although it is not required).</source>
          <target xml:space="preserve">Microsoft recommends that high definition content for hardware DRM have an OPL greater than 270 (although it is not required).</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">An OPL of greater than 270 means HDCP is required.</source>
          <target xml:space="preserve">An OPL of greater than 270 means HDCP is required.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Additionally, Microsoft recommends you set HDCP type 1 (version 2.2 or later).</source>
          <target xml:space="preserve">Additionally, Microsoft recommends you set HDCP type 1 (version 2.2 or later).</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Unlike software DRM, output protections are enforced on all monitors based on the least capable monitor.</source>
          <target xml:space="preserve">Unlike software DRM, output protections are enforced on all monitors based on the least capable monitor.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">For example, if the user has two monitors connected where one of the monitors supports HDCP and the other does not, playback will fail if the license requires HDCP even if the content is only being rendered on the monitor that supports HDCP.</source>
          <target xml:space="preserve">For example, if the user has two monitors connected where one of the monitors supports HDCP and the other does not, playback will fail if the license requires HDCP even if the content is only being rendered on the monitor that supports HDCP.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">In software DRM, content would play back as long as it is only being rendered on the monitor that supports HDCP.</source>
          <target xml:space="preserve">In software DRM, content would play back as long as it is only being rendered on the monitor that supports HDCP.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Hardware DRM is not guaranteed to be used by the client and secure unless the following conditions are met by the content keys and licenses:</source>
          <target xml:space="preserve">Hardware DRM is not guaranteed to be used by the client and secure unless the following conditions are met by the content keys and licenses:</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Audio must be in the clear or be encrypted to a different content key than video.</source>
          <target xml:space="preserve">Audio must be in the clear or be encrypted to a different content key than video.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Microsoft recommends that the audio be in the clear to improve playback performance.</source>
          <target xml:space="preserve">Microsoft recommends that the audio be in the clear to improve playback performance.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">The license used for the video content key must have a security level of 3000.</source>
          <target xml:space="preserve">The license used for the video content key must have a security level of 3000.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">Multiple graphics processing units (GPUs) are not supported for persistent licenses.</source>
          <target xml:space="preserve">Multiple graphics processing units (GPUs) are not supported for persistent licenses.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">To handle persistent licenses on machines with multiple GPUs, consider the following scenario:</source>
          <target xml:space="preserve">To handle persistent licenses on machines with multiple GPUs, consider the following scenario:</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">A customer buys a new machine with an integrated graphics card.</source>
          <target xml:space="preserve">A customer buys a new machine with an integrated graphics card.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">The customer uses an app that acquires persistent licenses while using hardware DRM.</source>
          <target xml:space="preserve">The customer uses an app that acquires persistent licenses while using hardware DRM.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">The persistent license is now bound to that graphics card’s hardware keys.</source>
          <target xml:space="preserve">The persistent license is now bound to that graphics card’s hardware keys.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">The customer then installs a new graphics card.</source>
          <target xml:space="preserve">The customer then installs a new graphics card.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">All licenses in the hashed data store (HDS) are bound to the integrated video card, but the customer now wants to play back protected content using the newly-installed graphics card.</source>
          <target xml:space="preserve">All licenses in the hashed data store (HDS) are bound to the integrated video card, but the customer now wants to play back protected content using the newly-installed graphics card.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">In order to prevent playback from failing because the licenses can’t be decrypted by the hardware, PlayReady uses a separate hashed data store (HDS) for each graphics card that it encounters.</source>
          <target xml:space="preserve">In order to prevent playback from failing because the licenses can’t be decrypted by the hardware, PlayReady uses a separate hashed data store (HDS) for each graphics card that it encounters.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">This will cause PlayReady to attempt license acquisition for a piece of content where PlayReady would normally already have a license (that is, in the software DRM case or any case without a hardware change, PlayReady wouldn’t need to reacquire a license).</source>
          <target xml:space="preserve">This will cause PlayReady to attempt license acquisition for a piece of content where PlayReady would normally already have a license (that is, in the software DRM case or any case without a hardware change, PlayReady wouldn’t need to reacquire a license).</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Therefore, if the app acquires a persistent license while using hardware DRM, your app needs to be able to handle the case where that license is effectively “lost” if the end user installs (or uninstalls) a graphics card.</source>
          <target xml:space="preserve">Therefore, if the app acquires a persistent license while using hardware DRM, your app needs to be able to handle the case where that license is effectively “lost” if the end user installs (or uninstalls) a graphics card.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Because this is not a common scenario, you may decide to handle the support calls when the content no longer plays after a hardware change rather than figure out how to deal with a hardware change in the client/server code.</source>
          <target xml:space="preserve">Because this is not a common scenario, you may decide to handle the support calls when the content no longer plays after a hardware change rather than figure out how to deal with a hardware change in the client/server code.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Override Hardware DRM</source>
          <target xml:space="preserve">Override Hardware DRM</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">This section describes how to override hardware DRM if the content to be played back does not support hardware DRM.</source>
          <target xml:space="preserve">This section describes how to override hardware DRM if the content to be played back does not support hardware DRM.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">By default, hardware DRM is used if the system supports it.</source>
          <target xml:space="preserve">By default, hardware DRM is used if the system supports it.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">However, some content is not supported in hardware DRM.</source>
          <target xml:space="preserve">However, some content is not supported in hardware DRM.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">One example of this is Cocktail content.</source>
          <target xml:space="preserve">One example of this is Cocktail content.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Another example is any content that uses a video codec other than H.264 and HEVC.</source>
          <target xml:space="preserve">Another example is any content that uses a video codec other than H.264 and HEVC.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">Another example is HEVC content, as some hardware DRM will support HEVC and some will not.</source>
          <target xml:space="preserve">Another example is HEVC content, as some hardware DRM will support HEVC and some will not.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">Therefore, if you want to play a piece of content and hardware DRM doesn’t support it on the system in question, you may want to opt out of hardware DRM.</source>
          <target xml:space="preserve">Therefore, if you want to play a piece of content and hardware DRM doesn’t support it on the system in question, you may want to opt out of hardware DRM.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">The following example shows how to opt-out of hardware DRM.</source>
          <target xml:space="preserve">The following example shows how to opt-out of hardware DRM.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">You only need to do this before you switch.</source>
          <target xml:space="preserve">You only need to do this before you switch.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">Also, make sure you don’t have any PlayReady object in memory, otherwise behavior is undefined.</source>
          <target xml:space="preserve">Also, make sure you don’t have any PlayReady object in memory, otherwise behavior is undefined.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To switch back to hardware DRM, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareOverride</pc> value to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">0</pc>.</source>
          <target xml:space="preserve">To switch back to hardware DRM, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareOverride</pc> value to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">0</pc>.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For every media playback, you need to set <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProtectionManager</pc> to:</source>
          <target xml:space="preserve">For every media playback, you need to set <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProtectionManager</pc> to:</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">The best way to tell if you are in hardware DRM or software DRM is look at C:\\Users\\&amp;lt;username&amp;gt;\\AppData\\Local\\Packages\\&amp;lt;application name&amp;gt;\\LocalState\\PlayReady\\\*</source>
          <target xml:space="preserve">The best way to tell if you are in hardware DRM or software DRM is look at C:\\Users\\&amp;lt;username&amp;gt;\\AppData\\Local\\Packages\\&amp;lt;application name&amp;gt;\\LocalState\\PlayReady\\\*</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">If there is an mspr.hds file, then you are in software DRM.</source>
          <target xml:space="preserve">If there is an mspr.hds file, then you are in software DRM.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">If you have another \*.hds file, then you are in hardware DRM.</source>
          <target xml:space="preserve">If you have another \*.hds file, then you are in hardware DRM.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source xml:space="preserve">You can delete the entire PlayReady folder and retry your test as well.</source>
          <target xml:space="preserve">You can delete the entire PlayReady folder and retry your test as well.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">Detect the Type of Hardware DRM</source>
          <target xml:space="preserve">Detect the Type of Hardware DRM</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">This section describes how to detect what type of hardware DRM is supported on the system.</source>
          <target xml:space="preserve">This section describes how to detect what type of hardware DRM is supported on the system.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn986441)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PlayReadyStatics.CheckSupportedHardware</pc></pc> method to determine whether the system supports a specific hardware digital rights management (DRM) feature.</source>
          <target xml:space="preserve">You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PlayReadyStatics.CheckSupportedHardware</pc></pc> method to determine whether the system supports a specific hardware digital rights management (DRM) feature.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">For example:</source>
          <target xml:space="preserve">For example:</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn986265)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PlayReadyHardwareDRMFeatures</pc></pc> enumeration contains the valid list of hardware DRM feature values that can be queried.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PlayReadyHardwareDRMFeatures</pc></pc> enumeration contains the valid list of hardware DRM feature values that can be queried.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To determine if hardware DRM is supported, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HardwareDRM</pc> member in the query.</source>
          <target xml:space="preserve">To determine if hardware DRM is supported, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HardwareDRM</pc> member in the query.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To determine if the hardware supports the High Efficiency Video Coding (HEVC)/H.265 codec, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HEVC</pc> member in the query.</source>
          <target xml:space="preserve">To determine if the hardware supports the High Efficiency Video Coding (HEVC)/H.265 codec, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HEVC</pc> member in the query.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.media.protection.playready.playreadystatics.playreadycertificatesecuritylevel.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can also use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PlayReadyStatics.PlayReadyCertificateSecurityLevel</pc></pc> property to get the security level of the client certificate to determine if hardware DRM is supported.</source>
          <target xml:space="preserve">You can also use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PlayReadyStatics.PlayReadyCertificateSecurityLevel</pc></pc> property to get the security level of the client certificate to determine if hardware DRM is supported.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source xml:space="preserve">Unless the returned certificate security level is greater than or equal to 3000, either the client is not individualized or provisioned (in which case this property returns 0) or hardware DRM is not in use (in which case this property returns a value that is less than 3000).</source>
          <target xml:space="preserve">Unless the returned certificate security level is greater than or equal to 3000, either the client is not individualized or provisioned (in which case this property returns 0) or hardware DRM is not in use (in which case this property returns a value that is less than 3000).</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>