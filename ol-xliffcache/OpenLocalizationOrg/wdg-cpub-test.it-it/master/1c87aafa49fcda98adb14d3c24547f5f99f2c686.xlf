<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">1c87aafa49fcda98adb14d3c24547f5f99f2c686</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Print from your app</source>
          <target xml:space="preserve">Print from your app</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="103">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">** Important APIs **</source>
          <target xml:space="preserve">** Important APIs **</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Windows.Graphics.Printing</source>
          <target xml:space="preserve">Windows.Graphics.Printing</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">Windows.UI.Xaml.Printing</source>
          <target xml:space="preserve">Windows.UI.Xaml.Printing</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">PrintDocument</source>
          <target xml:space="preserve">PrintDocument</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Learn how to print documents from a Universal Windows app.</source>
          <target xml:space="preserve">Learn how to print documents from a Universal Windows app.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">This topic also shows how to print specific pages.</source>
          <target xml:space="preserve">This topic also shows how to print specific pages.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](customize-the-print-preview-ui.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more advanced changes to the print preview UI, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Customize the print preview UI</pc>.</source>
          <target xml:space="preserve">For more advanced changes to the print preview UI, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Customize the print preview UI</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  Most of the examples in this topic are based on the print sample.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  Most of the examples in this topic are based on the print sample.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?LinkId=619979)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To see the full code, download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Universal Windows Platform (UWP) print sample</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows-universal-samples repo</pc> on GitHub.</source>
          <target xml:space="preserve">To see the full code, download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Universal Windows Platform (UWP) print sample</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows-universal-samples repo</pc> on GitHub.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Register for printing</source>
          <target xml:space="preserve">Register for printing</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">The first step to add printing to your app is to register for the Print contract.</source>
          <target xml:space="preserve">The first step to add printing to your app is to register for the Print contract.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Your app must do this on every screen from which you want your customer to be able to print.</source>
          <target xml:space="preserve">Your app must do this on every screen from which you want your customer to be able to print.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Only the screen that is displayed to the user can be registered for printing.</source>
          <target xml:space="preserve">Only the screen that is displayed to the user can be registered for printing.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">If one screen of your app has registered for printing, it must unregister for printing when it exits.</source>
          <target xml:space="preserve">If one screen of your app has registered for printing, it must unregister for printing when it exits.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">If it is replaced by another screen, the next screen must register for a new Print contract when it opens.</source>
          <target xml:space="preserve">If it is replaced by another screen, the next screen must register for a new Print contract when it opens.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  If you need to support printing from more than one page in your app, you can put this print code in a common helper class and have your app pages reuse it.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  If you need to support printing from more than one page in your app, you can put this print code in a common helper class and have your app pages reuse it.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">`PrintHelper`</data>
          <data id="id2">[</data>
          <data id="id3">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For an example of how to do this, see the <ph dataRef="id1" id="ph1" /> class in the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">UWP print sample</pc>.</source>
          <target xml:space="preserve">For an example of how to do this, see the <ph dataRef="id1" id="ph1" /> class in the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">UWP print sample</pc>.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR226426)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR243314)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">First, declare the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintManager</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PrintDocument</pc></pc>.</source>
          <target xml:space="preserve">First, declare the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintManager</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PrintDocument</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/BR226489)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintManager</pc> type is in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.Graphics.Printing</pc></pc> namespace along with types to support other Windows printing functionality.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintManager</pc> type is in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.Graphics.Printing</pc></pc> namespace along with types to support other Windows printing functionality.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/BR243325)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintDocument</pc> type is in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.UI.Xaml.Printing</pc></pc> namespace along with other types that support preparing XAML content for printing.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintDocument</pc> type is in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.UI.Xaml.Printing</pc></pc> namespace along with other types that support preparing XAML content for printing.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can make it easier to write your printing code by adding the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Imports</pc> statements to your page.</source>
          <target xml:space="preserve">You can make it easier to write your printing code by adding the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Imports</pc> statements to your page.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR243314)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR226426)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintDocument</pc></pc> class is used to handle much of the interaction between the app and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PrintManager</pc></pc>, but it exposes several callbacks of its own.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintDocument</pc></pc> class is used to handle much of the interaction between the app and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PrintManager</pc></pc>, but it exposes several callbacks of its own.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">During registration, create instances of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintManager</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintDocument</pc> and register handlers for their printing events.</source>
          <target xml:space="preserve">During registration, create instances of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintManager</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintDocument</pc> and register handlers for their printing events.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
          <data id="id3">`RegisterForPrinting`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UWP print sample</pc>, registration is performed by the <ph dataRef="id3" id="ph1" /> method.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UWP print sample</pc>, registration is performed by the <ph dataRef="id3" id="ph1" /> method.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">`OnNavigatedTo`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When the user goes to a page that supports, it initiates the registration within the <ph dataRef="id1" id="ph1" /> method.</source>
          <target xml:space="preserve">When the user goes to a page that supports, it initiates the registration within the <ph dataRef="id1" id="ph1" /> method.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">When the user leaves the page, disconnect the printing event handlers.</source>
          <target xml:space="preserve">When the user leaves the page, disconnect the printing event handlers.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">If you have a multiple-page app and don't disconnect printing, an exception is thrown when the user leaves the page and then comes back to it.</source>
          <target xml:space="preserve">If you have a multiple-page app and don't disconnect printing, an exception is thrown when the user leaves the page and then comes back to it.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Create a print button</source>
          <target xml:space="preserve">Create a print button</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Add a print button to your app's screen where you'd like it to appear.</source>
          <target xml:space="preserve">Add a print button to your app's screen where you'd like it to appear.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">Make sure that it doesn't interfere with the content that you want to print.</source>
          <target xml:space="preserve">Make sure that it doesn't interfere with the content that you want to print.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Next, add an event handler to your app's code to handle the click event.</source>
          <target xml:space="preserve">Next, add an event handler to your app's code to handle the click event.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.graphics.printing.printmanager.showprintuiasync)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ShowPrintUIAsync</pc></pc> method to start printing from your app.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ShowPrintUIAsync</pc></pc> method to start printing from your app.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ShowPrintUIAsync</pc> is an asynchronous method that displays the appropriate printing window.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ShowPrintUIAsync</pc> is an asynchronous method that displays the appropriate printing window.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">If printing can't be performed at that time, the method will throw an exception.</source>
          <target xml:space="preserve">If printing can't be performed at that time, the method will throw an exception.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">We recommend catching these exceptions and letting the user know when printing can't proceed, as shown here.</source>
          <target xml:space="preserve">We recommend catching these exceptions and letting the user know when printing can't proceed, as shown here.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">In this example, a print window is displayed in the event handler for a button click.</source>
          <target xml:space="preserve">In this example, a print window is displayed in the event handler for a button click.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn633972)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the method throws an exception (because printing can't be performed at that time), a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContentDialog</pc></pc> control informs the user of the situation.</source>
          <target xml:space="preserve">If the method throws an exception (because printing can't be performed at that time), a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContentDialog</pc></pc> control informs the user of the situation.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Format your app's content</source>
          <target xml:space="preserve">Format your app's content</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br206597)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ShowPrintUIAsync</pc> is called, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PrintTaskRequested</pc></pc> event is raised.</source>
          <target xml:space="preserve">When <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ShowPrintUIAsync</pc> is called, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PrintTaskRequested</pc></pc> event is raised.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/BR226436)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/BR226436request_createprinttask)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">[</data>
          <data id="id12">](https://msdn.microsoft.com/library/windows/apps/windows.graphics.printing.printtask.source)</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintTaskRequested</pc> event handler shown in this step creates a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PrintTask</pc></pc> by calling the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">PrintTaskRequest.CreatePrintTask</pc></pc> method and passes the title for the print page and the name of a <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">PrintTaskSourceRequestedHandler</pc></pc> delegate.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintTaskRequested</pc> event handler shown in this step creates a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PrintTask</pc></pc> by calling the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">PrintTaskRequest.CreatePrintTask</pc></pc> method and passes the title for the print page and the name of a <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">PrintTaskSourceRequestedHandler</pc></pc> delegate.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Notice that in this example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintTaskSourceRequestedHandler</pc> is defined inline.</source>
          <target xml:space="preserve">Notice that in this example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintTaskSourceRequestedHandler</pc> is defined inline.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintTaskSourceRequestedHandler</pc> provides the formatted content for printing and is described later.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PrintTaskSourceRequestedHandler</pc> provides the formatted content for printing and is described later.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">In this example, a completion handler is also defined to catch errors.</source>
          <target xml:space="preserve">In this example, a completion handler is also defined to catch errors.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">It's a good idea to handle completion events because then your app can let the user know if an error occurred and provide possible solutions.</source>
          <target xml:space="preserve">It's a good idea to handle completion events because then your app can let the user know if an error occurred and provide possible solutions.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Likewise, your app could use the completion event to indicate subsequent steps for the user to take after the print job is successful.</source>
          <target xml:space="preserve">Likewise, your app could use the completion event to indicate subsequent steps for the user to take after the print job is successful.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR226426)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.printing.printdocument.paginate)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">After the print task is created, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintManager</pc></pc> requests a collection of print pages to show in the print preview UI by raising the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Paginate</pc></pc> event.</source>
          <target xml:space="preserve">After the print task is created, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintManager</pc></pc> requests a collection of print pages to show in the print preview UI by raising the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Paginate</pc></pc> event.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This corresponds with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Paginate</pc> method of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPrintPreviewPageCollection</pc> interface.</source>
          <target xml:space="preserve">This corresponds with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Paginate</pc> method of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPrintPreviewPageCollection</pc> interface.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">The event handler you created during registration will be called at this time.</source>
          <target xml:space="preserve">The event handler you created during registration will be called at this time.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  If the user changes print settings, the paginate event handler will be called again to allow you to reflow the content.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  If the user changes print settings, the paginate event handler will be called again to allow you to reflow the content.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">For the best user experience, we recommend checking the settings before you reflow the content and avoid reinitializing the paginated content when it's not necessary.</source>
          <target xml:space="preserve">For the best user experience, we recommend checking the settings before you reflow the content and avoid reinitializing the paginated content when it's not necessary.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.printing.printdocument.paginate)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`CreatePrintPreviewPages`</data>
          <data id="id6">[</data>
          <data id="id7">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Paginate</pc></pc> event handler (the <ph dataRef="id5" id="ph1" /> method in the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">UWP print sample</pc>), create the pages to show in the print preview UI and to send to the printer.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Paginate</pc></pc> event handler (the <ph dataRef="id5" id="ph1" /> method in the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">UWP print sample</pc>), create the pages to show in the print preview UI and to send to the printer.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">The code you use to prepare your app's content for printing is specific to your app and the content you print.</source>
          <target xml:space="preserve">The code you use to prepare your app's content for printing is specific to your app and the content you print.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UWP print sample</pc> source code to see how it formats its content for printing.</source>
          <target xml:space="preserve">Refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UWP print sample</pc> source code to see how it formats its content for printing.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR226426)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.printing.printdocument.getpreviewpage)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When a particular page is to be shown in the print preview window, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintManager</pc></pc> raises the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetPreviewPage</pc></pc> event.</source>
          <target xml:space="preserve">When a particular page is to be shown in the print preview window, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintManager</pc></pc> raises the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetPreviewPage</pc></pc> event.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This corresponds with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MakePage</pc> method of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPrintPreviewPageCollection</pc> interface.</source>
          <target xml:space="preserve">This corresponds with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MakePage</pc> method of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPrintPreviewPageCollection</pc> interface.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">The event handler you created during registration will be called at this time.</source>
          <target xml:space="preserve">The event handler you created during registration will be called at this time.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.printing.printdocument.getpreviewpage)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`GetPrintPreviewPage`</data>
          <data id="id6">[</data>
          <data id="id7">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetPreviewPage</pc></pc> event handler (the <ph dataRef="id5" id="ph1" /> method in the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">UWP print sample</pc>), set the appropriate page on the print document.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetPreviewPage</pc></pc> event handler (the <ph dataRef="id5" id="ph1" /> method in the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">UWP print sample</pc>), set the appropriate page on the print document.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR226426)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Finally, once the user clicks the print button, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintManager</pc></pc> requests the final collection of pages to send to the printer by calling the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MakeDocument</pc> method of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">IDocumentPageSource</pc> interface.</source>
          <target xml:space="preserve">Finally, once the user clicks the print button, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintManager</pc></pc> requests the final collection of pages to send to the printer by calling the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MakeDocument</pc> method of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">IDocumentPageSource</pc> interface.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.printing.printdocument.addpages)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In XAML, this raises the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AddPages</pc></pc> event.</source>
          <target xml:space="preserve">In XAML, this raises the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AddPages</pc></pc> event.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">The event handler you created during registration will be called at this time.</source>
          <target xml:space="preserve">The event handler you created during registration will be called at this time.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.printing.printdocument.addpages)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`AddPrintPages`</data>
          <data id="id6">[</data>
          <data id="id7">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
          <data id="id8">[</data>
          <data id="id9">](https://msdn.microsoft.com/library/windows/apps/BR243314)</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AddPages</pc></pc> event handler (the <ph dataRef="id5" id="ph1" /> method in the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">UWP print sample</pc>), add pages from the page collection to the <pc dataRefEnd="id9" dataRefStart="id8" id="p4"><pc dataRefEnd="id11" dataRefStart="id10" id="p5">PrintDocument</pc></pc> object to be sent to the printer.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AddPages</pc></pc> event handler (the <ph dataRef="id5" id="ph1" /> method in the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">UWP print sample</pc>), add pages from the page collection to the <pc dataRefEnd="id9" dataRefStart="id8" id="p4"><pc dataRefEnd="id11" dataRefStart="id10" id="p5">PrintDocument</pc></pc> object to be sent to the printer.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source xml:space="preserve">If a user specifies particular pages or a range of pages to print, you use that information here to add only the pages that will actually be sent to the printer.</source>
          <target xml:space="preserve">If a user specifies particular pages or a range of pages to print, you use that information here to add only the pages that will actually be sent to the printer.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">Prepare print options</source>
          <target xml:space="preserve">Prepare print options</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">Next prepare print options.</source>
          <target xml:space="preserve">Next prepare print options.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">As an example, this section will describe how to set the page range option to allow printing of specific pages.</source>
          <target xml:space="preserve">As an example, this section will describe how to set the page range option to allow printing of specific pages.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](customize-the-print-preview-ui.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more advanced options, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Customize the print preview UI</pc>.</source>
          <target xml:space="preserve">For more advanced options, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Customize the print preview UI</pc>.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source xml:space="preserve">This step creates a new print option, defines a list of values that the option supports, and then adds the option to the print preview UI.</source>
          <target xml:space="preserve">This step creates a new print option, defines a list of values that the option supports, and then adds the option to the print preview UI.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">The page range option has these settings:</source>
          <target xml:space="preserve">The page range option has these settings:</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source xml:space="preserve">Option name</source>
          <target xml:space="preserve">Option name</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">Action</source>
          <target xml:space="preserve">Action</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source xml:space="preserve">Print all</source>
          <target xml:space="preserve">Print all</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source xml:space="preserve">Print all pages in the document.</source>
          <target xml:space="preserve">Print all pages in the document.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source xml:space="preserve">Print Selection</source>
          <target xml:space="preserve">Print Selection</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source xml:space="preserve">Print only the content the user selected.</source>
          <target xml:space="preserve">Print only the content the user selected.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source xml:space="preserve">Print Range</source>
          <target xml:space="preserve">Print Range</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">Display an edit control into which the user can enter the pages to print.</source>
          <target xml:space="preserve">Display an edit control into which the user can enter the pages to print.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206597)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/Hh701256)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">First, modify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintTaskRequested</pc></pc> event handler to add the code to get a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PrintTaskOptionDetails</pc></pc> object.</source>
          <target xml:space="preserve">First, modify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PrintTaskRequested</pc></pc> event handler to add the code to get a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PrintTaskOptionDetails</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source xml:space="preserve">Clear the list of options that are shown in the print preview UI and add the options that you want to display when the user wants to print from the app.</source>
          <target xml:space="preserve">Clear the list of options that are shown in the print preview UI and add the options that you want to display when the user wants to print from the app.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The options appear in the print preview UI in the same order they are appended, with the first option shown at the top of the window.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The options appear in the print preview UI in the same order they are appended, with the first option shown at the top of the window.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source xml:space="preserve">Create the new print option and initialize the list of option values.</source>
          <target xml:space="preserve">Create the new print option and initialize the list of option values.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">Add your custom print option and assign the event handler.</source>
          <target xml:space="preserve">Add your custom print option and assign the event handler.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source xml:space="preserve">The custom option is appended last so that it appears at the bottom of the list of options.</source>
          <target xml:space="preserve">The custom option is appended last so that it appears at the bottom of the list of options.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source xml:space="preserve">But you can put it anywhere in the list, custom print options don't need to be added last.</source>
          <target xml:space="preserve">But you can put it anywhere in the list, custom print options don't need to be added last.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.graphics.printing.optiondetails.printtaskoptiondetails.createtextoption)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateTextOption</pc></pc> method creates the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Range</pc> text box.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateTextOption</pc></pc> method creates the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Range</pc> text box.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This is where the user enters the specific pages they want to print when they select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Print Range</pc> option.</source>
          <target xml:space="preserve">This is where the user enters the specific pages they want to print when they select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Print Range</pc> option.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source xml:space="preserve">Handle print option changes</source>
          <target xml:space="preserve">Handle print option changes</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OptionChanged</pc> event handler does two things.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OptionChanged</pc> event handler does two things.</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source xml:space="preserve">First, it shows and hides the text edit field for the page range depending on the page range option that the user selected.</source>
          <target xml:space="preserve">First, it shows and hides the text edit field for the page range depending on the page range option that the user selected.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source xml:space="preserve">Second, it tests the text entered into the page range text box to make sure that it represents a valid page range for the document.</source>
          <target xml:space="preserve">Second, it tests the text entered into the page range text box to make sure that it represents a valid page range for the document.</target>
        </segment>
      </unit>
      <unit id="193">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example shows how the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UWP print sample</pc> handles change events.</source>
          <target xml:space="preserve">This example shows how the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UWP print sample</pc> handles change events.</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`GetPagesInRange`</data>
          <data id="id4">[</data>
          <data id="id5">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  See the <ph dataRef="id3" id="ph1" /> method in the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">UWP print sample</pc> for details on how to parse the page range the user enters in the Range text box.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tip</pc>  See the <ph dataRef="id3" id="ph1" /> method in the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">UWP print sample</pc> for details on how to parse the page range the user enters in the Range text box.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source xml:space="preserve">Preview selected pages</source>
          <target xml:space="preserve">Preview selected pages</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source xml:space="preserve">How you format your app's content for printing depends on the nature of your app and its content.</source>
          <target xml:space="preserve">How you format your app's content for printing depends on the nature of your app and its content.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=619984)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UWP print sample</pc> uses a print helper class to format its content for printing.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UWP print sample</pc> uses a print helper class to format its content for printing.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source xml:space="preserve">When printing a subset of the pages, there are several ways to show the content in the print preview.</source>
          <target xml:space="preserve">When printing a subset of the pages, there are several ways to show the content in the print preview.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source xml:space="preserve">Regardless of the method you chose to show the page range in the print preview, the printed output must contain only the selected pages.</source>
          <target xml:space="preserve">Regardless of the method you chose to show the page range in the print preview, the printed output must contain only the selected pages.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source xml:space="preserve">Show all the pages in the print preview whether a page range is specified or not, leaving the user to know which pages will actually be printed.</source>
          <target xml:space="preserve">Show all the pages in the print preview whether a page range is specified or not, leaving the user to know which pages will actually be printed.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source xml:space="preserve">Show only the pages selected by the user's page range in the print preview, updating the display whenever the user changes the page range.</source>
          <target xml:space="preserve">Show only the pages selected by the user's page range in the print preview, updating the display whenever the user changes the page range.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source xml:space="preserve">Show all the pages in print preview, but grey out the pages that are not in page range selected by the user.</source>
          <target xml:space="preserve">Show all the pages in print preview, but grey out the pages that are not in page range selected by the user.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source xml:space="preserve">Related topics</source>
          <target xml:space="preserve">Related topics</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source xml:space="preserve">Design guidelines for printing</source>
          <target xml:space="preserve">Design guidelines for printing</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source xml:space="preserve">//Build 2015 video: Developing apps that print in Windows 10</source>
          <target xml:space="preserve">//Build 2015 video: Developing apps that print in Windows 10</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source xml:space="preserve">UWP print sample</source>
          <target xml:space="preserve">UWP print sample</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>