<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">23cb0dafe7afdbe10fbf31094ed6ba7886f7e67e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">description: This article explains how to add dragging and dropping in your Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">description: This article explains how to add dragging and dropping in your Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Drag and drop</source>
          <target xml:space="preserve">title: Drag and drop</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: A15ED2F5-1649-4601-A761-0F6C707A8B7E</source>
          <target xml:space="preserve">ms.assetid: A15ED2F5-1649-4601-A761-0F6C707A8B7E</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Drag and drop</source>
          <target xml:space="preserve">Drag and drop</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">This article explains how to add dragging and dropping in your Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">This article explains how to add dragging and dropping in your Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Drag and drop is a classic, natural way of interacting with content such as images and files.</source>
          <target xml:space="preserve">Drag and drop is a classic, natural way of interacting with content such as images and files.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Once implemented, drag and drop works seamlessly in all directions, including app-to-app, app-to-desktop, and desktop-to app.</source>
          <target xml:space="preserve">Once implemented, drag and drop works seamlessly in all directions, including app-to-app, app-to-desktop, and desktop-to app.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">Set valid areas</source>
          <target xml:space="preserve">Set valid areas</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AllowDrop</pc>][AllowDrop] and [<pc dataRefEnd="id4" dataRefStart="id3" id="p2">CanDrag</pc>][CanDrag] properties to designate the areas of your app valid for dragging and dropping.</source>
          <target xml:space="preserve">Use the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AllowDrop</pc>][AllowDrop] and [<pc dataRefEnd="id4" dataRefStart="id3" id="p2">CanDrag</pc>][CanDrag] properties to designate the areas of your app valid for dragging and dropping.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The markup below shows how to set a specific area of the app as a valid for dropping using the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AllowDrop</pc>][AllowDrop] in XAML.</source>
          <target xml:space="preserve">The markup below shows how to set a specific area of the app as a valid for dropping using the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AllowDrop</pc>][AllowDrop] in XAML.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">If a user tries to drop somewhere else, the system won't let them.</source>
          <target xml:space="preserve">If a user tries to drop somewhere else, the system won't let them.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">If you want users to be able to drop items anywhere on your app, set the entire background as a drop target.</source>
          <target xml:space="preserve">If you want users to be able to drop items anywhere on your app, set the entire background as a drop target.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/drag_drop/cs/MainPage.xaml#SnippetDropArea)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</source>
          <target xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">With dragging, you'll usually want to be specific about what's draggable.</source>
          <target xml:space="preserve">With dragging, you'll usually want to be specific about what's draggable.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Users will want to drag certain items, like pictures, not everything in your app.</source>
          <target xml:space="preserve">Users will want to drag certain items, like pictures, not everything in your app.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Here's how to set [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CanDrag</pc>][CanDrag] using XAML.</source>
          <target xml:space="preserve">Here's how to set [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CanDrag</pc>][CanDrag] using XAML.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/drag_drop/cs/MainPage.xaml#SnippetDragArea)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</source>
          <target xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">You don't need to do any other work to allow dragging, unless you want to customize the UI (which is covered later in this article).</source>
          <target xml:space="preserve">You don't need to do any other work to allow dragging, unless you want to customize the UI (which is covered later in this article).</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Dropping requires a few more steps.</source>
          <target xml:space="preserve">Dropping requires a few more steps.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Handle the DragOver event</source>
          <target xml:space="preserve">Handle the DragOver event</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DragOver</pc>][DragOver] event fires when a user has dragged an item over your app, but not yet dropped it.</source>
          <target xml:space="preserve">The [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DragOver</pc>][DragOver] event fires when a user has dragged an item over your app, but not yet dropped it.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this handler, you need to specify what kind of operations your app supports using the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DragEventArgs.AcceptedOperation</pc>][AcceptedOperation] property.</source>
          <target xml:space="preserve">In this handler, you need to specify what kind of operations your app supports using the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DragEventArgs.AcceptedOperation</pc>][AcceptedOperation] property.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Copy is the most common.</source>
          <target xml:space="preserve">Copy is the most common.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/drag_drop/cs/MainPage.xaml.cs#SnippetGrid_DragOver)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Process the Drop event</source>
          <target xml:space="preserve">Process the Drop event</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Drop</pc>][Drop] event occurs when the user releases items in a valid drop area.</source>
          <target xml:space="preserve">The [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Drop</pc>][Drop] event occurs when the user releases items in a valid drop area.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Process them using the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DragEventArgs.DataView</pc>][DataView] property.</source>
          <target xml:space="preserve">Process them using the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DragEventArgs.DataView</pc>][DataView] property.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">For simplicity in the example below, we'll assume the user dropped a single photo and access.</source>
          <target xml:space="preserve">For simplicity in the example below, we'll assume the user dropped a single photo and access.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">In reality, users can drop multiple items of varying formats simultaneously.</source>
          <target xml:space="preserve">In reality, users can drop multiple items of varying formats simultaneously.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Your app should handle this possibility by checking what types of files were dropped and processing them accordingly, and notifying the user if they're trying to do something your app don't support.</source>
          <target xml:space="preserve">Your app should handle this possibility by checking what types of files were dropped and processing them accordingly, and notifying the user if they're trying to do something your app don't support.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/drag_drop/cs/MainPage.xaml.cs#SnippetGrid_Drop)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Customize the UI</source>
          <target xml:space="preserve">Customize the UI</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">The system provides a default UI for dragging and dropping.</source>
          <target xml:space="preserve">The system provides a default UI for dragging and dropping.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">However, you can also choose to customize various parts of the UI by setting custom captions and glyphs, or by opting not to show a UI at all.</source>
          <target xml:space="preserve">However, you can also choose to customize various parts of the UI by setting custom captions and glyphs, or by opting not to show a UI at all.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To customize the UI, use the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DragUIOverride</pc>][DragUiOverride] property in the [<pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragOver</pc>][DragOver] event handler.</source>
          <target xml:space="preserve">To customize the UI, use the [<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DragUIOverride</pc>][DragUiOverride] property in the [<pc dataRefEnd="id4" dataRefStart="id3" id="p2">DragOver</pc>][DragOver] event handler.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/drag_drop/cs/MainPage.xaml.cs#SnippetGrid_DragOverCustom)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Main</pc>]</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>