<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">c90ab2e265a02e42262c86460aa75b087c2f1cfe</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Message Compiler Properties for Driver Projects</source>
          <target xml:space="preserve">Message Compiler Properties for Driver Projects</target>
        </segment>
      </unit>
      <unit id="102">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Aa385638)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Sets the properties for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Message Compiler (MC.exe)</pc></pc> tool.</source>
          <target xml:space="preserve">Sets the properties for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Message Compiler (MC.exe)</pc></pc> tool.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">The compiler generates the message resource files that you can add to your project.</source>
          <target xml:space="preserve">The compiler generates the message resource files that you can add to your project.</target>
        </segment>
      </unit>
      <unit id="104">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff545699)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, if you are using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event Tracing for Windows (ETW)</pc> kernel-mode API to add event tracing to a kernel-mode driver, you could use the message compiler to create a header file that contains definitions for the event provider, event attributes, channels, and events.</source>
          <target xml:space="preserve">For example, if you are using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event Tracing for Windows (ETW)</pc> kernel-mode API to add event tracing to a kernel-mode driver, you could use the message compiler to create a header file that contains definitions for the event provider, event attributes, channels, and events.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">You must include this header file in your source code.</source>
          <target xml:space="preserve">You must include this header file in your source code.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">The message compiler creates a resource compiler script (\*.rc) that you add to your project file.</source>
          <target xml:space="preserve">The message compiler creates a resource compiler script (\*.rc) that you add to your project file.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">&lt;span id="Setting_Message_Compiler_properties_for_driver_projects"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="setting_message_compiler_properties_for_driver_projects"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="SETTING_MESSAGE_COMPILER_PROPERTIES_FOR_DRIVER_PROJECTS"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Setting Message Compiler properties for driver projects</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Setting Message Compiler properties for driver projects</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Open the property pages for your driver project.</source>
          <target xml:space="preserve">Open the property pages for your driver project.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Right-click the driver project in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Properties</pc>.</source>
          <target xml:space="preserve">Right-click the driver project in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Properties</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the property pages for the driver project, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Message Compiler</pc>.</source>
          <target xml:space="preserve">In the property pages for the driver project, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Message Compiler</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Set the properties for the project.</source>
          <target xml:space="preserve">Set the properties for the project.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">This property page is available if you add a message text file (.mc) or a manifest (.man) to your solution.</source>
          <target xml:space="preserve">This property page is available if you add a message text file (.mc) or a manifest (.man) to your solution.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Option</source>
          <target xml:space="preserve">Option</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Description</source>
          <target xml:space="preserve">Description</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Additional Options</source>
          <target xml:space="preserve">Additional Options</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Aa385638"&gt;&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specifies additional options to pass to the <ph dataRef="id1" id="ph1" />Message Compiler (MC.exe)<ph dataRef="id2" id="ph2" /> tool.</source>
          <target xml:space="preserve">Specifies additional options to pass to the <ph dataRef="id1" id="ph1" />Message Compiler (MC.exe)<ph dataRef="id2" id="ph2" /> tool.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Ansi Input File</source>
          <target xml:space="preserve">Ansi Input File</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Specifies that the input file contains ANSI content (this is the default).</source>
          <target xml:space="preserve">Specifies that the input file contains ANSI content (this is the default).</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-a<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-a<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Ansi Message In Bin File</source>
          <target xml:space="preserve">Ansi Message In Bin File</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Specifies that the messages in the output .bin file should be ANSI.</source>
          <target xml:space="preserve">Specifies that the messages in the output .bin file should be ANSI.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-A<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-A<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Baseline Path</source>
          <target xml:space="preserve">Baseline Path</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">The path must point to the folder that contains the .BIN files that the baseline operation created.</source>
          <target xml:space="preserve">The path must point to the folder that contains the .BIN files that the baseline operation created.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-t<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />directory<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-t<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />directory<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Baseline Resource Path</source>
          <target xml:space="preserve">Baseline Resource Path</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">The folder which contains the baseline manifest files.</source>
          <target xml:space="preserve">The folder which contains the baseline manifest files.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-s<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />directory<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-s<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />directory<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Debug Output Path</source>
          <target xml:space="preserve">Debug Output Path</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">The path in which to place the .dbg C include file.</source>
          <target xml:space="preserve">The path in which to place the .dbg C include file.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-x<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />path<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-x<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />path<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Enable Callout Macro</source>
          <target xml:space="preserve">Enable Callout Macro</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">Adds a callout macro to invoke user code at logging.</source>
          <target xml:space="preserve">Adds a callout macro to invoke user code at logging.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Not available for C#, and ignored.</source>
          <target xml:space="preserve">Not available for C#, and ignored.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-co<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-co<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Enable Debug Output Path</source>
          <target xml:space="preserve">Enable Debug Output Path</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Enables the compiler to place the .dbg C include file specified by the <ph dataRef="id1" id="ph1" />Debug Output Path<ph dataRef="id2" id="ph2" /> property.</source>
          <target xml:space="preserve">Enables the compiler to place the .dbg C include file specified by the <ph dataRef="id1" id="ph1" />Debug Output Path<ph dataRef="id2" id="ph2" /> property.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">File extension for the generated header</source>
          <target xml:space="preserve">File extension for the generated header</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">Specifies the extension of the generated header file.</source>
          <target xml:space="preserve">Specifies the extension of the generated header file.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-e<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />extension<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-e<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />extension<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Generate Baseline Resource</source>
          <target xml:space="preserve">Generate Baseline Resource</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">Creates a baseline of your instrumentation.</source>
          <target xml:space="preserve">Creates a baseline of your instrumentation.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">Generate C# (managed) logging class</source>
          <target xml:space="preserve">Generate C# (managed) logging class</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Generates a C# (managed) logging class that includes methods that you would call to log events in your manifest.</source>
          <target xml:space="preserve">Generates a C# (managed) logging class that includes methods that you would call to log events in your manifest.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-cs<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />namespace<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-cs<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />namespace<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Generate header file for containing counter names and GUIDs</source>
          <target xml:space="preserve">Generate header file for containing counter names and GUIDs</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Use this option to specify the folder into which you want the compiler to place the generated header file.</source>
          <target xml:space="preserve">Use this option to specify the folder into which you want the compiler to place the generated header file.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Generate Kernel Mode Logging Macros</source>
          <target xml:space="preserve">Generate Kernel Mode Logging Macros</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Generates kernel-mode logging macros.</source>
          <target xml:space="preserve">Generates kernel-mode logging macros.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-km<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-km<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">Generate MOF File</source>
          <target xml:space="preserve">Generate MOF File</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">Generate down-level support for all functions and macros generated.</source>
          <target xml:space="preserve">Generate down-level support for all functions and macros generated.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">MOF file will be generated from the manifest.</source>
          <target xml:space="preserve">MOF file will be generated from the manifest.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">MOF file will be placed in the location specified by the <ph dataRef="id1" id="ph1" />-h<ph dataRef="id2" id="ph2" /> option (<ph dataRef="id3" id="ph3" />-mof<ph dataRef="id4" id="ph4" />).</source>
          <target xml:space="preserve">MOF file will be placed in the location specified by the <ph dataRef="id1" id="ph1" />-h<ph dataRef="id2" id="ph2" /> option (<ph dataRef="id3" id="ph3" />-mof<ph dataRef="id4" id="ph4" />).</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">Generate OLE2 Header</source>
          <target xml:space="preserve">Generate OLE2 Header</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">Generates an OLE2 header file.</source>
          <target xml:space="preserve">Generates an OLE2 header file.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-o<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-o<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">Generate static C# (managed) logging class</source>
          <target xml:space="preserve">Generate static C# (managed) logging class</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">Generates a static C# (managed) logging class that includes methods that you would call to log events in your manifest.</source>
          <target xml:space="preserve">Generates a static C# (managed) logging class that includes methods that you would call to log events in your manifest.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-css<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />namespace<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-css<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />namespace<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">Generate User Mode Logging Macros</source>
          <target xml:space="preserve">Generate User Mode Logging Macros</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">Generate user-mode logging macros.</source>
          <target xml:space="preserve">Generate user-mode logging macros.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-um<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-um<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">Generated Files Base Name</source>
          <target xml:space="preserve">Generated Files Base Name</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source xml:space="preserve">Specifies the base name of all generated files.</source>
          <target xml:space="preserve">Specifies the base name of all generated files.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-z<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />basename<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-z<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />basename<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">Generated RC and Binary Message Files Path</source>
          <target xml:space="preserve">Generated RC and Binary Message Files Path</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">Specifies the path to the generated the RC and binary message files.</source>
          <target xml:space="preserve">Specifies the path to the generated the RC and binary message files.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">Header File Path</source>
          <target xml:space="preserve">Header File Path</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source xml:space="preserve">Specifies the path the generated header file.</source>
          <target xml:space="preserve">Specifies the path the generated header file.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-h<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />path<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-h<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />path<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source xml:space="preserve">Maximum Message Length</source>
          <target xml:space="preserve">Maximum Message Length</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">Use this argument to have the compiler generate a warning if any message exceeds length characters.</source>
          <target xml:space="preserve">Use this argument to have the compiler generate a warning if any message exceeds length characters.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-m<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />length<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-m<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />length<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source xml:space="preserve">Prefix Macro Name</source>
          <target xml:space="preserve">Prefix Macro Name</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source xml:space="preserve">Use this argument to override the default prefix that the compiler uses for the logging macro names and method names.</source>
          <target xml:space="preserve">Use this argument to override the default prefix that the compiler uses for the logging macro names and method names.</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-p<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />prefix<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-p<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />prefix<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source xml:space="preserve">RC File Path</source>
          <target xml:space="preserve">RC File Path</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">The folder into which you want the compiler to place the generated resource compiler script (.rc file) and the generated .bin files.</source>
          <target xml:space="preserve">The folder into which you want the compiler to place the generated resource compiler script (.rc file) and the generated .bin files.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-r<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />path<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-r<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />path<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source xml:space="preserve">Remove Characters From Symbolic Name</source>
          <target xml:space="preserve">Remove Characters From Symbolic Name</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">Use this argument to remove characters from the beginning of the symbolic name that you specified for the event.</source>
          <target xml:space="preserve">Use this argument to remove characters from the beginning of the symbolic name that you specified for the event.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3"> &lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-P<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />prefix<ph dataRef="id4" id="ph4" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-P<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />prefix<ph dataRef="id4" id="ph4" />)</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">Set Customer Bit</source>
          <target xml:space="preserve">Set Customer Bit</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source xml:space="preserve">Sets the Customer bit in the entire message Ids.</source>
          <target xml:space="preserve">Sets the Customer bit in the entire message Ids.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-c<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-c<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source xml:space="preserve">Terminate Message With Null</source>
          <target xml:space="preserve">Terminate Message With Null</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source xml:space="preserve">Terminates all strings with nulls in the message tables.</source>
          <target xml:space="preserve">Terminates all strings with nulls in the message tables.</target>
        </segment>
      </unit>
      <unit id="189">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-n<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-n<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source xml:space="preserve">Unicode Input File</source>
          <target xml:space="preserve">Unicode Input File</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source xml:space="preserve">Specifies that the input file contains Unicode content.</source>
          <target xml:space="preserve">Specifies that the input file contains Unicode content.</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-u<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-u<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source xml:space="preserve">The default is ANSI.</source>
          <target xml:space="preserve">The default is ANSI.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source xml:space="preserve">Unicode Message In Bin File</source>
          <target xml:space="preserve">Unicode Message In Bin File</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source xml:space="preserve">Specifies that the messages in the output .bin file are Unicode.</source>
          <target xml:space="preserve">Specifies that the messages in the output .bin file are Unicode.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-U<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-U<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source xml:space="preserve">This is the default.</source>
          <target xml:space="preserve">This is the default.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source xml:space="preserve">Use Base Name Of Input</source>
          <target xml:space="preserve">Use Base Name Of Input</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source xml:space="preserve">Use this argument to have the compiler use the base name of the input file for the name of the output .bin files.</source>
          <target xml:space="preserve">Use this argument to have the compiler use the base name of the input file for the name of the output .bin files.</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-b<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-b<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source xml:space="preserve">Use Decimal Values</source>
          <target xml:space="preserve">Use Decimal Values</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source xml:space="preserve">Use this argument to use decimal values for the Severity and Facility constants in the header file instead of hexadecimal values.</source>
          <target xml:space="preserve">Use this argument to use decimal values for the Severity and Facility constants in the header file instead of hexadecimal values.</target>
        </segment>
      </unit>
      <unit id="203">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-d<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-d<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source xml:space="preserve">Validate Against Baseline Resource</source>
          <target xml:space="preserve">Validate Against Baseline Resource</target>
        </segment>
      </unit>
      <unit id="205">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use this argument when you create a new version of your manifest and want to check it for application compatibility against the baseline that you created using the <ph dataRef="id1" id="ph1" />-s<ph dataRef="id2" id="ph2" /> option.</source>
          <target xml:space="preserve">Use this argument when you create a new version of your manifest and want to check it for application compatibility against the baseline that you created using the <ph dataRef="id1" id="ph1" />-s<ph dataRef="id2" id="ph2" /> option.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source xml:space="preserve">Verbose</source>
          <target xml:space="preserve">Verbose</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source xml:space="preserve">Use this option to generate verbose output.</source>
          <target xml:space="preserve">Use this option to generate verbose output.</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">(<ph dataRef="id1" id="ph1" />-v<ph dataRef="id2" id="ph2" />)</source>
          <target xml:space="preserve">(<ph dataRef="id1" id="ph1" />-v<ph dataRef="id2" id="ph2" />)</target>
        </segment>
      </unit>
      <unit id="209">
        <originalData>
          <data id="id1">&lt;span id="related_topics"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />Related topics</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />Related topics</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source xml:space="preserve">Message Compiler (MC.exe)</source>
          <target xml:space="preserve">Message Compiler (MC.exe)</target>
        </segment>
      </unit>
      <unit id="211">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh454286)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WDK and Visual Studio build environment</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WDK and Visual Studio build environment</pc>
					</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source xml:space="preserve">Message compiler task</source>
          <target xml:space="preserve">Message compiler task</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source xml:space="preserve">Event Tracing for Windows (ETW)</source>
          <target xml:space="preserve">Event Tracing for Windows (ETW)</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">]</data>
          <data id="id3">(mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback%20[VsDriver\vsdriver]:%20Message%20Compiler%20Properties%20for%20Driver%20Projects%20%20RELEASE:%20%289/30/2015%29&amp;body=%0A%0APRIVACY%20STATEMENT%0A%0AWe%20use%20your%20feedback%20to%20improve%20the%20documentation.%20We%20don't%20use%20your%20email%20address%20for%20any%20other%20purpose,%20and%20we'll%20remove%20your%20email%20address%20from%20our%20system%20after%20the%20issue%20that%20you're%20reporting%20is%20fixed.%20While%20we're%20working%20to%20fix%20this%20issue,%20we%20might%20send%20you%20an%20email%20message%20to%20ask%20for%20more%20info.%20Later,%20we%20might%20also%20send%20you%20an%20email%20message%20to%20let%20you%20know%20that%20we've%20addressed%20your%20feedback.%0A%0AFor%20more%20info%20about%20Microsoft's%20privacy%20policy,%20see%20http://privacy.microsoft.com/en-us/default. "</data>
          <data id="id4">")</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc>
						<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc>
						<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc>
					</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>