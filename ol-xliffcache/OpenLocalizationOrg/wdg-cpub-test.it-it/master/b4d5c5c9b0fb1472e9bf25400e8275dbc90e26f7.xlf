<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">b4d5c5c9b0fb1472e9bf25400e8275dbc90e26f7</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: D20C8E01-4E78-4115-A2E8-07BB3E67DDDC</source>
          <target xml:space="preserve">ms.assetid: D20C8E01-4E78-4115-A2E8-07BB3E67DDDC</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: This article shows how to access and use a device's lamp, if one is present.</source>
          <target xml:space="preserve">description: This article shows how to access and use a device's lamp, if one is present.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">Lamp functionality is managed separately from the device's camera and camera flash functionality.</source>
          <target xml:space="preserve">Lamp functionality is managed separately from the device's camera and camera flash functionality.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">title: Camera-independent Flashlight</source>
          <target xml:space="preserve">title: Camera-independent Flashlight</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Camera-independent Flashlight</source>
          <target xml:space="preserve">Camera-independent Flashlight</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">This article shows how to access and use a device's lamp, if one is present.</source>
          <target xml:space="preserve">This article shows how to access and use a device's lamp, if one is present.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Lamp functionality is managed separately from the device's camera and camera flash functionality.</source>
          <target xml:space="preserve">Lamp functionality is managed separately from the device's camera and camera flash functionality.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">In addition to acquiring a reference to the lamp and adjusting its settings, this article also shows you how to properly free up the lamp resource when it's not in use and how to detect when the lamp's availability changes in case it is being used by another app.</source>
          <target xml:space="preserve">In addition to acquiring a reference to the lamp and adjusting its settings, this article also shows you how to properly free up the lamp resource when it's not in use and how to detect when the lamp's availability changes in case it is being used by another app.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Get the device's default lamp</source>
          <target xml:space="preserve">Get the device's default lamp</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894327)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To get a device's default lamp device, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp.GetDefaultAsync</pc></pc>.</source>
          <target xml:space="preserve">To get a device's default lamp device, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp.GetDefaultAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894331)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The lamp APIs are found in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Lights</pc></pc> namespace.</source>
          <target xml:space="preserve">The lamp APIs are found in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Lights</pc></pc> namespace.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Be sure to add a using directive for this namespace before attempting to access these APIs.</source>
          <target xml:space="preserve">Be sure to add a using directive for this namespace before attempting to access these APIs.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetLightsNamespace)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">LightsNamespace</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">LightsNamespace</pc>]</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetDeclareLamp)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareLamp</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareLamp</pc>]</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetGetDefaultLamp)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetDefaultLamp</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetDefaultLamp</pc>]</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the returned object is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">null</pc>, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp</pc> API is unsupported on the device.</source>
          <target xml:space="preserve">If the returned object is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">null</pc>, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp</pc> API is unsupported on the device.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Some devices may not support the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Lamp</pc> API even if there is a lamp physically present on the device.</source>
          <target xml:space="preserve">Some devices may not support the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Lamp</pc> API even if there is a lamp physically present on the device.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Get a specific lamp using the lamp selector string</source>
          <target xml:space="preserve">Get a specific lamp using the lamp selector string</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Some devices may have more than one lamp.</source>
          <target xml:space="preserve">Some devices may have more than one lamp.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894328)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To obtain a list of lamps available on the device, get the device selector string by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDeviceSelector</pc></pc>.</source>
          <target xml:space="preserve">To obtain a list of lamps available on the device, get the device selector string by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDeviceSelector</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225432)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This selector string can then be passed into <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation.FindAllAsync</pc></pc>.</source>
          <target xml:space="preserve">This selector string can then be passed into <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation.FindAllAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">This method is used to enumerate many different kinds of devices and the selector string lets the method know to return only lamp devices.</source>
          <target xml:space="preserve">This method is used to enumerate many different kinds of devices and the selector string lets the method know to return only lamp devices.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225395)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/br225393)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationCollection</pc></pc> object returned from <pc dataRefEnd="id6" dataRefStart="id5" id="p3">FindAllAsync</pc> is a collection of <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DeviceInformation</pc></pc> objects representing the lamps available on the device.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationCollection</pc></pc> object returned from <pc dataRefEnd="id6" dataRefStart="id5" id="p3">FindAllAsync</pc> is a collection of <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DeviceInformation</pc></pc> objects representing the lamps available on the device.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225437)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn894326)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Select one of the objects in the list and then pass the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Id</pc></pc> property to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Lamp.FromIdAsync</pc></pc> to get a reference to the requested lamp.</source>
          <target xml:space="preserve">Select one of the objects in the list and then pass the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Id</pc></pc> property to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Lamp.FromIdAsync</pc></pc> to get a reference to the requested lamp.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/br229906)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetFirstOrDefault</pc> extension method from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Linq</pc> namespace to select the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformation</pc> object where the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">EnclosureLocation.Panel</pc></pc> property has a value of <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Back</pc>, which selects a lamp that is on the back of the device's enclosure, if one exists.</source>
          <target xml:space="preserve">This example uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetFirstOrDefault</pc> extension method from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Linq</pc> namespace to select the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformation</pc> object where the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">EnclosureLocation.Panel</pc></pc> property has a value of <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Back</pc>, which selects a lamp that is on the back of the device's enclosure, if one exists.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225393)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br225459)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation</pc></pc> APIs are found in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Devices.Enumeration</pc></pc> namespace.</source>
          <target xml:space="preserve">Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation</pc></pc> APIs are found in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Devices.Enumeration</pc></pc> namespace.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetEnumerationNamespace)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">EnumerationNamespace</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">EnumerationNamespace</pc>]</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetGetLampWithSelectionString)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetLampWithSelectionString</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetLampWithSelectionString</pc>]</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Adjust lamp settings</source>
          <target xml:space="preserve">Adjust lamp settings</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894310)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn894330)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Once you have an instance of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp</pc></pc> class, turn the lamp on by setting the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IsEnabled</pc></pc> property to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">true</pc>.</source>
          <target xml:space="preserve">Once you have an instance of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp</pc></pc> class, turn the lamp on by setting the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IsEnabled</pc></pc> property to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">true</pc>.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetLampSettingsOn)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">LampSettingsOn</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">LampSettingsOn</pc>]</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894330)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Turn the lamp off by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsEnabled</pc></pc> property to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">false</pc>.</source>
          <target xml:space="preserve">Turn the lamp off by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsEnabled</pc></pc> property to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">false</pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetLampSettingsOff)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">LampSettingsOff</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">LampSettingsOff</pc>]</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Some devices have lamps that support color values.</source>
          <target xml:space="preserve">Some devices have lamps that support color values.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894329)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Check if a lamp supports color by checking the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsColorSettable</pc></pc> property.</source>
          <target xml:space="preserve">Check if a lamp supports color by checking the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsColorSettable</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn894322)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If this value is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">true</pc>, you can set the color of the lamp with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Color</pc></pc> property.</source>
          <target xml:space="preserve">If this value is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">true</pc>, you can set the color of the lamp with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Color</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetLampSettingsColor)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">LampSettingsColor</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">LampSettingsColor</pc>]</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">Register to be notified if the lamp availability changes</source>
          <target xml:space="preserve">Register to be notified if the lamp availability changes</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Lamp access is granted to the most recent app to request access.</source>
          <target xml:space="preserve">Lamp access is granted to the most recent app to request access.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">So, if another app is launched and requests a lamp resource that your app is currently using, your app will no longer be able to control the lamp until the other app has released the resource.</source>
          <target xml:space="preserve">So, if another app is launched and requests a lamp resource that your app is currently using, your app will no longer be able to control the lamp until the other app has released the resource.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894317)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To receive a notification when the availability of the lamp changes, register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp.AvailabilityChanged</pc></pc> event.</source>
          <target xml:space="preserve">To receive a notification when the availability of the lamp changes, register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp.AvailabilityChanged</pc></pc> event.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetAvailabilityChanged)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AvailabilityChanged</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AvailabilityChanged</pc>]</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894315)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the handler for the event, check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LampAvailabilityChanged.IsAvailable</pc></pc> property to determine if the lamp is available.</source>
          <target xml:space="preserve">In the handler for the event, check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LampAvailabilityChanged.IsAvailable</pc></pc> property to determine if the lamp is available.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">In this example, a toggle switch for turning the lamp on and off is enabled or disabled based on the lamp availability.</source>
          <target xml:space="preserve">In this example, a toggle switch for turning the lamp on and off is enabled or disabled based on the lamp availability.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetAvailabilityChangedHandler)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AvailabilityChangedHandler</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AvailabilityChangedHandler</pc>]</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Properly dispose of the lamp resource when not in use</source>
          <target xml:space="preserve">Properly dispose of the lamp resource when not in use</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894320)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When you are no longer using the lamp, you should disable it and call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp.Close</pc></pc> to release the resource and allow other apps to access the lamp.</source>
          <target xml:space="preserve">When you are no longer using the lamp, you should disable it and call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Lamp.Close</pc></pc> to release the resource and allow other apps to access the lamp.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This property is mapped to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dispose</pc> method if you are using C#.</source>
          <target xml:space="preserve">This property is mapped to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dispose</pc> method if you are using C#.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894317)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you registered for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AvailabilityChanged</pc></pc>, you should unregister the handler when you dispose of the lamp resource.</source>
          <target xml:space="preserve">If you registered for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AvailabilityChanged</pc></pc>, you should unregister the handler when you dispose of the lamp resource.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">The right place in your code to dispose of the lamp resource depends on your app.</source>
          <target xml:space="preserve">The right place in your code to dispose of the lamp resource depends on your app.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227509)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To scope lamp access to a single page, release the resource in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnNavigatingFrom</pc></pc> event.</source>
          <target xml:space="preserve">To scope lamp access to a single page, release the resource in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnNavigatingFrom</pc></pc> event.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/Lamp/cs/MainPage.xaml.cs#SnippetDisposeLamp)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DisposeLamp</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DisposeLamp</pc>]</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>