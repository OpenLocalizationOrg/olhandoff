<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">8f53f371ad19bac1929c4a76e59a180730d99831</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Description: In addition to creating an ad campaign for your app that will run in Windows apps, you can also promote your app using other channels.</source>
          <target xml:space="preserve">Description: In addition to creating an ad campaign for your app that will run in Windows apps, you can also promote your app using other channels.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Create a custom app promotion campaign</source>
          <target xml:space="preserve">title: Create a custom app promotion campaign</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 7C9BF73E-B811-4FC7-B1DD-4A0C2E17E95D</source>
          <target xml:space="preserve">ms.assetid: 7C9BF73E-B811-4FC7-B1DD-4A0C2E17E95D</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Create a custom app promotion campaign</source>
          <target xml:space="preserve">Create a custom app promotion campaign</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](create-an-ad-campaign-for-your-app.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In addition to creating an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ad campaign for your app</pc> that will run in Windows apps, you can also promote your app using other channels.</source>
          <target xml:space="preserve">In addition to creating an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ad campaign for your app</pc> that will run in Windows apps, you can also promote your app using other channels.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">For example, you can promote your app using a third-party app marketing provider, or you might post links to your app on social media sites.</source>
          <target xml:space="preserve">For example, you can promote your app using a third-party app marketing provider, or you might post links to your app on social media sites.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">These activities are called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">custom campaigns</pc>.</source>
          <target xml:space="preserve">These activities are called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">custom campaigns</pc>.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">If you run custom campaigns for your app, you can track the relative performance of each campaign by creating a different Windows Store app URL for each custom campaign, where each URL contains a different campaign ID.</source>
          <target xml:space="preserve">If you run custom campaigns for your app, you can track the relative performance of each campaign by creating a different Windows Store app URL for each custom campaign, where each URL contains a different campaign ID.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">When a customer running Windows 10 clicks a URL that contains a campaign ID, Microsoft associates the click with the corresponding custom campaign and makes this data available to you.</source>
          <target xml:space="preserve">When a customer running Windows 10 clicks a URL that contains a campaign ID, Microsoft associates the click with the corresponding custom campaign and makes this data available to you.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">There are two main types of data associated with custom campaigns: page views for your app and <pc dataRefEnd="id2" dataRefStart="id1" id="p1">conversions</pc>.</source>
          <target xml:space="preserve">There are two main types of data associated with custom campaigns: page views for your app and <pc dataRefEnd="id2" dataRefStart="id1" id="p1">conversions</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">A conversion is an app install that results from a customer clicking on the Windows Store page for your app from a URL that is promoted via a custom campaign.</source>
          <target xml:space="preserve">A conversion is an app install that results from a customer clicking on the Windows Store page for your app from a URL that is promoted via a custom campaign.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#understanding-how-app-installs-qualify-as-conversions)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more details about conversions, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding how app installs qualify as conversions</pc> in this topic.</source>
          <target xml:space="preserve">For more details about conversions, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding how app installs qualify as conversions</pc> in this topic.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">You can retrieve custom campaign performance data for your app in the following ways:</source>
          <target xml:space="preserve">You can retrieve custom campaign performance data for your app in the following ways:</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If your app is a Universal Windows Platform (UWP) app, it can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method to programmatically retrieve the custom campaign ID that resulted in a conversion.</source>
          <target xml:space="preserve">If your app is a Universal Windows Platform (UWP) app, it can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method to programmatically retrieve the custom campaign ID that resulted in a conversion.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](channels-and-conversions-report.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can view data about page views and conversions for your app or IAP from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc> in the Dev Center dashboard.</source>
          <target xml:space="preserve">You can view data about page views and conversions for your app or IAP from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc> in the Dev Center dashboard.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>   This data will only be tracked for customers running Windows 10.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>   This data will only be tracked for customers running Windows 10.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Customers using other operating systems can still follow the link to your app's listing, but data about those customers' activities will not be included.</source>
          <target xml:space="preserve">Customers using other operating systems can still follow the link to your app's listing, but data about those customers' activities will not be included.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Example custom campaign scenario</source>
          <target xml:space="preserve">Example custom campaign scenario</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">Consider a game developer who has finished building a new game and would like to promote it to players of her existing games.</source>
          <target xml:space="preserve">Consider a game developer who has finished building a new game and would like to promote it to players of her existing games.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">She posts the announcement of the new game release on her Facebook page, including a link to the Windows Store page for the game.</source>
          <target xml:space="preserve">She posts the announcement of the new game release on her Facebook page, including a link to the Windows Store page for the game.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Many of her players also follow her on Twitter, so she also tweets the announcement with the link to the Windows Store page for the game.</source>
          <target xml:space="preserve">Many of her players also follow her on Twitter, so she also tweets the announcement with the link to the Windows Store page for the game.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">To track the success of each of these promotion channels, the developer creates two variants of the URL for the Windows Store page for the game:</source>
          <target xml:space="preserve">To track the success of each of these promotion channels, the developer creates two variants of the URL for the Windows Store page for the game:</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The URL she will post to her Facebook page includes the custom campaign ID <pc dataRefEnd="id2" dataRefStart="id1" id="p1">my-facebook-campaign</pc>.</source>
          <target xml:space="preserve">The URL she will post to her Facebook page includes the custom campaign ID <pc dataRefEnd="id2" dataRefStart="id1" id="p1">my-facebook-campaign</pc>.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The URL she will post to Twitter includes the custom campaign ID <pc dataRefEnd="id2" dataRefStart="id1" id="p1">my-twitter-campaign</pc>.</source>
          <target xml:space="preserve">The URL she will post to Twitter includes the custom campaign ID <pc dataRefEnd="id2" dataRefStart="id1" id="p1">my-twitter-campaign</pc>.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">As her Facebook and Twitter followers click on the URLs, Microsoft tracks each click and associates it with the corresponding custom campaign.</source>
          <target xml:space="preserve">As her Facebook and Twitter followers click on the URLs, Microsoft tracks each click and associates it with the corresponding custom campaign.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Subsequent qualifying acquisitions of the game and any in-app product (IAP) purchases are associated with the custom campaign and reported as conversions.</source>
          <target xml:space="preserve">Subsequent qualifying acquisitions of the game and any in-app product (IAP) purchases are associated with the custom campaign and reported as conversions.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Understanding how app installs qualify as conversions</source>
          <target xml:space="preserve">Understanding how app installs qualify as conversions</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">conversion</pc> is an app install that results from a customer clicking on the Windows Store page for your app from a URL that is promoted via a custom campaign.</source>
          <target xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">conversion</pc> is an app install that results from a customer clicking on the Windows Store page for your app from a URL that is promoted via a custom campaign.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](channels-and-conversions-report.md)</data>
          <data id="id3">[</data>
          <data id="id4">](#programmatically)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">There are different conditions for qualifying as a conversion for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc> on the Dev Center dashboard and for qualifying as a conversion for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">programmatically retrieving the campaign ID</pc>.</source>
          <target xml:space="preserve">There are different conditions for qualifying as a conversion for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc> on the Dev Center dashboard and for qualifying as a conversion for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">programmatically retrieving the campaign ID</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](channels-and-conversions-report.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To qualify as a conversion for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc>, the following conditions must be met:</source>
          <target xml:space="preserve">To qualify as a conversion for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc>, the following conditions must be met:</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">A customer with a recognized Microsoft account clicks an app URL that contains a custom campaign ID, and is redirected to the Windows Store page for the app.</source>
          <target xml:space="preserve">A customer with a recognized Microsoft account clicks an app URL that contains a custom campaign ID, and is redirected to the Windows Store page for the app.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">The same customer (as identified by the same Microsoft account) installs the app within 24 hours after they first clicked the Windows Store URL with the custom campaign ID.</source>
          <target xml:space="preserve">The same customer (as identified by the same Microsoft account) installs the app within 24 hours after they first clicked the Windows Store URL with the custom campaign ID.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">This qualifies as a conversion even if the customer installs the app on a different computer or device than the one on which they clicked the Windows Store URL with the custom campaign ID.</source>
          <target xml:space="preserve">This qualifies as a conversion even if the customer installs the app on a different computer or device than the one on which they clicked the Windows Store URL with the custom campaign ID.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For app installs that are counted as conversions for a custom campaign, any IAP purchases in that app are also counted as conversions for the same custom campaign.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For app installs that are counted as conversions for a custom campaign, any IAP purchases in that app are also counted as conversions for the same custom campaign.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">To qualify as a conversion when programmatically retrieving the campaign ID associated with the app, the following conditions must be met:</source>
          <target xml:space="preserve">To qualify as a conversion when programmatically retrieving the campaign ID associated with the app, the following conditions must be met:</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">A customer with a recognized Microsoft account clicks an app URL that contains a custom campaign ID, and is redirected to the Windows Store page for the app.</source>
          <target xml:space="preserve">A customer with a recognized Microsoft account clicks an app URL that contains a custom campaign ID, and is redirected to the Windows Store page for the app.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">The customer installs the app during the same Windows Store page view after they click the URL.</source>
          <target xml:space="preserve">The customer installs the app during the same Windows Store page view after they click the URL.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](channels-and-conversions-report.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the user leaves the page and then returns to the page (either on the same computer or device or a different computer or device) within 24 hours and installs the app, this will qualify as a conversion on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc>, but this will not qualify as a conversion if you programmatically retrieve the campaign ID.</source>
          <target xml:space="preserve">If the user leaves the page and then returns to the page (either on the same computer or device or a different computer or device) within 24 hours and installs the app, this will qualify as a conversion on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Channels and conversions report</pc>, but this will not qualify as a conversion if you programmatically retrieve the campaign ID.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">Embed a custom campaign ID to your app's Windows Store page URL</source>
          <target xml:space="preserve">Embed a custom campaign ID to your app's Windows Store page URL</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">To create a Windows Store page URL for your app with a custom campaign ID:</source>
          <target xml:space="preserve">To create a Windows Store page URL for your app with a custom campaign ID:</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Create an ID string for your custom campaign.</source>
          <target xml:space="preserve">Create an ID string for your custom campaign.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">This string can contain up to 100 characters, although we recommend that you define short campaign IDs that are easily identifiable.</source>
          <target xml:space="preserve">This string can contain up to 100 characters, although we recommend that you define short campaign IDs that are easily identifiable.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">Get the Windows Store page URL for your app in HTML or protocol format.</source>
          <target xml:space="preserve">Get the Windows Store page URL for your app in HTML or protocol format.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](link-to-your-app.md)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The HTML format URL is available on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">App Identity</pc> page in the Dev Center dashboard</pc>.</source>
          <target xml:space="preserve">The HTML format URL is available on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">App Identity</pc> page in the Dev Center dashboard</pc>.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">Use the HTTP format if you want customers to navigate to your app's Windows Store page in a browser (this URL will also launch the Windows Store app to your app's listing, if the Windows Store app is installed).</source>
          <target xml:space="preserve">Use the HTTP format if you want customers to navigate to your app's Windows Store page in a browser (this URL will also launch the Windows Store app to your app's listing, if the Windows Store app is installed).</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This URL has the format <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://www.microsoft.com/store/apps/</pc>your app name</pc>/<pc dataRefEnd="id6" dataRefStart="id5" id="p3">your app ID</pc>**.</source>
          <target xml:space="preserve">This URL has the format <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://www.microsoft.com/store/apps/</pc>your app name</pc>/<pc dataRefEnd="id6" dataRefStart="id5" id="p3">your app ID</pc>**.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">For example, the HTTP URL for Skype is https://www.microsoft.com/store/apps/skype/9wzdncrfj364.</source>
          <target xml:space="preserve">For example, the HTTP URL for Skype is https://www.microsoft.com/store/apps/skype/9wzdncrfj364.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  HTTP format URLs can be used to navigate to the Windows Store in a browser on computers and tablets running Windows 7 and later, and phones running Windows Phone 8 and later.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  HTTP format URLs can be used to navigate to the Windows Store in a browser on computers and tablets running Windows 7 and later, and phones running Windows Phone 8 and later.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Use the protocol format if you are promoting your app from other Windows apps that are running on a device or computer with the Windows Store app installed, and you want customers to open to your app's page in the Windows Store app.</source>
          <target xml:space="preserve">Use the protocol format if you are promoting your app from other Windows apps that are running on a device or computer with the Windows Store app installed, and you want customers to open to your app's page in the Windows Store app.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This URL has the format <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ms-windows-store://pdp/?PRODUCTID=</pc>your app id</pc>**.</source>
          <target xml:space="preserve">This URL has the format <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ms-windows-store://pdp/?PRODUCTID=</pc>your app id</pc>**.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">For example, the protocol URL for Skype is ms-windows-store://pdp/?PRODUCTID=9wzdncrfj364.</source>
          <target xml:space="preserve">For example, the protocol URL for Skype is ms-windows-store://pdp/?PRODUCTID=9wzdncrfj364.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">Append the following string to the end of the URL for your app:</source>
          <target xml:space="preserve">Append the following string to the end of the URL for your app:</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For an HTTP format URL, append <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">?cid=</pc>my custom campaign ID</pc>**.</source>
          <target xml:space="preserve">For an HTTP format URL, append <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">?cid=</pc>my custom campaign ID</pc>**.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, if Skype introduces a campaign ID with the value <pc dataRefEnd="id2" dataRefStart="id1" id="p1">custom\_campaign</pc>, the new HTTP URL including the campaign ID would be: https://www.microsoft.com/store/apps/skype/9wzdncrfj364?cid=custom\_campaign.</source>
          <target xml:space="preserve">For example, if Skype introduces a campaign ID with the value <pc dataRefEnd="id2" dataRefStart="id1" id="p1">custom\_campaign</pc>, the new HTTP URL including the campaign ID would be: https://www.microsoft.com/store/apps/skype/9wzdncrfj364?cid=custom\_campaign.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For a protocol format URL, append <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">&amp;cid=</pc>my custom campaign ID</pc>**.</source>
          <target xml:space="preserve">For a protocol format URL, append <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">&amp;cid=</pc>my custom campaign ID</pc>**.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, if Skype introduces a campaign ID with the value <pc dataRefEnd="id2" dataRefStart="id1" id="p1">custom\_campaign</pc>, the new protocol URL including the campaign ID would be: ms-windows-store://pdp/?PRODUCTID=9wzdncrfj364&amp;cid=custom\_campaign.</source>
          <target xml:space="preserve">For example, if Skype introduces a campaign ID with the value <pc dataRefEnd="id2" dataRefStart="id1" id="p1">custom\_campaign</pc>, the new protocol URL including the campaign ID would be: ms-windows-store://pdp/?PRODUCTID=9wzdncrfj364&amp;cid=custom\_campaign.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">Programmatically retrieve the custom campaign ID for an app</source>
          <target xml:space="preserve">Programmatically retrieve the custom campaign ID for an app</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If your app is a UWP app, you can programmatically retrieve the custom campaign ID associated with your app by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method.</source>
          <target xml:space="preserve">If your app is a UWP app, you can programmatically retrieve the custom campaign ID associated with your app by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">This method makes many analytics and monetization scenarios possible.</source>
          <target xml:space="preserve">This method makes many analytics and monetization scenarios possible.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">For example, you can find out if the current user acquired your app after discovering it through your Facebook campaign, and then customize the app experience accordingly.</source>
          <target xml:space="preserve">For example, you can find out if the current user acquired your app after discovering it through your Facebook campaign, and then customize the app experience accordingly.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">Alternatively, if you are using a third-party app marketing provider, you can send data back to the provider.</source>
          <target xml:space="preserve">Alternatively, if you are using a third-party app marketing provider, you can send data back to the provider.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetAppPurchaseCampaignIdAsync</pc></pc> method will return a campaign ID string only if the customer clicks your URL with the embedded campaign ID, is redirected to the Windows Store page for your app, and then installs your app without leaving this page.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetAppPurchaseCampaignIdAsync</pc></pc> method will return a campaign ID string only if the customer clicks your URL with the embedded campaign ID, is redirected to the Windows Store page for your app, and then installs your app without leaving this page.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the user leaves the page and then later returns and installs the app, this will not qualify as a conversion when using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetAppPurchaseCampaignIdAsync</pc>.</source>
          <target xml:space="preserve">If the user leaves the page and then later returns and installs the app, this will not qualify as a conversion when using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetAppPurchaseCampaignIdAsync</pc>.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#conversions)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding conversions</pc> in this topic.</source>
          <target xml:space="preserve">For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding conversions</pc> in this topic.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The following example demonstrates how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method to retrieve the custom campaign ID for the app.</source>
          <target xml:space="preserve">The following example demonstrates how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method to retrieve the custom campaign ID for the app.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">If the app was not installed as part of a successful conversion, this method returns an empty string.</source>
          <target xml:space="preserve">If the app was not installed as part of a successful conversion, this method returns an empty string.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186445)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method accesses data from the Windows Store.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method accesses data from the Windows Store.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">Follow these guidelines when using this method:</source>
          <target xml:space="preserve">Follow these guidelines when using this method:</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">Wrap this method call in an asynchronous operation to allow for the call to complete.</source>
          <target xml:space="preserve">Wrap this method call in an asynchronous operation to allow for the call to complete.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187034)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If your app is not yet published to the Windows Store and you are testing your custom campaign, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc> class instead of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentApp</pc></pc> class.</source>
          <target xml:space="preserve">If your app is not yet published to the Windows Store and you are testing your custom campaign, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc> class instead of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentApp</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">Follow these guidelines:</source>
          <target xml:space="preserve">Follow these guidelines:</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppPurchaseCampaignId</pc> element to the WindowsStoreProxy.xml file, as shown in the following example.</source>
          <target xml:space="preserve">Add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppPurchaseCampaignId</pc> element to the WindowsStoreProxy.xml file, as shown in the following example.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">Assign the element's value to the custom campaign ID.</source>
          <target xml:space="preserve">Assign the element's value to the custom campaign ID.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187034)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When you run the app, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method will always return this value.</source>
          <target xml:space="preserve">When you run the app, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method will always return this value.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more information about the WindowsStoreProxy.xml file, see the documentation for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc>.</source>
          <target xml:space="preserve">For more information about the WindowsStoreProxy.xml file, see the documentation for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">[</data>
          <data id="id12">](https://msdn.microsoft.com/library/windows/apps/mt187034)</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To easily switch between using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc>, we recommend that you add the following statements to your code to define a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Store</pc> alias, and then qualify your <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">GetAppPurchaseCampaignIdAsync</pc></pc> calls with the <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Store</pc> alias.</source>
          <target xml:space="preserve">To easily switch between using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc>, we recommend that you add the following statements to your code to define a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Store</pc> alias, and then qualify your <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">GetAppPurchaseCampaignIdAsync</pc></pc> calls with the <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Store</pc> alias.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source xml:space="preserve">Test your custom campaign</source>
          <target xml:space="preserve">Test your custom campaign</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source xml:space="preserve">Before you promote a custom campaign URL, we recommend that you test your custom campaign by doing the following:</source>
          <target xml:space="preserve">Before you promote a custom campaign URL, we recommend that you test your custom campaign by doing the following:</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">Sign in to your Microsoft Account on the computer or device you are using for testing.</source>
          <target xml:space="preserve">Sign in to your Microsoft Account on the computer or device you are using for testing.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source xml:space="preserve">Click your custom campaign URL.</source>
          <target xml:space="preserve">Click your custom campaign URL.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source xml:space="preserve">Make sure the Windows Store loads your app page correctly, and then close the Windows Store app or the browser page.</source>
          <target xml:space="preserve">Make sure the Windows Store loads your app page correctly, and then close the Windows Store app or the browser page.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">Click the URL several more times, closing the Windows Store app or the browser page after each visit to your app's page.</source>
          <target xml:space="preserve">Click the URL several more times, closing the Windows Store app or the browser page after each visit to your app's page.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source xml:space="preserve">During one of the visits to your app's page, install your app to generate a conversion.</source>
          <target xml:space="preserve">During one of the visits to your app's page, install your app to generate a conversion.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">Count the total number of times you clicked the URL.</source>
          <target xml:space="preserve">Count the total number of times you clicked the URL.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187034)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you are programmatically retrieving the custom campaign ID in your app, test this operation using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc> class instead of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentApp</pc></pc> class.</source>
          <target xml:space="preserve">If you are programmatically retrieving the custom campaign ID in your app, test this operation using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetAppPurchaseCampaignIdAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentAppSimulator</pc></pc> class instead of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentApp</pc></pc> class.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>