<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">f25e6aa8324bc8d80d6741fde3d3b6b24611a78e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: C1C3F5EA-B775-4700-9C45-695E78C16205</source>
          <target xml:space="preserve">ms.assetid: C1C3F5EA-B775-4700-9C45-695E78C16205</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: Getting started: Animation</source>
          <target xml:space="preserve">description: Getting started: Animation</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Getting started: Animation</source>
          <target xml:space="preserve">title: Getting started: Animation</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Getting started: Animation</source>
          <target xml:space="preserve">Getting started: Animation</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">Adding animations</source>
          <target xml:space="preserve">Adding animations</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">In iOS, you most often create animation effects programmatically.</source>
          <target xml:space="preserve">In iOS, you most often create animation effects programmatically.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, you might use animations provided by the block-based <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UIView</pc> class's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">animateWithDuration</pc> methods, or the older non-block based methods.</source>
          <target xml:space="preserve">For example, you might use animations provided by the block-based <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UIView</pc> class's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">animateWithDuration</pc> methods, or the older non-block based methods.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Or, you might explicitly use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CALayer</pc> class to animate layers.</source>
          <target xml:space="preserve">Or, you might explicitly use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CALayer</pc> class to animate layers.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Animations in Windows apps can be created programmatically, but they can also be defined declaratively with Extensible Application Markup Language (XAML).</source>
          <target xml:space="preserve">Animations in Windows apps can be created programmatically, but they can also be defined declaratively with Extensible Application Markup Language (XAML).</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can use Microsoft Visual Studio to edit XAML code directly, but Visual Studio also comes with a tool called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blend</pc>, which creates XAML code for you as you work with animations in a designer.</source>
          <target xml:space="preserve">You can use Microsoft Visual Studio to edit XAML code directly, but Visual Studio also comes with a tool called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blend</pc>, which creates XAML code for you as you work with animations in a designer.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">In fact, Blend allows you to open, design, build, and run complete Visual Studio projects, graphically.</source>
          <target xml:space="preserve">In fact, Blend allows you to open, design, build, and run complete Visual Studio projects, graphically.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">The following walkthrough lets you try this out.</source>
          <target xml:space="preserve">The following walkthrough lets you try this out.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Create a new Universal Windows Platform (UWP) app and name it something like "SimpleAnimation".</source>
          <target xml:space="preserve">Create a new Universal Windows Platform (UWP) app and name it something like "SimpleAnimation".</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">In this project, we're going to move a rectangle, apply a fade effect, and then bring it back into view.</source>
          <target xml:space="preserve">In this project, we're going to move a rectangle, apply a fade effect, and then bring it back into view.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Animations in XAML are based on the concept of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">storyboards</pc> (not to be confused with iOS storyboards).</source>
          <target xml:space="preserve">Animations in XAML are based on the concept of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">storyboards</pc> (not to be confused with iOS storyboards).</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Storyboards use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">keyframes</pc> to animate property changes.</source>
          <target xml:space="preserve">Storyboards use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">keyframes</pc> to animate property changes.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">With your project open, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the project's name and then select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Open in Blend</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Design in Blend</pc>, as shown in the following figure.</source>
          <target xml:space="preserve">With your project open, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, right-click the project's name and then select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Open in Blend</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Design in Blend</pc>, as shown in the following figure.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Visual Studio continues to run in the background.</source>
          <target xml:space="preserve">Visual Studio continues to run in the background.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">open in blend menu command</source>
          <target xml:space="preserve">open in blend menu command</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">After Blend starts, you should see something similar to the following figure.</source>
          <target xml:space="preserve">After Blend starts, you should see something similar to the following figure.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">blend development environment</source>
          <target xml:space="preserve">blend development environment</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Double-click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MainPage.xaml</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Solution Explorer</pc> on the left hand side.</source>
          <target xml:space="preserve">Double-click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MainPage.xaml</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Solution Explorer</pc> on the left hand side.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Next, from the vertical strip of tools on the edge of the central <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Design View</pc>, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rectangle</pc> tool, and then draw a rectangle in <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Design View</pc>, as shown in the following figure.</source>
          <target xml:space="preserve">Next, from the vertical strip of tools on the edge of the central <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Design View</pc>, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rectangle</pc> tool, and then draw a rectangle in <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Design View</pc>, as shown in the following figure.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">adding a rectangle to design view</source>
          <target xml:space="preserve">adding a rectangle to design view</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To make the rectangle green, look in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, and in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Brush</pc> area, click on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Solid color brush</pc> button, and then click the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Color eyedropper</pc> icon.</source>
          <target xml:space="preserve">To make the rectangle green, look in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, and in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Brush</pc> area, click on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Solid color brush</pc> button, and then click the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Color eyedropper</pc> icon.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Click somewhere in the green band of hues.</source>
          <target xml:space="preserve">Click somewhere in the green band of hues.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To begin animating the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, tap the plus symbol (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">New</pc>) button as shown in the following figure, and then tap <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc>.</source>
          <target xml:space="preserve">To begin animating the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, tap the plus symbol (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">New</pc>) button as shown in the following figure, and then tap <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">adding a storyboard</source>
          <target xml:space="preserve">adding a storyboard</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A storyboard appears in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window (you may need to resize the view to see it properly).</source>
          <target xml:space="preserve">A storyboard appears in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window (you may need to resize the view to see it properly).</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Design View</pc> display changes to show that <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard1 timeline recording is on</pc>.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Design View</pc> display changes to show that <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard1 timeline recording is on</pc>.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To capture the current state of the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, tap the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Record Keyframe</pc> button just above the yellow arrow, as shown in the following figure.</source>
          <target xml:space="preserve">To capture the current state of the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, tap the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Record Keyframe</pc> button just above the yellow arrow, as shown in the following figure.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">recording a keyframe</source>
          <target xml:space="preserve">recording a keyframe</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Now, let's move the rectangle and fade it away.</source>
          <target xml:space="preserve">Now, let's move the rectangle and fade it away.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">To do this, drag the orange/yellow arrow to the 2-second position, and then move your green rectangle slightly to the right.</source>
          <target xml:space="preserve">To do this, drag the orange/yellow arrow to the 2-second position, and then move your green rectangle slightly to the right.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Appearance</pc> area, change the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Opacity</pc> property to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">0</pc>, as shown in the following figure.</source>
          <target xml:space="preserve">Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Appearance</pc> area, change the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Opacity</pc> property to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">0</pc>, as shown in the following figure.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To preview the animation, tap the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Play</pc> button in the Storyboard panel.</source>
          <target xml:space="preserve">To preview the animation, tap the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Play</pc> button in the Storyboard panel.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">properties windows and play button</source>
          <target xml:space="preserve">properties windows and play button</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">Next, let's bring the rectangle back into view.</source>
          <target xml:space="preserve">Next, let's bring the rectangle back into view.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, double-click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard1</pc>.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Objects and Timeline</pc> window, double-click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Storyboard1</pc>.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Common</pc> area, select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AutoReverse</pc>, as shown in the following figure.</source>
          <target xml:space="preserve">Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Common</pc> area, select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AutoReverse</pc>, as shown in the following figure.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">selecting a storyboard</source>
          <target xml:space="preserve">selecting a storyboard</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Finally, click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Play</pc> button to see what happens.</source>
          <target xml:space="preserve">Finally, click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Play</pc> button to see what happens.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">You can build and run the project by clicking on the green run button at the top of the window (or just press F5).</source>
          <target xml:space="preserve">You can build and run the project by clicking on the green run button at the top of the window (or just press F5).</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">If you do this, you'll see your project will indeed build and run, but the green rectangle will stubbornly sit perfectly still, like a toddler denied candy in a supermarket aisle.</source>
          <target xml:space="preserve">If you do this, you'll see your project will indeed build and run, but the green rectangle will stubbornly sit perfectly still, like a toddler denied candy in a supermarket aisle.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">To start the animation, you'll need to add a line of code to the project.</source>
          <target xml:space="preserve">To start the animation, you'll need to add a line of code to the project.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Here's how.</source>
          <target xml:space="preserve">Here's how.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Save the project, by opening the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu, and selecting <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Save MainPage.xaml</pc>.</source>
          <target xml:space="preserve">Save the project, by opening the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu, and selecting <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Save MainPage.xaml</pc>.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">Return to Visual Studio.</source>
          <target xml:space="preserve">Return to Visual Studio.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If Visual Studio displays a dialog box asking whether you want to reload the modified file, select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc>.</source>
          <target xml:space="preserve">If Visual Studio displays a dialog box asking whether you want to reload the modified file, select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc>.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Double-click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MainPage.xaml.cs</pc> file, which is hidden under <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MainPage.xaml</pc>, to open it, and add the following code just above the public MainPage() method:</source>
          <target xml:space="preserve">Double-click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MainPage.xaml.cs</pc> file, which is hidden under <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MainPage.xaml</pc>, to open it, and add the following code just above the public MainPage() method:</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">Run the project again, and watch the rectangle animate.</source>
          <target xml:space="preserve">Run the project again, and watch the rectangle animate.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Hurrah!</source>
          <target xml:space="preserve">Hurrah!</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you open the MainPage.xaml file, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML</pc> view, you'll see the XAML code that Blend added for you as you worked in the designer.</source>
          <target xml:space="preserve">If you open the MainPage.xaml file, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML</pc> view, you'll see the XAML code that Blend added for you as you worked in the designer.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">`&lt;Storyboard&gt;`</data>
          <data id="id2">`&lt;Rectangle&gt;`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In particular, look at the code in the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> elements.</source>
          <target xml:space="preserve">In particular, look at the code in the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> elements.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">The following code shows an example.</source>
          <target xml:space="preserve">The following code shows an example.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">Ellipses indicate unrelated code omitted for brevity, and line breaks have been added for code readability.)</source>
          <target xml:space="preserve">Ellipses indicate unrelated code omitted for brevity, and line breaks have been added for code readability.)</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">You can edit this XAML manually, or return to Blend to continue working on it there.</source>
          <target xml:space="preserve">You can edit this XAML manually, or return to Blend to continue working on it there.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">Blend makes it fun to create interesting user interfaces, and the ability to animate them using a graphical tool can dramatically speed up development time.</source>
          <target xml:space="preserve">Blend makes it fun to create interesting user interfaces, and the ability to animate them using a graphical tool can dramatically speed up development time.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187350)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info about animations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Animations overview</pc>.</source>
          <target xml:space="preserve">For more info about animations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Animations overview</pc>.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh465165)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For info about animations for Windows Store apps using JavaScript and HTML, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Animating your UI (HTML)</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For info about animations for Windows Store apps using JavaScript and HTML, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Animating your UI (HTML)</pc>.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">Next step</source>
          <target xml:space="preserve">Next step</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">Getting started: What next?</source>
          <target xml:space="preserve">Getting started: What next?</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>