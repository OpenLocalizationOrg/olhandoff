<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">150a04e5a689e1a6dbc45dc04cb2cc1ba3c7b4e5</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: D5D98044-7221-4C2A-9724-56E59F341AB0</source>
          <target xml:space="preserve">ms.assetid: D5D98044-7221-4C2A-9724-56E59F341AB0</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: This article shows how to read and write image metadata properties and how to geotag files using the GeotagHelper utility class.</source>
          <target xml:space="preserve">description: This article shows how to read and write image metadata properties and how to geotag files using the GeotagHelper utility class.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Image Metadata</source>
          <target xml:space="preserve">title: Image Metadata</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Image Metadata</source>
          <target xml:space="preserve">Image Metadata</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn903683)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This article shows how to read and write image metadata properties and how to geotag files using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GeotagHelper</pc></pc> utility class.</source>
          <target xml:space="preserve">This article shows how to read and write image metadata properties and how to geotag files using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GeotagHelper</pc></pc> utility class.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Image properties</source>
          <target xml:space="preserve">Image properties</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227225)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh770642)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile.Properties</pc></pc> property returns a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageItemContentProperties</pc></pc> object that provides access to content-related information about the file.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile.Properties</pc></pc> property returns a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageItemContentProperties</pc></pc> object that provides access to content-related information about the file.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh770646)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Get the image-specific properties by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetImagePropertiesAsync</pc></pc>.</source>
          <target xml:space="preserve">Get the image-specific properties by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetImagePropertiesAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207718)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The returned <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageProperties</pc></pc> object exposes members that contain basic image metadata fields, like the title of the image and the capture date.</source>
          <target xml:space="preserve">The returned <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageProperties</pc></pc> object exposes members that contain basic image metadata fields, like the title of the image and the capture date.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetGetImageProperties)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetImageProperties</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetImageProperties</pc>]</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">To access a larger set of file metadata, use the Windows Property System, a set of file metadata properties that can be retrieved with a unique string identifier.</source>
          <target xml:space="preserve">To access a larger set of file metadata, use the Windows Property System, a set of file metadata properties that can be retrieved with a unique string identifier.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Create a list of strings and add the identifier for each property you want to retrieve.</source>
          <target xml:space="preserve">Create a list of strings and add the identifier for each property you want to retrieve.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207732)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageProperties.RetrievePropertiesAsync</pc></pc> method takes this list of strings and returns a dictionary of key/value pairs where the key is the property identifier and the value is the property value.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageProperties.RetrievePropertiesAsync</pc></pc> method takes this list of strings and returns a dictionary of key/value pairs where the key is the property identifier and the value is the property value.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetGetWindowsProperties)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetWindowsProperties</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetWindowsProperties</pc>]</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dd561977)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For a complete list of Windows Properties, including the identifiers and type for each property, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Properties</pc>.</source>
          <target xml:space="preserve">For a complete list of Windows Properties, including the identifiers and type for each property, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Properties</pc>.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Some properties are only supported for certain file containers and image codecs.</source>
          <target xml:space="preserve">Some properties are only supported for certain file containers and image codecs.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee872003)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For a listing of the image metadata supported for each image type, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Photo Metadata Policies</pc>.</source>
          <target xml:space="preserve">For a listing of the image metadata supported for each image type, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Photo Metadata Policies</pc>.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Because properties that are unsupported may return a null value when retrieved, always check for null before using a returned metadata value.</source>
          <target xml:space="preserve">Because properties that are unsupported may return a null value when retrieved, always check for null before using a returned metadata value.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Geotag helper</source>
          <target xml:space="preserve">Geotag helper</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225603)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">GeotagHelper is a utility class that makes it easy to tag images with geographic data using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Geolocation</pc></pc> APIs directly, without having to manually parse or construct the metadata format.</source>
          <target xml:space="preserve">GeotagHelper is a utility class that makes it easy to tag images with geographic data using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Geolocation</pc></pc> APIs directly, without having to manually parse or construct the metadata format.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263675)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn903685)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you already have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Geopoint</pc></pc> object representing the location you want to tag in the image, either from a previous use of the geolocation APIs or some other source, you can set the geotag data by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GeotagHelper.SetGeotagAsync</pc></pc> and passing in a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">StorageFile</pc></pc> and the <pc dataRefEnd="id14" dataRefStart="id13" id="p7">Geopoint</pc>.</source>
          <target xml:space="preserve">If you already have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Geopoint</pc></pc> object representing the location you want to tag in the image, either from a previous use of the geolocation APIs or some other source, you can set the geotag data by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GeotagHelper.SetGeotagAsync</pc></pc> and passing in a <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">StorageFile</pc></pc> and the <pc dataRefEnd="id14" dataRefStart="id13" id="p7">Geopoint</pc>.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetSetGeoDataFromPoint)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SetGeoDataFromPoint</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SetGeoDataFromPoint</pc>]</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225534)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn903686)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To set the geotag data using the device's current location, create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Geolocator</pc></pc> object and call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GeotagHelper.SetGeotagFromGeolocatorAsync</pc></pc> passing in the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Geolocator</pc> and the file to be tagged.</source>
          <target xml:space="preserve">To set the geotag data using the device's current location, create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Geolocator</pc></pc> object and call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GeotagHelper.SetGeotagFromGeolocatorAsync</pc></pc> passing in the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Geolocator</pc> and the file to be tagged.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetSetGeoDataFromGeolocator)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SetGeoDataFromGeolocator</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SetGeoDataFromGeolocator</pc>]</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn903686)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You must include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">location</pc> device capability in your app manifest in order to use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">SetGeotagFromGeolocatorAsync</pc></pc> API.</source>
          <target xml:space="preserve">You must include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">location</pc> device capability in your app manifest in order to use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">SetGeotagFromGeolocatorAsync</pc></pc> API.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn859152)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn903686)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You must call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestAccessAsync</pc></pc> before calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SetGeotagFromGeolocatorAsync</pc></pc> to ensure the user has granted your app permission to use their location.</source>
          <target xml:space="preserve">You must call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestAccessAsync</pc></pc> before calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SetGeotagFromGeolocatorAsync</pc></pc> to ensure the user has granted your app permission to use their location.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt219699)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more information on the geolocation APIs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Maps and location</pc>.</source>
          <target xml:space="preserve">For more information on the geolocation APIs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Maps and location</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn903684)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To get a GeoPoint representing the geotagged location of an image file, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetGeotagAsync</pc></pc>.</source>
          <target xml:space="preserve">To get a GeoPoint representing the geotagged location of an image file, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetGeotagAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetGetGeoData)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetGeoData</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetGeoData</pc>]</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Decode and encode image metadata</source>
          <target xml:space="preserve">Decode and encode image metadata</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226176)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](bitmapencoder-options-reference.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The most advanced way of working with image data is to read and write the properties on the stream level using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> or a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">BitmapEncoder</pc>.</source>
          <target xml:space="preserve">The most advanced way of working with image data is to read and write the properties on the stream level using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> or a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">BitmapEncoder</pc>.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">For these operations you can use Windows Properties to specify the data you are reading or writing, but you can also use the metadata query language provided by the Windows Imaging Component (WIC) to specify the path to a requested property.</source>
          <target xml:space="preserve">For these operations you can use Windows Properties to specify the data you are reading or writing, but you can also use the metadata query language provided by the Windows Imaging Component (WIC) to specify the path to a requested property.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226176)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Reading image metadata using this technique requires you to have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> that was created with the source image file stream.</source>
          <target xml:space="preserve">Reading image metadata using this technique requires you to have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> that was created with the source image file stream.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](imaging.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For information on how to do this, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Imaging</pc>.</source>
          <target xml:space="preserve">For information on how to do this, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Imaging</pc>.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Once you have the decoder, create a list of strings and add a new entry for each metadata property you want to retrieve, using either the Windows Property identifier string or a WIC metadata query.</source>
          <target xml:space="preserve">Once you have the decoder, create a list of strings and add a new entry for each metadata property you want to retrieve, using either the Windows Property identifier string or a WIC metadata query.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226250)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226248)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapPropertiesView.GetPropertiesAsync</pc></pc> method on the decoder's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapProperties</pc></pc> member to request the specified properties.</source>
          <target xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapPropertiesView.GetPropertiesAsync</pc></pc> method on the decoder's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapProperties</pc></pc> member to request the specified properties.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">The properties are returned in a dictionary of key/value pairs containing the property name or path and the property value.</source>
          <target xml:space="preserve">The properties are returned in a dictionary of key/value pairs containing the property name or path and the property value.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetReadImageMetadata)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReadImageMetadata</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReadImageMetadata</pc>]</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ee719904)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For information on the WIC metadata query language and the properties supported, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WIC image format native metadata queries</pc>.</source>
          <target xml:space="preserve">For information on the WIC metadata query language and the properties supported, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WIC image format native metadata queries</pc>.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">Many metadata properties are only supported by a subset of image types.</source>
          <target xml:space="preserve">Many metadata properties are only supported by a subset of image types.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226250)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetPropertiesAsync</pc>
						</pc> will fail with the error code 0x88982F41 if one of the requested properties is not supported by the image associated with the decoder and 0x88982F81 if the image does not support metadata at all.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetPropertiesAsync</pc>
						</pc> will fail with the error code 0x88982F41 if one of the requested properties is not supported by the image associated with the decoder and 0x88982F81 if the image does not support metadata at all.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">The constants associated with these error codes are WINCODEC\_ERR\_PROPERTYNOTSUPPORTED and WINCODEC\_ERR\_UNSUPPORTEDOPERATION and are defined in the winerror.h header file.</source>
          <target xml:space="preserve">The constants associated with these error codes are WINCODEC\_ERR\_PROPERTYNOTSUPPORTED and WINCODEC\_ERR\_UNSUPPORTEDOPERATION and are defined in the winerror.h header file.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Because an image may or may not contain a value for a particular property, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IDictionary.ContainsKey</pc> to verify that a property is present in the results before attempting to access it.</source>
          <target xml:space="preserve">Because an image may or may not contain a value for a particular property, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IDictionary.ContainsKey</pc> to verify that a property is present in the results before attempting to access it.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Writing image metadata to the stream requires a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapEncoder</pc> associated with the image output file.</source>
          <target xml:space="preserve">Writing image metadata to the stream requires a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapEncoder</pc> associated with the image output file.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh974338)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapPropertySet</pc></pc> object to contain the property values you want set.</source>
          <target xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapPropertySet</pc></pc> object to contain the property values you want set.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700687)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapTypedValue</pc></pc> object to represent the property value.</source>
          <target xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapTypedValue</pc></pc> object to represent the property value.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br225871)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This object uses an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">object</pc> as the value and member of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PropertyType</pc></pc> enumeration that defines the type of the value.</source>
          <target xml:space="preserve">This object uses an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">object</pc> as the value and member of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PropertyType</pc></pc> enumeration that defines the type of the value.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226252)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapTypedValue</pc> to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapPropertySet</pc> and then call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapProperties.SetPropertiesAsync</pc></pc> to cause the encoder to write the properties to the stream.</source>
          <target xml:space="preserve">Add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapTypedValue</pc> to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapPropertySet</pc> and then call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapProperties.SetPropertiesAsync</pc></pc> to cause the encoder to write the properties to the stream.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetWriteImageMetadata)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WriteImageMetadata</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WriteImageMetadata</pc>]</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dd561977)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/desktop/ee872003)</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/desktop/ee719904)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For details on which properties are supported for which image file types, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Properties</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Photo Metadata Policies</pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">WIC image format native metadata queries</pc>.</source>
          <target xml:space="preserve">For details on which properties are supported for which image file types, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Properties</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Photo Metadata Policies</pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">WIC image format native metadata queries</pc>.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226252)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPropertiesAsync</pc>
						</pc> will fail with the error code 0x88982F41 if one of the requested properties is not supported by the image associated with the encoder.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPropertiesAsync</pc>
						</pc> will fail with the error code 0x88982F41 if one of the requested properties is not supported by the image associated with the encoder.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Related topics</source>
          <target xml:space="preserve">Related topics</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">Imaging</source>
          <target xml:space="preserve">Imaging</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>