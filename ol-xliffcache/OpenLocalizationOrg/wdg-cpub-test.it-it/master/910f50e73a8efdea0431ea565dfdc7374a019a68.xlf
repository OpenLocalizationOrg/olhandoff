<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">910f50e73a8efdea0431ea565dfdc7374a019a68</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Driver Verifier Properties for Driver Package Projects</source>
          <target xml:space="preserve">Driver Verifier Properties for Driver Package Projects</target>
        </segment>
      </unit>
      <unit id="102">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff545448)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> is a run-time verification tool that increases the effectiveness of your driver testing.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> is a run-time verification tool that increases the effectiveness of your driver testing.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">You can enable and configure Driver Verifier to run on all test computers when you deploy your driver for testing.</source>
          <target xml:space="preserve">You can enable and configure Driver Verifier to run on all test computers when you deploy your driver for testing.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">You should always set up a kernel mode debugging connection with the test computer when you enable Driver Verifier on the remote test computer.</source>
          <target xml:space="preserve">You should always set up a kernel mode debugging connection with the test computer when you enable Driver Verifier on the remote test computer.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">For information about configuring a target computer and setting up a debug cable, see [Setting Up Kernel-Mode Debugging in Visual Studio](https://msdn.microsoft.com/en-us/windows/hardware/hh439376.</source>
          <target xml:space="preserve">For information about configuring a target computer and setting up a debug cable, see [Setting Up Kernel-Mode Debugging in Visual Studio](https://msdn.microsoft.com/en-us/windows/hardware/hh439376.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">&lt;span id="Setting_Driver_Verifier_properties_for_driver_package_projects"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="setting_driver_verifier_properties_for_driver_package_projects"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="SETTING_DRIVER_VERIFIER_PROPERTIES_FOR_DRIVER_PACKAGE_PROJECTS"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Setting Driver Verifier properties for driver package projects</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Setting Driver Verifier properties for driver package projects</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">Open the property pages for your driver package.</source>
          <target xml:space="preserve">Open the property pages for your driver package.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Right-click the driver package project in Solution Explorer and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</source>
          <target xml:space="preserve">Right-click the driver package project in Solution Explorer and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the property pages for the driver package, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Driver Install</pc>, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Driver Verification</pc>.</source>
          <target xml:space="preserve">In the property pages for the driver package, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configuration Properties</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Driver Install</pc>, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Driver Verification</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable Driver Verification</pc> option.</source>
          <target xml:space="preserve">Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable Driver Verification</pc> option.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff545448)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When this option is selected, you can select the driver or drivers to verify on the test computer and you can select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> options to use.</source>
          <target xml:space="preserve">When this option is selected, you can select the driver or drivers to verify on the test computer and you can select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> options to use.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">&lt;span id="Project_Configuration_and_Platform"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="project_configuration_and_platform"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="PROJECT_CONFIGURATION_AND_PLATFORM"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Project Configuration and Platform</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Project Configuration and Platform</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">The configuration list and platform list let you apply different deployment settings for different project configuration and platform combinations.</source>
          <target xml:space="preserve">The configuration list and platform list let you apply different deployment settings for different project configuration and platform combinations.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">For example, you can deploy a driver to one test computer using a set of deployment options for debug builds and to a different test computer using deployment options for release builds.</source>
          <target xml:space="preserve">For example, you can deploy a driver to one test computer using a set of deployment options for debug builds and to a different test computer using deployment options for release builds.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">&lt;span id="Enable_Driver_Verifier"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="enable_driver_verifier"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="ENABLE_DRIVER_VERIFIER"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Enable Driver Verifier</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Enable Driver Verifier</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">You can enable Driver Verifier on the test computer for all drivers on the computer, for the driver project only, or for a list of specified drivers.</source>
          <target xml:space="preserve">You can enable Driver Verifier on the test computer for all drivers on the computer, for the driver project only, or for a list of specified drivers.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">For example, you might want to enable Driver Verifier for the set of drivers on the stack for a particular device.</source>
          <target xml:space="preserve">For example, you might want to enable Driver Verifier for the set of drivers on the stack for a particular device.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">&lt;span id="Verify_Drivers"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="verify_drivers"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="VERIFY_DRIVERS"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Verify Drivers</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Verify Drivers</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">Specifies which driver or drivers to verify on the test computer.</source>
          <target xml:space="preserve">Specifies which driver or drivers to verify on the test computer.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">&lt;span id="All_Drivers"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="all_drivers"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="ALL_DRIVERS"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />
						<pc dataRefEnd="id8" dataRefStart="id7" id="p1">All Drivers</pc>
					</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />
						<pc dataRefEnd="id8" dataRefStart="id7" id="p1">All Drivers</pc>
					</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Specifies that Driver Verifier verifies all installed drivers on the remote test computer.</source>
          <target xml:space="preserve">Specifies that Driver Verifier verifies all installed drivers on the remote test computer.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">&lt;span id="Project_Output"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="project_output"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="PROJECT_OUTPUT"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />
						<pc dataRefEnd="id8" dataRefStart="id7" id="p1">Project Output</pc>
					</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />
						<pc dataRefEnd="id8" dataRefStart="id7" id="p1">Project Output</pc>
					</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Specifies that Driver Verifier verifies the driver project installed on the remote test computer.</source>
          <target xml:space="preserve">Specifies that Driver Verifier verifies the driver project installed on the remote test computer.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">This is the default option.</source>
          <target xml:space="preserve">This is the default option.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">&lt;span id="Driver_List"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="driver_list"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="DRIVER_LIST"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />
						<pc dataRefEnd="id8" dataRefStart="id7" id="p1">Driver List</pc>
					</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />
						<pc dataRefEnd="id8" dataRefStart="id7" id="p1">Driver List</pc>
					</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Specifies the driver or list of drivers that Driver Verifier verifies on the remote test computer.</source>
          <target xml:space="preserve">Specifies the driver or list of drivers that Driver Verifier verifies on the remote test computer.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">For example, you could list all of the drivers associated with a particular device.</source>
          <target xml:space="preserve">For example, you could list all of the drivers associated with a particular device.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Specify the drivers by binary name, for example, Driver.sys.</source>
          <target xml:space="preserve">Specify the drivers by binary name, for example, Driver.sys.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Use a semicolon to separate a list of drivers.</source>
          <target xml:space="preserve">Use a semicolon to separate a list of drivers.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Wildcard values, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">n\*.sys</pc>, are not supported.</source>
          <target xml:space="preserve">Wildcard values, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">n\*.sys</pc>, are not supported.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">&lt;span id="Driver_Verifier_Standard_Flags"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="driver_verifier_standard_flags"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="DRIVER_VERIFIER_STANDARD_FLAGS"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Driver Verifier Standard Flags</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Driver Verifier Standard Flags</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">You can configure the following Driver Verifier options on the test computer.</source>
          <target xml:space="preserve">You can configure the following Driver Verifier options on the test computer.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh454208)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DDI compliance checking</pc> (Windows 8)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DDI compliance checking</pc> (Windows 8)</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier applies a set of device driver interface (DDI) rules that check for the proper interaction between a driver and the kernel interface of the operating system.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier applies a set of device driver interface (DDI) rules that check for the proper interaction between a driver and the kernel interface of the operating system.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Deadlock detection</source>
          <target xml:space="preserve">Deadlock detection</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier monitors the driver's use of spin locks, mutexes, and fast mutexes.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier monitors the driver's use of spin locks, mutexes, and fast mutexes.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">This detects whether the driver's code has the potential for causing a deadlock at some point.</source>
          <target xml:space="preserve">This detects whether the driver's code has the potential for causing a deadlock at some point.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">DMA verification</source>
          <target xml:space="preserve">DMA verification</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier monitors the driver's use of direct memory access (DMA) routines.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier monitors the driver's use of direct memory access (DMA) routines.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">This detects improper use of DMA buffers, adapters, and map registers.</source>
          <target xml:space="preserve">This detects improper use of DMA buffers, adapters, and map registers.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Force IRQL checking</source>
          <target xml:space="preserve">Force IRQL checking</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier places extreme memory pressure on the driver by invalidating pageable code.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier places extreme memory pressure on the driver by invalidating pageable code.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">If the driver attempts to access paged memory at the wrong IRQL or while holding a spin lock, Driver Verifier detects this behavior.</source>
          <target xml:space="preserve">If the driver attempts to access paged memory at the wrong IRQL or while holding a spin lock, Driver Verifier detects this behavior.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">I/O verification</source>
          <target xml:space="preserve">I/O verification</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier allocates the driver's Interrupt Request Packets (IRPs) from a special pool, and monitors the driver's I/O handling.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier allocates the driver's Interrupt Request Packets (IRPs) from a special pool, and monitors the driver's I/O handling.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">This detects illegal or inconsistent use of I/O routines.</source>
          <target xml:space="preserve">This detects illegal or inconsistent use of I/O routines.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Driver Verifier also monitors the calls of several I/O Manager routines and performs stress testing of Plug-and-Play (PnP) IRPs, power IRPs and WMI IRPs.</source>
          <target xml:space="preserve">Driver Verifier also monitors the calls of several I/O Manager routines and performs stress testing of Plug-and-Play (PnP) IRPs, power IRPs and WMI IRPs.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Miscellaneous checks</source>
          <target xml:space="preserve">Miscellaneous checks</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier looks for common causes of driver crashes, such as the mishandling of freed memory.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier looks for common causes of driver crashes, such as the mishandling of freed memory.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">Pool tracking</source>
          <target xml:space="preserve">Pool tracking</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier checks to see whether the driver has freed all of its memory allocations when it is unloaded.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier checks to see whether the driver has freed all of its memory allocations when it is unloaded.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">This reveals memory leaks.</source>
          <target xml:space="preserve">This reveals memory leaks.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">Security checks</source>
          <target xml:space="preserve">Security checks</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier looks for common errors that can result in security vulnerabilities, such as a reference to user-mode addresses by kernel-mode routines.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier looks for common errors that can result in security vulnerabilities, such as a reference to user-mode addresses by kernel-mode routines.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">Special pool checking</source>
          <target xml:space="preserve">Special pool checking</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier allocates most of the driver's memory requests from a special pool.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier allocates most of the driver's memory requests from a special pool.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">This special pool is monitored for memory overruns, memory underruns, and memory that is accessed after it is freed.</source>
          <target xml:space="preserve">This special pool is monitored for memory overruns, memory underruns, and memory that is accessed after it is freed.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">&lt;span id="Driver_Verifier_Scenario_Specific_Settings"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="driver_verifier_scenario_specific_settings"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="DRIVER_VERIFIER_SCENARIO_SPECIFIC_SETTINGS"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Driver Verifier Scenario Specific Settings</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Driver Verifier Scenario Specific Settings</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">Low resources simulation</source>
          <target xml:space="preserve">Low resources simulation</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier randomly fails pool allocation requests and other resource requests.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier randomly fails pool allocation requests and other resource requests.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">By injecting these allocation faults into the system, Driver Verifier tests the driver's ability to cope with a low-resource situation.</source>
          <target xml:space="preserve">By injecting these allocation faults into the system, Driver Verifier tests the driver's ability to cope with a low-resource situation.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">Force pending I/O requests</source>
          <target xml:space="preserve">Force pending I/O requests</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff548336)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier tests the driver's response to STATUS\_PENDING return values by returning STATUS\_PENDING for random calls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IoCallDriver</pc></pc>.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier tests the driver's response to STATUS\_PENDING return values by returning STATUS\_PENDING for random calls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IoCallDriver</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">IRP logging</source>
          <target xml:space="preserve">IRP logging</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier monitors a driver's use of IRPs and creates a log of IRP use.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier monitors a driver's use of IRPs and creates a log of IRP use.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974663)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Stack</pc> (Windows 8)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Stack</pc> (Windows 8)</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974663)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Stack</pc> option monitors how the driver handles invariant MDL buffers across the driver stack.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Stack</pc> option monitors how the driver handles invariant MDL buffers across the driver stack.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">Driver Verifier can detect illegal modification of invariant MDL buffers.</source>
          <target xml:space="preserve">Driver Verifier can detect illegal modification of invariant MDL buffers.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">To use this option, I/O Verification must be enabled on at least one driver.</source>
          <target xml:space="preserve">To use this option, I/O Verification must be enabled on at least one driver.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974662)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Driver</pc> (Windows 8)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Driver</pc> (Windows 8)</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974662)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Driver</pc> option monitors how the driver handles invariant MDL buffers on a per-driver basis.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Invariant MDL Checking for Driver</pc> option monitors how the driver handles invariant MDL buffers on a per-driver basis.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source xml:space="preserve">This option detects illegal modification of invariant MDL buffers.</source>
          <target xml:space="preserve">This option detects illegal modification of invariant MDL buffers.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">To use this option, you must enable I/O Verification on at least one driver.</source>
          <target xml:space="preserve">To use this option, you must enable I/O Verification on at least one driver.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh454184)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Power Framework Delay Fuzzing</pc> (Windows 8)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Power Framework Delay Fuzzing</pc> (Windows 8)</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source xml:space="preserve">When this option is active, Driver Verifier randomizes thread schedules to help flush out concurrency errors in the driver.</source>
          <target xml:space="preserve">When this option is active, Driver Verifier randomizes thread schedules to help flush out concurrency errors in the driver.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974664)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stack Based Failure Injection</pc> (Windows 8)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stack Based Failure Injection</pc> (Windows 8)</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974664)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stack Based Failure Injection</pc> option injects resource failures in kernel-mode drivers.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Stack Based Failure Injection</pc> option injects resource failures in kernel-mode drivers.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff545448)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This option uses a special driver, KmAutoFail.sys, in conjunction with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> to penetrate driver error handling paths.</source>
          <target xml:space="preserve">This option uses a special driver, KmAutoFail.sys, in conjunction with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Verifier</pc> to penetrate driver error handling paths.</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Hh974664)</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff548288)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You cannot combine <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Stack Based Failure Injection</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Low resources simulation</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You cannot combine <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Stack Based Failure Injection</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Low resources simulation</pc>.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">&lt;span id="Driver_Verifier_options_that_require_I_O_Verification"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="driver_verifier_options_that_require_i_o_verification"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="DRIVER_VERIFIER_OPTIONS_THAT_REQUIRE_I_O_VERIFICATION"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Driver Verifier options that require I/O Verification</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Driver Verifier options that require I/O Verification</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/Library/Windows/Hardware/Ff548045)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">There are four options that require you to first enable <pc dataRefEnd="id2" dataRefStart="id1" id="p1">I/O Verification</pc>.</source>
          <target xml:space="preserve">There are four options that require you to first enable <pc dataRefEnd="id2" dataRefStart="id1" id="p1">I/O Verification</pc>.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">If I/O Verification is not enabled, these options are not enabled.</source>
          <target xml:space="preserve">If I/O Verification is not enabled, these options are not enabled.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source xml:space="preserve">Force Pending I/O Requests</source>
          <target xml:space="preserve">Force Pending I/O Requests</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">IRP Logging</source>
          <target xml:space="preserve">IRP Logging</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source xml:space="preserve">Invariant MDL Checking for Stack</source>
          <target xml:space="preserve">Invariant MDL Checking for Stack</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source xml:space="preserve">Invariant MDL Checking for Driver</source>
          <target xml:space="preserve">Invariant MDL Checking for Driver</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">&lt;span id="related_topics"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />Related topics</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />Related topics</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source xml:space="preserve">Driver Verifier</source>
          <target xml:space="preserve">Driver Verifier</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source xml:space="preserve">How to test a driver at runtime using Visual Studio</source>
          <target xml:space="preserve">How to test a driver at runtime using Visual Studio</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source xml:space="preserve">Setting Up Kernel-Mode Debugging in Visual Studio</source>
          <target xml:space="preserve">Setting Up Kernel-Mode Debugging in Visual Studio</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source xml:space="preserve">Deploying a Driver to a Test Computer</source>
          <target xml:space="preserve">Deploying a Driver to a Test Computer</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">]</data>
          <data id="id3">(mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback%20[VsDriver\vsdriver]:%20Driver%20Verifier%20Properties%20for%20%20Driver%20Package%20Projects%20%20RELEASE:%20%289/30/2015%29&amp;body=%0A%0APRIVACY%20STATEMENT%0A%0AWe%20use%20your%20feedback%20to%20improve%20the%20documentation.%20We%20don't%20use%20your%20email%20address%20for%20any%20other%20purpose,%20and%20we'll%20remove%20your%20email%20address%20from%20our%20system%20after%20the%20issue%20that%20you're%20reporting%20is%20fixed.%20While%20we're%20working%20to%20fix%20this%20issue,%20we%20might%20send%20you%20an%20email%20message%20to%20ask%20for%20more%20info.%20Later,%20we%20might%20also%20send%20you%20an%20email%20message%20to%20let%20you%20know%20that%20we've%20addressed%20your%20feedback.%0A%0AFor%20more%20info%20about%20Microsoft's%20privacy%20policy,%20see%20http://privacy.microsoft.com/en-us/default. "</data>
          <data id="id4">")</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc>
						<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Send comments about this topic to Microsoft</pc>
						<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Send comments about this topic to Microsoft</pc>
					</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>