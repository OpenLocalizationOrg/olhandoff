<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="foo.file" tool-id="6e534794-c2f7-494b-a41b-64d55e25b541" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="6e534794-c2f7-494b-a41b-64d55e25b541" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="f08a59c7-a45c-41c8-92ef-83f45adef5b8">
        <trans-unit id="2f846a6a-870b-4faa-99b3-9a18efe0d6b0" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="5ca2b8c1-a479-4446-94a8-85be2d7e4316" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="1966cfe5-9e41-4552-8923-95ec2f062f2f" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="008303b5-fc23-41ba-9bf3-7e24bf047062" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="a7d6b5c5-c7fd-4e38-9901-5a57259e88e4" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="b829c217-3895-4b2d-9cc8-fde93a98ef73" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="8443ba03-5422-4043-b494-c068e3e51c70" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="03182bdc-1992-44b2-8ed5-8cc28348de74" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="f3a3137f-95ea-46d8-8229-23de68e88d99" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="0ab1340b-e77d-487a-ba71-3d7ae0db7bda" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="9401c86d-6116-449b-9e02-f52327c1e023" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="33a431a6-aa91-4bb6-b6ba-0abd4f39648a">&lt;strong&gt;</bpt>ConfigurationData<ept id="33a431a6-aa91-4bb6-b6ba-0abd4f39648a">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="33a431a6-aa91-4bb6-b6ba-0abd4f39648a">&lt;strong&gt;</bpt>ConfigurationData<ept id="33a431a6-aa91-4bb6-b6ba-0abd4f39648a">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="9ff7ff6d-c549-4dd7-8b79-8bd0abf98d36" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="d854b336-3350-404e-94ce-845a1ab42b7e">&lt;strong&gt;</bpt>AllNodes<ept id="d854b336-3350-404e-94ce-845a1ab42b7e">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="d854b336-3350-404e-94ce-845a1ab42b7e">&lt;strong&gt;</bpt>AllNodes<ept id="d854b336-3350-404e-94ce-845a1ab42b7e">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="364d4fc7-1157-4568-abb9-77469b79ff8f" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="d8eddcd0-35d5-4f68-afcf-abdda93bc9a4" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="ed35969d-c9aa-4b74-909c-54fd83a57869" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="ac73a251-15a5-4f8b-aece-104c2ebe6991" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="6008aabf-508d-41d5-9a54-6f0e76500c76" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="f6d2569d-3c0f-4145-9a6e-94fadc28765c" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="532a7a36-e4d7-4673-a319-043e355fc1bf" xml:space="preserve">
          <source><bpt id="ebc35c2a-e55b-4cb4-968d-132907ae598b">&lt;strong&gt;</bpt>$AllNodes<ept id="ebc35c2a-e55b-4cb4-968d-132907ae598b">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="ebc35c2a-e55b-4cb4-968d-132907ae598b">&lt;strong&gt;</bpt>$AllNodes<ept id="ebc35c2a-e55b-4cb4-968d-132907ae598b">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="3a0fe4ae-3068-4491-bbbc-a3674a1f63fb" xml:space="preserve">
          <source>You can use filtering with <bpt id="eb760bfd-9952-40e6-abb4-3bc3d97b73c1">&lt;strong&gt;</bpt>.Where()<ept id="eb760bfd-9952-40e6-abb4-3bc3d97b73c1">&lt;/strong&gt;</ept> and <bpt id="162756c1-17d8-4304-836a-57f31a57506e">&lt;strong&gt;</bpt>.ForEach()<ept id="162756c1-17d8-4304-836a-57f31a57506e">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="eb760bfd-9952-40e6-abb4-3bc3d97b73c1">&lt;strong&gt;</bpt>.Where()<ept id="eb760bfd-9952-40e6-abb4-3bc3d97b73c1">&lt;/strong&gt;</ept> and <bpt id="162756c1-17d8-4304-836a-57f31a57506e">&lt;strong&gt;</bpt>.ForEach()<ept id="162756c1-17d8-4304-836a-57f31a57506e">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="81ee71e9-ed2e-4196-b0aa-81ed6ae74511" xml:space="preserve">
          <source><bpt id="212804fb-f9f6-43b0-8bc5-d67afe70e690">&lt;strong&gt;</bpt>$Node<ept id="212804fb-f9f6-43b0-8bc5-d67afe70e690">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="212804fb-f9f6-43b0-8bc5-d67afe70e690">&lt;strong&gt;</bpt>$Node<ept id="212804fb-f9f6-43b0-8bc5-d67afe70e690">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="f784450c-5957-4e6c-ba7c-5d4ce9279a8c" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="5f73dc03-5c36-44ed-afcf-c8553a6e06d4" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="cea05a3a-ebdd-4a7b-a786-2a828e4d3a6a" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="07148915-1c2c-4b1c-91e9-cc62a2fdaf61" xml:space="preserve">
          <source><bpt id="d9ad7bf5-be20-43ad-a888-9051b453d795">&lt;strong&gt;</bpt>$ConfigurationData<ept id="d9ad7bf5-be20-43ad-a888-9051b453d795">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="d9ad7bf5-be20-43ad-a888-9051b453d795">&lt;strong&gt;</bpt>$ConfigurationData<ept id="d9ad7bf5-be20-43ad-a888-9051b453d795">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="6f5bda95-9ad6-410d-bd7f-0f1d3d8ade3d" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="45a5483a-4a39-42d5-928e-0da8ffaa4aad" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="021e4e07-194d-4718-afd6-0b1aec9e3851CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="021e4e07-194d-4718-afd6-0b1aec9e3851CapsExtId1">&lt;/linkText&gt;</ept><bpt id="021e4e07-194d-4718-afd6-0b1aec9e3851CapsExtId2">&lt;title&gt;</bpt><ept id="021e4e07-194d-4718-afd6-0b1aec9e3851CapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="021e4e07-194d-4718-afd6-0b1aec9e3851CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="021e4e07-194d-4718-afd6-0b1aec9e3851CapsExtId1">&lt;/linkText&gt;</ept><bpt id="021e4e07-194d-4718-afd6-0b1aec9e3851CapsExtId2">&lt;title&gt;</bpt><ept id="021e4e07-194d-4718-afd6-0b1aec9e3851CapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>