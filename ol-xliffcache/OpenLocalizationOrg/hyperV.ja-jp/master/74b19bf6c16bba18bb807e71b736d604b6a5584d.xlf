<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="ja-jp">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74b19bf6c16bba18bb807e71b736d604b6a5584d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Ever since its launch, the Custom Script extension has been used widely to configure workloads on both Windows and Linux VMs.</source>
          <target state="new">Ever since its launch, the Custom Script extension has been used widely to configure workloads on both Windows and Linux VMs.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>With the introduction of Azure Resource Manager templates, users can now create a single template that not only provisions the VM but also configures the workloads on it.</source>
          <target state="new">With the introduction of Azure Resource Manager templates, users can now create a single template that not only provisions the VM but also configures the workloads on it.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Azure Resource manager templates</source>
          <target state="new">About Azure Resource manager templates</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure Resource Manager template allow you to declaratively specify the Azure IaaS infrastructure in Json language by defining the dependencies between resources.</source>
          <target state="new">Azure Resource Manager template allow you to declaratively specify the Azure IaaS infrastructure in Json language by defining the dependencies between resources.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For a detailed overview of Azure Resource Manager templates, see the following articles:</source>
          <target state="new">For a detailed overview of Azure Resource Manager templates, see the following articles:</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Resource Group Overview</source>
          <target state="new">Resource Group Overview</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Deploying Templates with Azure CLI</source>
          <target state="new">Deploying Templates with Azure CLI</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Deploying Templates with Azure Powershell</source>
          <target state="new">Deploying Templates with Azure Powershell</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Prerequistes</source>
          <target state="new">Prerequistes</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Download the Azure command line tools for your operating system from <bpt id="p1">[</bpt>here<ept id="p1">](https://azure.microsoft.com/downloads/)</ept>.</source>
          <target state="new">Download the Azure command line tools for your operating system from <bpt id="p1">[</bpt>here<ept id="p1">](https://azure.microsoft.com/downloads/)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If the scripts will be run on an existing VM, make sure VM Agent is enabled on the VM, if not follow [the Linux](../articles/virtual-machines/virtual-machines-linux-classic-manage extensions.md) or [Windows](../articles/virtual-machines/virtual-machines-windows-classic-manage extensions.md) guidance to install one.</source>
          <target state="new">If the scripts will be run on an existing VM, make sure VM Agent is enabled on the VM, if not follow [the Linux](../articles/virtual-machines/virtual-machines-linux-classic-manage extensions.md) or [Windows](../articles/virtual-machines/virtual-machines-windows-classic-manage extensions.md) guidance to install one.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Upload the scripts that you want to run on the VM to Azure Storage.</source>
          <target state="new">Upload the scripts that you want to run on the VM to Azure Storage.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The scripts can come from a single or multiple storage containers.</source>
          <target state="new">The scripts can come from a single or multiple storage containers.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Alternatively the scripts can also be uploaded to a GitHub account.</source>
          <target state="new">Alternatively the scripts can also be uploaded to a GitHub account.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The script should be authored in such a way that the entry script which is launched by the extension in turn launches other scripts.</source>
          <target state="new">The script should be authored in such a way that the entry script which is launched by the extension in turn launches other scripts.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Using the custom script extension</source>
          <target state="new">Using the custom script extension</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For deploying with templates we use the same version of  Custom Script extension thats availale for Azure Service Management APIs.</source>
          <target state="new">For deploying with templates we use the same version of  Custom Script extension thats availale for Azure Service Management APIs.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The extension supports the same parameters and scenarios like uploading files to Azure Storage account or Github location.</source>
          <target state="new">The extension supports the same parameters and scenarios like uploading files to Azure Storage account or Github location.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The key difference while using with templates is the exact version of the extension should be specified, as opposed to specifying the version in majorversion.* format.</source>
          <target state="new">The key difference while using with templates is the exact version of the extension should be specified, as opposed to specifying the version in majorversion.* format.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>