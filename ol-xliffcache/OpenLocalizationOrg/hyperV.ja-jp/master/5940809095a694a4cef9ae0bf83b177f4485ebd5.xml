{
  "nodes": [
    {
      "content": "How to Use iOS SDK for Azure Mobile Apps",
      "pos": [
        27,
        67
      ]
    },
    {
      "content": "How to Use iOS SDK for Azure Mobile Apps",
      "pos": [
        86,
        126
      ]
    },
    {
      "content": "How to Use iOS Client Library for Azure Mobile Apps",
      "pos": [
        458,
        509
      ]
    },
    {
      "content": "&amp;nbsp;",
      "pos": [
        634,
        640
      ]
    },
    {
      "content": "This guide teaches you to perform common scenarios using the latest <bpt id=\"p1\">[</bpt>Azure Mobile Apps iOS SDK<ept id=\"p1\">](https://go.microsoft.com/fwLink/?LinkID=266533&amp;clcid=0x409)</ept>.",
      "pos": [
        762,
        918
      ]
    },
    {
      "content": "If you are new to Azure Mobile Apps, first complete <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure Mobile Apps Quick Start]</ept> to create a backend, create a table, and download a pre-built iOS Xcode project.",
      "pos": [
        919,
        1083
      ]
    },
    {
      "content": "In this guide, we focus on the client-side iOS SDK.",
      "pos": [
        1084,
        1135
      ]
    },
    {
      "content": "To learn more about the .NET server-side SDK for the backend, see <bpt id=\"p1\">[</bpt>Work with .NET Backend<ept id=\"p1\">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept>",
      "pos": [
        1136,
        1286
      ]
    },
    {
      "content": "Reference documentation",
      "pos": [
        1291,
        1314
      ]
    },
    {
      "pos": [
        1316,
        1479
      ],
      "content": "The reference documentation for the iOS client SDK is located here: <bpt id=\"p1\">[</bpt>Azure Mobile Apps iOS Client Reference<ept id=\"p1\">](http://azure.github.io/azure-mobile-services/iOS/v3/)</ept>."
    },
    {
      "pos": [
        1483,
        1526
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"Setup\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Setup and Prerequisites"
    },
    {
      "content": "This guide assumes that you have created a backend with a table.",
      "pos": [
        1528,
        1592
      ]
    },
    {
      "content": "This guide assumes that the table has the same schema as the tables in those tutorials.",
      "pos": [
        1593,
        1680
      ]
    },
    {
      "content": "This guide also assumes that in your code, you reference <ph id=\"ph1\">`WindowsAzureMobileServices.framework`</ph> and import <ph id=\"ph2\">`WindowsAzureMobileServices/WindowsAzureMobileServices.h`</ph>.",
      "pos": [
        1681,
        1846
      ]
    },
    {
      "pos": [
        1850,
        1899
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"create-client\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Create Client"
    },
    {
      "content": "To access an Azure Mobile Apps backend in your project, create an <ph id=\"ph1\">`MSClient`</ph>.",
      "pos": [
        1901,
        1978
      ]
    },
    {
      "content": "Replace <ph id=\"ph1\">`AppUrl`</ph> with the app URL.",
      "pos": [
        1979,
        2013
      ]
    },
    {
      "content": "You may leave <ph id=\"ph1\">`gatewayURLString`</ph> and <ph id=\"ph2\">`applicationKey`</ph> empty.",
      "pos": [
        2014,
        2074
      ]
    },
    {
      "content": "If you set up a gateway for authentication, populate <ph id=\"ph1\">`gatewayURLString`</ph> with the gateway URL.",
      "pos": [
        2075,
        2168
      ]
    },
    {
      "pos": [
        2293,
        2353
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"table-reference\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Create Table Reference"
    },
    {
      "content": "To access or update data, create a reference to the backend table.",
      "pos": [
        2355,
        2421
      ]
    },
    {
      "content": "Replace <ph id=\"ph1\">`TodoItem`</ph> with the name of your table.",
      "pos": [
        2422,
        2469
      ]
    },
    {
      "pos": [
        2539,
        2580
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"querying\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Query Data"
    },
    {
      "content": "To create a database query, query the <ph id=\"ph1\">`MSTable`</ph> object.",
      "pos": [
        2582,
        2637
      ]
    },
    {
      "content": "The following query gets all the items in <ph id=\"ph1\">`TodoItem`</ph> and logs the text of each item.",
      "pos": [
        2638,
        2722
      ]
    },
    {
      "pos": [
        3136,
        3188
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"filtering\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Filter Returned Data"
    },
    {
      "content": "To filter results, there are many available options.",
      "pos": [
        3190,
        3242
      ]
    },
    {
      "content": "To filter using a predicate, use an <ph id=\"ph1\">`NSPredicate`</ph> and <ph id=\"ph2\">`readWithPredicate`</ph>.",
      "pos": [
        3244,
        3318
      ]
    },
    {
      "content": "The following filters returned data to find only incomplete Todo items.",
      "pos": [
        3319,
        3390
      ]
    },
    {
      "pos": [
        3974,
        4020
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"query-object\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Use MSQuery"
    },
    {
      "pos": [
        4022,
        4142
      ],
      "content": "To perform a complex query (including sorting and paging), create an <ph id=\"ph1\">`MSQuery`</ph> object, directly or by using a predicate:"
    },
    {
      "content": "<ph id=\"ph1\">`MSQuery`</ph> lets you control several query behaviors, including the following.",
      "pos": [
        4291,
        4367
      ]
    },
    {
      "content": "Execute an <ph id=\"ph1\">`MSQuery`</ph> query by calling <ph id=\"ph2\">`readWithCompletion`</ph> on it, as shown in the next example.",
      "pos": [
        4368,
        4463
      ]
    },
    {
      "content": "Specify order of results",
      "pos": [
        4466,
        4490
      ]
    },
    {
      "content": "Limit which fields to return",
      "pos": [
        4493,
        4521
      ]
    },
    {
      "content": "Limit how many records to return",
      "pos": [
        4524,
        4556
      ]
    },
    {
      "content": "Specify total count in response",
      "pos": [
        4559,
        4590
      ]
    },
    {
      "content": "Specify custom query string parameters in request",
      "pos": [
        4593,
        4642
      ]
    },
    {
      "content": "Apply additional functions",
      "pos": [
        4645,
        4671
      ]
    },
    {
      "pos": [
        4677,
        4729
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"sorting\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Sort Data with MSQuery"
    },
    {
      "content": "To sort results, let's look at an example.",
      "pos": [
        4731,
        4773
      ]
    },
    {
      "content": "To first ascendingly by field <ph id=\"ph1\">`text`</ph> and then descendingly by field <ph id=\"ph2\">`completion`</ph>, invoke <ph id=\"ph3\">`MSQuery`</ph> like so:",
      "pos": [
        4774,
        4881
      ]
    },
    {
      "pos": [
        5286,
        5403
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"selecting\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph><ph id=\"ph3\">&lt;a name=\"parameters\"&gt;</ph><ph id=\"ph4\">&lt;/a&gt;</ph>How to: Limit Fields and Expand Query String Parameters with MSQuery"
    },
    {
      "content": "To limit fields to be returned in a query, specify the names of the fields in the <bpt id=\"p1\">**</bpt>selectFields<ept id=\"p1\">**</ept> property.",
      "pos": [
        5405,
        5513
      ]
    },
    {
      "content": "This returns only the text and completed fields:",
      "pos": [
        5514,
        5562
      ]
    },
    {
      "pos": [
        5624,
        5790
      ],
      "content": "To include additional query string parameters in the server request (for example, because a custom server-side script uses them), populate <ph id=\"ph1\">`query.parameters`</ph> like so:"
    },
    {
      "pos": [
        5898,
        5941
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"inserting\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Insert Data"
    },
    {
      "content": "To insert a new table row, create a new <ph id=\"ph1\">`NSDictionary`</ph> and invoke <ph id=\"ph2\">`table insert`</ph>.",
      "pos": [
        5943,
        6024
      ]
    },
    {
      "content": "Mobile Services automatically generates new columns based on the <ph id=\"ph1\">`NSDictionary`</ph> if <bpt id=\"p1\">[</bpt><ept id=\"p1\">Dynamic Schema]</ept> is not disabled.",
      "pos": [
        6025,
        6141
      ]
    },
    {
      "content": "If <ph id=\"ph1\">`id`</ph> is not provided, the backend automatically generates a new unique ID.",
      "pos": [
        6143,
        6220
      ]
    },
    {
      "content": "Provide your own <ph id=\"ph1\">`id`</ph> to use email addresses, usernames, or your own custom values as ID.",
      "pos": [
        6221,
        6310
      ]
    },
    {
      "content": "Providing your own ID may ease joins and business-oriented database logic.",
      "pos": [
        6311,
        6385
      ]
    },
    {
      "pos": [
        6957,
        7000
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"modifying\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Modify Data"
    },
    {
      "pos": [
        7002,
        7062
      ],
      "content": "To update an existing row, modify an item and call <ph id=\"ph1\">`update`</ph>:"
    },
    {
      "content": "Alternatively, supply the row ID and the updated field:",
      "pos": [
        7365,
        7420
      ]
    },
    {
      "pos": [
        7642,
        7705
      ],
      "content": "At minimum, the <ph id=\"ph1\">`id`</ph> attribute must be set when making updates."
    },
    {
      "pos": [
        7709,
        7751
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"deleting\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Delete Data"
    },
    {
      "pos": [
        7753,
        7802
      ],
      "content": "To delete an item, invoke <ph id=\"ph1\">`delete`</ph> with the item:"
    },
    {
      "content": "Alternatively, delete by providing a row ID:",
      "pos": [
        7953,
        7997
      ]
    },
    {
      "pos": [
        8192,
        8255
      ],
      "content": "At minimum, the <ph id=\"ph1\">`id`</ph> attribute must be set when making deletes."
    },
    {
      "pos": [
        8259,
        8351
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"templates\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Register push templates to send cross-platform notifications"
    },
    {
      "pos": [
        8353,
        8476
      ],
      "content": "To register templates, simply pass along templates with your <bpt id=\"p1\">**</bpt>client.push registerDeviceToken<ept id=\"p1\">**</ept> method in your client app."
    },
    {
      "content": "Your templates will be of type NSDictionary and can contain multiple templates in the following format:",
      "pos": [
        8612,
        8715
      ]
    },
    {
      "content": "Note that all tags will be stripped away for security.",
      "pos": [
        8833,
        8887
      ]
    },
    {
      "content": "To add tags to installations or templates within installations, see <bpt id=\"p1\">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id=\"p1\">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#tags)</ept>.",
      "pos": [
        8888,
        9083
      ]
    },
    {
      "pos": [
        9085,
        9235
      ],
      "content": "To send notifications utilizing these registered templates, work with <bpt id=\"p1\">[</bpt>Notification Hubs APIs<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/dn495101.aspx)</ept>"
    },
    {
      "pos": [
        9239,
        9281
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"errors\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Handle Errors"
    },
    {
      "content": "When you call a mobile service, the completion block contains an <ph id=\"ph1\">`NSError *error`</ph> parameter.",
      "pos": [
        9283,
        9375
      ]
    },
    {
      "content": "When an error occurs, this parameter is non-nil.",
      "pos": [
        9376,
        9424
      ]
    },
    {
      "content": "In your code, you should check this parameter and handle the error as needed.",
      "pos": [
        9425,
        9502
      ]
    },
    {
      "content": "The file <bpt id=\"p1\">[</bpt><ph id=\"ph1\">`&lt;WindowsAzureMobileServices/MSError.h&gt;`</ph><ept id=\"p1\">](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h)</ept> defines the constants <ph id=\"ph2\">`MSErrorResponseKey`</ph>, <ph id=\"ph3\">`MSErrorRequestKey`</ph>, and <ph id=\"ph4\">`MSErrorServerItemKey`</ph> to get more data related to the error.",
      "pos": [
        9504,
        9768
      ]
    },
    {
      "content": "In addition, the file defines constants for each error code.",
      "pos": [
        9769,
        9829
      ]
    },
    {
      "content": "For an example on how to use these constants, see <bpt id=\"p1\">[</bpt><ept id=\"p1\">Conflict-Handler]</ept> for its usage of <ph id=\"ph1\">`MSErrorServerItemKey`</ph> and <ph id=\"ph2\">`MSErrorPreconditionFailed`</ph>.",
      "pos": [
        9830,
        9971
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"How to Use iOS SDK for Azure Mobile Apps\"\n    description=\"How to Use iOS SDK for Azure Mobile Apps\"\n    services=\"app-service\\mobile\"\n    documentationCenter=\"ios\"\n    authors=\"krisragh\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"app-service-mobile\"\n    ms.workload=\"mobile\"\n    ms.tgt_pltfrm=\"mobile-ios\"\n    ms.devlang=\"objective-c\"\n    ms.topic=\"article\"\n    ms.date=\"11/30/2015\"\n    ms.author=\"krisragh\"/>\n\n# How to Use iOS Client Library for Azure Mobile Apps\n\n[AZURE.INCLUDE [app-service-mobile-selector-client-library](../../includes/app-service-mobile-selector-client-library.md)]\n&nbsp; \n \n[AZURE.INCLUDE [app-service-mobile-note-mobile-services](../../includes/app-service-mobile-note-mobile-services.md)]\n\nThis guide teaches you to perform common scenarios using the latest [Azure Mobile Apps iOS SDK](https://go.microsoft.com/fwLink/?LinkID=266533&clcid=0x409). If you are new to Azure Mobile Apps, first complete [Azure Mobile Apps Quick Start] to create a backend, create a table, and download a pre-built iOS Xcode project. In this guide, we focus on the client-side iOS SDK. To learn more about the .NET server-side SDK for the backend, see [Work with .NET Backend](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)\n\n## Reference documentation\n\nThe reference documentation for the iOS client SDK is located here: [Azure Mobile Apps iOS Client Reference](http://azure.github.io/azure-mobile-services/iOS/v3/).\n\n##<a name=\"Setup\"></a>Setup and Prerequisites\n\nThis guide assumes that you have created a backend with a table. This guide assumes that the table has the same schema as the tables in those tutorials. This guide also assumes that in your code, you reference `WindowsAzureMobileServices.framework` and import `WindowsAzureMobileServices/WindowsAzureMobileServices.h`.\n\n##<a name=\"create-client\"></a>How to: Create Client\n\nTo access an Azure Mobile Apps backend in your project, create an `MSClient`. Replace `AppUrl` with the app URL. You may leave `gatewayURLString` and `applicationKey` empty. If you set up a gateway for authentication, populate `gatewayURLString` with the gateway URL.\n\n```\nMSClient *client = [MSClient clientWithApplicationURLString:@\"AppUrl\" gatewayURLString:@\"\" applicationKey:@\"\"];\n```\n\n##<a name=\"table-reference\"></a>How to: Create Table Reference\n\nTo access or update data, create a reference to the backend table. Replace `TodoItem` with the name of your table.\n\n```\n    MSTable *table = [client tableWithName:@\"TodoItem\"];\n```\n\n##<a name=\"querying\"></a>How to: Query Data\n\nTo create a database query, query the `MSTable` object. The following query gets all the items in `TodoItem` and logs the text of each item.\n\n```\n[table readWithCompletion:^(MSQueryResult *result, NSError *error) {\n        if(error) { // error is nil if no error occured\n                NSLog(@\"ERROR %@\", error);\n        } else {\n                for(NSDictionary *item in result.items) { // items is NSArray of records that match query\n                        NSLog(@\"Todo Item: %@\", [item objectForKey:@\"text\"]);\n                }\n        }\n}];\n```\n\n##<a name=\"filtering\"></a>How to: Filter Returned Data\n\nTo filter results, there are many available options.\n\nTo filter using a predicate, use an `NSPredicate` and `readWithPredicate`. The following filters returned data to find only incomplete Todo items.\n\n```\n// Create a predicate that finds items where complete is false\nNSPredicate * predicate = [NSPredicate predicateWithFormat:@\"complete == NO\"];\n// Query the TodoItem table and update the items property with the results from the service\n[table readWithPredicate:predicate completion:^(MSQueryResult *result, NSError *error) {\n        if(error) {\n                NSLog(@\"ERROR %@\", error);\n        } else {\n                for(NSDictionary *item in result.items) {\n                        NSLog(@\"Todo Item: %@\", [item objectForKey:@\"text\"]);\n                }\n        }\n}];\n```\n\n##<a name=\"query-object\"></a>How to: Use MSQuery\n\nTo perform a complex query (including sorting and paging), create an `MSQuery` object, directly or by using a predicate:\n\n```\n    MSQuery *query = [table query];\n    MSQuery *query = [table queryWithPredicate: [NSPredicate predicateWithFormat:@\"complete == NO\"]];\n```\n\n`MSQuery` lets you control several query behaviors, including the following. Execute an `MSQuery` query by calling `readWithCompletion` on it, as shown in the next example.\n* Specify order of results\n* Limit which fields to return\n* Limit how many records to return\n* Specify total count in response\n* Specify custom query string parameters in request\n* Apply additional functions\n\n\n## <a name=\"sorting\"></a>How to: Sort Data with MSQuery\n\nTo sort results, let's look at an example. To first ascendingly by field `text` and then descendingly by field `completion`, invoke `MSQuery` like so:\n\n```\n[query orderByAscending:@\"text\"];\n[query orderByDescending:@\"complete\"];\n[query readWithCompletion:^(MSQueryResult *result, NSError *error) {\n        if(error) {\n                NSLog(@\"ERROR %@\", error);\n        } else {\n                for(NSDictionary *item in result.items) {\n                        NSLog(@\"Todo Item: %@\", [item objectForKey:@\"text\"]);\n                }\n        }\n}];\n```\n\n\n## <a name=\"selecting\"></a><a name=\"parameters\"></a>How to: Limit Fields and Expand Query String Parameters with MSQuery\n\nTo limit fields to be returned in a query, specify the names of the fields in the **selectFields** property. This returns only the text and completed fields:\n\n```\n    query.selectFields = @[@\"text\", @\"completed\"];\n```\n\nTo include additional query string parameters in the server request (for example, because a custom server-side script uses them), populate `query.parameters` like so:\n\n```\n    query.parameters = @{\n        @\"myKey1\" : @\"value1\",\n        @\"myKey2\" : @\"value2\",\n    };\n```\n\n##<a name=\"inserting\"></a>How to: Insert Data\n\nTo insert a new table row, create a new `NSDictionary` and invoke `table insert`. Mobile Services automatically generates new columns based on the `NSDictionary` if [Dynamic Schema] is not disabled.\n\nIf `id` is not provided, the backend automatically generates a new unique ID. Provide your own `id` to use email addresses, usernames, or your own custom values as ID. Providing your own ID may ease joins and business-oriented database logic.\n\n```\n    NSDictionary *newItem = @{@\"id\": @\"custom-id\", @\"text\": @\"my new item\", @\"complete\" : @NO};\n    [self.table insert:newItem completion:^(NSDictionary *result, NSError *error) {\n        // The result contains the new item that was inserted,\n        // depending on your server scripts it may have additional or modified\n        // data compared to what was passed to the server.\n        if(error) {\n                NSLog(@\"ERROR %@\", error);\n        } else {\n                        NSLog(@\"Todo Item: %@\", [result objectForKey:@\"text\"]);\n        }\n    }];\n```\n\n##<a name=\"modifying\"></a>How to: Modify Data\n\nTo update an existing row, modify an item and call `update`:\n\n```\n    NSMutableDictionary *newItem = [oldItem mutableCopy]; // oldItem is NSDictionary\n    [newItem setValue:@\"Updated text\" forKey:@\"text\"];\n    [self.table update:newItem completion:^(NSDictionary *item, NSError *error) {\n        // Handle error or perform additional logic as needed\n    }];\n```\n\nAlternatively, supply the row ID and the updated field:\n\n```\n    [self.table update:@{@\"id\":@\"37BBF396-11F0-4B39-85C8-B319C729AF6D\", @\"Complete\":@YES} completion:^(NSDictionary *item, NSError *error) {\n        // Handle error or perform additional logic as needed\n    }];\n```\n\nAt minimum, the `id` attribute must be set when making updates.\n\n##<a name=\"deleting\"></a>How to: Delete Data\n\nTo delete an item, invoke `delete` with the item:\n\n```\n    [self.table delete:item completion:^(id itemId, NSError *error) {\n        // Handle error or perform additional logic as needed\n    }];\n```\n\nAlternatively, delete by providing a row ID:\n\n```\n    [self.table deleteWithId:@\"37BBF396-11F0-4B39-85C8-B319C729AF6D\" completion:^(id itemId, NSError *error) {\n        // Handle error or perform additional logic as needed\n    }];   \n```\n\nAt minimum, the `id` attribute must be set when making deletes.\n\n##<a name=\"templates\"></a>How to: Register push templates to send cross-platform notifications\n\nTo register templates, simply pass along templates with your **client.push registerDeviceToken** method in your client app.\n\n        [client.push registerDeviceToken:deviceToken template:iOSTemplate completion:^(NSError *error) {\n            ...\n        }];\n\nYour templates will be of type NSDictionary and can contain multiple templates in the following format:\n\n        NSDictionary *iOSTemplate = @{ @\"templateName\": @{ @\"body\": @{ @\"aps\": @{ @\"alert\": @\"$(message)\" } } } };\n\nNote that all tags will be stripped away for security. To add tags to installations or templates within installations, see [Work with the .NET backend server SDK for Azure Mobile Apps](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#tags).\n\nTo send notifications utilizing these registered templates, work with [Notification Hubs APIs](https://msdn.microsoft.com/library/azure/dn495101.aspx)\n\n##<a name=\"errors\"></a>How to: Handle Errors\n\nWhen you call a mobile service, the completion block contains an `NSError *error` parameter. When an error occurs, this parameter is non-nil. In your code, you should check this parameter and handle the error as needed.\n\nThe file [`<WindowsAzureMobileServices/MSError.h>`](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h) defines the constants `MSErrorResponseKey`, `MSErrorRequestKey`, and `MSErrorServerItemKey` to get more data related to the error. In addition, the file defines constants for each error code. For an example on how to use these constants, see [Conflict-Handler] for its usage of `MSErrorServerItemKey` and `MSErrorPreconditionFailed`.\n\n<!-- Anchors. -->\n\n[What is Mobile Services]: #what-is\n[Concepts]: #concepts\n[Setup and Prerequisites]: #Setup\n[How to: Create the Mobile Services client]: #create-client\n[How to: Create a table reference]: #table-reference\n[How to: Query data from a mobile service]: #querying\n[Filter returned data]: #filtering\n[Sort returned data]: #sorting\n[Return data in pages]: #paging\n[Select specific columns]: #selecting\n[How to: Bind data to the user interface]: #binding\n[How to: Insert data into a mobile service]: #inserting\n[How to: Modify data in a mobile service]: #modifying\n[How to: Authenticate users]: #authentication\n[Cache authentication tokens]: #caching-tokens\n[How to: Upload images and large files]: #blobs\n[How to: Handle errors]: #errors\n[How to: Design unit tests]: #unit-testing\n[How to: Customize the client]: #customizing\n[Customize request headers]: #custom-headers\n[Customize data type serialization]: #custom-serialization\n[Next Steps]: #next-steps\n[How to: Use MSQuery]: #query-object\n\n<!-- Images. -->\n\n<!-- URLs. -->\n[Azure Mobile Apps Quick Start]: app-service-mobile-ios-get-started.md\n\n[Add Mobile Services to Existing App]: /develop/mobile/tutorials/get-started-data\n[Get started with Mobile Services]: /develop/mobile/tutorials/get-started-ios\n[Validate and modify data in Mobile Services by using server scripts]: /develop/mobile/tutorials/validate-modify-and-augment-data-ios\n[Mobile Services SDK]: https://go.microsoft.com/fwLink/p/?LinkID=266533\n[Authentication]: /develop/mobile/tutorials/get-started-with-users-ios\n[iOS SDK]: https://developer.apple.com/xcode\n\n[Handling Expired Tokens]: http://go.microsoft.com/fwlink/p/?LinkId=301955\n[Live Connect SDK]: http://go.microsoft.com/fwlink/p/?LinkId=301960\n[Permissions]: http://msdn.microsoft.com/library/windowsazure/jj193161.aspx\n[Service-side Authorization]: mobile-services-javascript-backend-service-side-authorization.md\n[Use scripts to authorize users]: /develop/mobile/tutorials/authorize-users-in-scripts-ios\n[Dynamic Schema]: http://go.microsoft.com/fwlink/p/?LinkId=296271\n[How to: access custom parameters]: /develop/mobile/how-to-guides/work-with-server-scripts#access-headers\n[Create a table]: http://msdn.microsoft.com/library/windowsazure/jj193162.aspx\n[NSDictionary object]: http://go.microsoft.com/fwlink/p/?LinkId=301965\n[ASCII control codes C0 and C1]: http://en.wikipedia.org/wiki/Data_link_escape_character#C1_set\n[CLI to manage Mobile Services tables]: ../virtual-machines-command-line-tools.md#Mobile_Tables\n[Conflict-Handler]: mobile-services-ios-handling-conflicts-offline-data.md#add-conflict-handling\n\n\n"
}