<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="ja-jp">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">464424d78ec097e8f9d1c9ed5c4402330d6828ff</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Understanding the Azure Active Directory Application Manifest | Microsoft Azure</source>
          <target state="new">Understanding the Azure Active Directory Application Manifest | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Provides additional details on the Azure AD application manifest, which accompanies each application configuration in an Azure AD tenant.</source>
          <target state="new">Provides additional details on the Azure AD application manifest, which accompanies each application configuration in an Azure AD tenant.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Understanding the Azure Active Directory application manifest</source>
          <target state="new">Understanding the Azure Active Directory application manifest</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applications that integrate with Azure Active Directory (AD) must be registered with an Azure AD tenant, providing a persistent identity configuration for the application.</source>
          <target state="new">Applications that integrate with Azure Active Directory (AD) must be registered with an Azure AD tenant, providing a persistent identity configuration for the application.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This configuration is consulted at runtime, enabling scenarios that allow an application to outsource and broker authentication/authorization through Azure AD.</source>
          <target state="new">This configuration is consulted at runtime, enabling scenarios that allow an application to outsource and broker authentication/authorization through Azure AD.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about the Azure AD application model, see the <bpt id="p1">[</bpt>Adding, Updating, and Removing an Application<ept id="p1">][ADD-UPD-RMV-APP]</ept> article.</source>
          <target state="new">For more information about the Azure AD application model, see the <bpt id="p1">[</bpt>Adding, Updating, and Removing an Application<ept id="p1">][ADD-UPD-RMV-APP]</ept> article.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Updating an application's identity configuration</source>
          <target state="new">Updating an application's identity configuration</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>There are actually multiple options available for updating the properties on an application's identity configuration, which vary in capabilities and degrees of difficulty, including the following:</source>
          <target state="new">There are actually multiple options available for updating the properties on an application's identity configuration, which vary in capabilities and degrees of difficulty, including the following:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><bpt id="p2">[</bpt>Azure classic portal's<ept id="p2">][AZURE-CLASSIC-PORTAL]</ept> Web user interface<ept id="p1">**</ept> allows you to update the most common properties of an application.</source>
          <target state="new">The <bpt id="p1">**</bpt><bpt id="p2">[</bpt>Azure classic portal's<ept id="p2">][AZURE-CLASSIC-PORTAL]</ept> Web user interface<ept id="p1">**</ept> allows you to update the most common properties of an application.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is the quickest and least error prone way of updating your application's properties, but does not give you full access to all properties, like the next two methods.</source>
          <target state="new">This is the quickest and least error prone way of updating your application's properties, but does not give you full access to all properties, like the next two methods.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more advanced scenarios where you need to update properties that are not exposed in the Azure classic portal, you can modify the <bpt id="p1">**</bpt>application manifest<ept id="p1">**</ept>.</source>
          <target state="new">For more advanced scenarios where you need to update properties that are not exposed in the Azure classic portal, you can modify the <bpt id="p1">**</bpt>application manifest<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is the focus of this article and is discussed in more detail starting in the next section.</source>
          <target state="new">This is the focus of this article and is discussed in more detail starting in the next section.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It's also possible to <bpt id="p1">**</bpt>write an application that uses the <bpt id="p2">[</bpt>Graph API<ept id="p2">][GRAPH-API]</ept><ept id="p1">**</ept> to update your application, which requires the most effort.</source>
          <target state="new">It's also possible to <bpt id="p1">**</bpt>write an application that uses the <bpt id="p2">[</bpt>Graph API<ept id="p2">][GRAPH-API]</ept><ept id="p1">**</ept> to update your application, which requires the most effort.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This may be an attractive option though, if you are writing management software, or need to update application properties on a regular basis in an automated fashion.</source>
          <target state="new">This may be an attractive option though, if you are writing management software, or need to update application properties on a regular basis in an automated fashion.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Using the application manifest to update an application's identity configuration</source>
          <target state="new">Using the application manifest to update an application's identity configuration</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Through the <bpt id="p1">[</bpt>Azure classic portal<ept id="p1">][AZURE-CLASSIC-PORTAL]</ept>, you can manage your application's identity configuration, by downloading and uploading a JSON file representation, which is called an application manifest.</source>
          <target state="new">Through the <bpt id="p1">[</bpt>Azure classic portal<ept id="p1">][AZURE-CLASSIC-PORTAL]</ept>, you can manage your application's identity configuration, by downloading and uploading a JSON file representation, which is called an application manifest.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No actual file is stored in the directory - the application manifest is merely an HTTP GET operation on the Azure AD Graph API application entity, and the upload is an HTTP PATCH operation on the application entity.</source>
          <target state="new">No actual file is stored in the directory - the application manifest is merely an HTTP GET operation on the Azure AD Graph API application entity, and the upload is an HTTP PATCH operation on the application entity.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As a result, in order to understand the format and properties of the application manifest, you will need to reference the Graph API <bpt id="p1">[</bpt>Application entity<ept id="p1">][APPLICATION-ENTITY]</ept> documentation.</source>
          <target state="new">As a result, in order to understand the format and properties of the application manifest, you will need to reference the Graph API <bpt id="p1">[</bpt>Application entity<ept id="p1">][APPLICATION-ENTITY]</ept> documentation.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Examples of updates that can be performed though application manifest upload</source>
          <target state="new">Examples of updates that can be performed though application manifest upload</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>include:</source>
          <target state="new">include:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Declare permission scopes (oauth2Permissions) exposed by your web API.</source>
          <target state="new">Declare permission scopes (oauth2Permissions) exposed by your web API.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See the "Exposing Web APIs to Other Applications" topic in <bpt id="p1">[</bpt>Integrating Applications with Azure Active Directory<ept id="p1">][INTEGRATING-APPLICATIONS-AAD]</ept> for information on implementing user impersonation using the oauth2Permissions delegated permission scope.</source>
          <target state="new">See the "Exposing Web APIs to Other Applications" topic in <bpt id="p1">[</bpt>Integrating Applications with Azure Active Directory<ept id="p1">][INTEGRATING-APPLICATIONS-AAD]</ept> for information on implementing user impersonation using the oauth2Permissions delegated permission scope.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>As mentioned previously, all Application Entity properties are documented in the the Graph API <bpt id="p1">[</bpt>Entity and Complex Type reference<ept id="p1">][APPLICATION-ENTITY]</ept> reference article, including the oauth2Permissions member which is a collection of type <bpt id="p2">[</bpt>OAuth2Permission<ept id="p2">][APPLICATION-ENTITY-OAUTH2-PERMISSION]</ept>.</source>
          <target state="new">As mentioned previously, all Application Entity properties are documented in the the Graph API <bpt id="p1">[</bpt>Entity and Complex Type reference<ept id="p1">][APPLICATION-ENTITY]</ept> reference article, including the oauth2Permissions member which is a collection of type <bpt id="p2">[</bpt>OAuth2Permission<ept id="p2">][APPLICATION-ENTITY-OAUTH2-PERMISSION]</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Declare application roles (appRoles) exposed by your app.</source>
          <target state="new">Declare application roles (appRoles) exposed by your app.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Application Entity's appRole member is a collection of type <bpt id="p1">[</bpt>AppRole<ept id="p1">][APPLICATION-ENTITY-APP-ROLE]</ept>.</source>
          <target state="new">The Application Entity's appRole member is a collection of type <bpt id="p1">[</bpt>AppRole<ept id="p1">][APPLICATION-ENTITY-APP-ROLE]</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Roles based access control in cloud applications using Azure AD<ept id="p1">][RBAC-CLOUD-APPS-AZUREAD]</ept> article for an implementation example.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Roles based access control in cloud applications using Azure AD<ept id="p1">][RBAC-CLOUD-APPS-AZUREAD]</ept> article for an implementation example.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Declare known client applications.</source>
          <target state="new">Declare known client applications.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Request Azure AD to issue group memberships claim for the signed in user.</source>
          <target state="new">Request Azure AD to issue group memberships claim for the signed in user.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>NOTE: this can be configured to additionally issue claims about the user's directory roles memberships.</source>
          <target state="new">NOTE: this can be configured to additionally issue claims about the user's directory roles memberships.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Authorization in Cloud Applications using AD Groups<ept id="p1">][AAD-GROUPS-FOR-AUTHORIZATION]</ept> article for an implementation example.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Authorization in Cloud Applications using AD Groups<ept id="p1">][AAD-GROUPS-FOR-AUTHORIZATION]</ept> article for an implementation example.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Allow your application to support OAuth 2.0 Implicit grant flows (for embedded JavaScript web pages or Single Page Applications (SPA))</source>
          <target state="new">Allow your application to support OAuth 2.0 Implicit grant flows (for embedded JavaScript web pages or Single Page Applications (SPA))</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Enable use of X509 certificates as the secret key.</source>
          <target state="new">Enable use of X509 certificates as the secret key.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Build service and daemon apps in Office 365<ept id="p1">][O365-SERVICE-DAEMON-APPS]</ept> and <bpt id="p2">[</bpt>Developer’s guide to auth with Azure Resource Manager API <ept id="p2">][DEV-GUIDE-TO-AUTH-WITH-ARM]</ept> articles for implementation examples.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Build service and daemon apps in Office 365<ept id="p1">][O365-SERVICE-DAEMON-APPS]</ept> and <bpt id="p2">[</bpt>Developer’s guide to auth with Azure Resource Manager API <ept id="p2">][DEV-GUIDE-TO-AUTH-WITH-ARM]</ept> articles for implementation examples.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The application manifest also provides a good way to track the state of your application registration.</source>
          <target state="new">The application manifest also provides a good way to track the state of your application registration.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Because it's available in JSON format, the file representation can be checked into your source control, along with your application's source code.</source>
          <target state="new">Because it's available in JSON format, the file representation can be checked into your source control, along with your application's source code.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Step by step example</source>
          <target state="new">Step by step example</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Now lets walk through the steps required to update your application's identity configuration through the application manifest:</source>
          <target state="new">Now lets walk through the steps required to update your application's identity configuration through the application manifest:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Navigate to the <bpt id="p1">[</bpt>Azure classic portal<ept id="p1">][AZURE-CLASSIC-PORTAL]</ept> and sign in with an account that has service administrator or co-administrator privileges.</source>
          <target state="new">Navigate to the <bpt id="p1">[</bpt>Azure classic portal<ept id="p1">][AZURE-CLASSIC-PORTAL]</ept> and sign in with an account that has service administrator or co-administrator privileges.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>After you've authenticated, scroll down and select the Azure "Active Directory" extension in the left navigation panel (1), then click on the Azure AD tenant where your application is registered (2).</source>
          <target state="new">After you've authenticated, scroll down and select the Azure "Active Directory" extension in the left navigation panel (1), then click on the Azure AD tenant where your application is registered (2).</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Select the Azure AD tenant</source>
          <target state="new">Select the Azure AD tenant</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When the directory page comes up, click "Applications" (1) on the top of the page to see a list of applications registered in the tenant.</source>
          <target state="new">When the directory page comes up, click "Applications" (1) on the top of the page to see a list of applications registered in the tenant.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Then find the application you want to update in the list and click on it (2).</source>
          <target state="new">Then find the application you want to update in the list and click on it (2).</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select the Azure AD tenant</source>
          <target state="new">Select the Azure AD tenant</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Now that you've selected the application's main page, notice the "Manage Manifest" feature on the bottom of the page (1).</source>
          <target state="new">Now that you've selected the application's main page, notice the "Manage Manifest" feature on the bottom of the page (1).</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you click this link, you will be prompted to either download or upload the JSON manifest file.</source>
          <target state="new">If you click this link, you will be prompted to either download or upload the JSON manifest file.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Click "Download Manifest" (2) which will be immediately followed with the download confirmation dialog prompting you to confirm by clicking "Download Manifest" (3), then either open or save the file locally (4).</source>
          <target state="new">Click "Download Manifest" (2) which will be immediately followed with the download confirmation dialog prompting you to confirm by clicking "Download Manifest" (3), then either open or save the file locally (4).</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Manage the manifest, download option</source>
          <target state="new">Manage the manifest, download option</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Download the manifest</source>
          <target state="new">Download the manifest</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In this example, we saved the file locally, allowing us to open in an editor, make changes to the JSON, and save again.</source>
          <target state="new">In this example, we saved the file locally, allowing us to open in an editor, make changes to the JSON, and save again.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Here's what the JSON structure looks like inside the Visual Studio JSON editor.</source>
          <target state="new">Here's what the JSON structure looks like inside the Visual Studio JSON editor.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Note that it follows the schema for the <bpt id="p1">[</bpt>Application entity<ept id="p1">][APPLICATION-ENTITY]</ept> as we mentioned earlier:</source>
          <target state="new">Note that it follows the schema for the <bpt id="p1">[</bpt>Application entity<ept id="p1">][APPLICATION-ENTITY]</ept> as we mentioned earlier:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Update the manifest JSON</source>
          <target state="new">Update the manifest JSON</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When you're finished updating the manifest, return to the Azure AD application page in the Azure classic portal, click the "Manage Manifest" feature again (1), but this time select the "Upload Manifest" option (2).</source>
          <target state="new">When you're finished updating the manifest, return to the Azure AD application page in the Azure classic portal, click the "Manage Manifest" feature again (1), but this time select the "Upload Manifest" option (2).</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Similar to the download, you will be greeted again with a second dialog, prompting you for the location of the JSON file.</source>
          <target state="new">Similar to the download, you will be greeted again with a second dialog, prompting you for the location of the JSON file.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Click "Browse for file ..."</source>
          <target state="new">Click "Browse for file ..."</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>(3), then use the "Choose File to Upload" dialog to select the JSON file (4), and press "Open".</source>
          <target state="new">(3), then use the "Choose File to Upload" dialog to select the JSON file (4), and press "Open".</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Once the dialog goes away, select the "OK" check mark (5) and your manifest will be uploaded.</source>
          <target state="new">Once the dialog goes away, select the "OK" check mark (5) and your manifest will be uploaded.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Manage the manifest, upload option</source>
          <target state="new">Manage the manifest, upload option</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Upload the manifest JSON</source>
          <target state="new">Upload the manifest JSON</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Upload the manifest JSON - confirmation</source>
          <target state="new">Upload the manifest JSON - confirmation</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>That's it.</source>
          <target state="new">That's it.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Now your application can run using the new Application configuration, based on the changes you made to the manifest.</source>
          <target state="new">Now your application can run using the new Application configuration, based on the changes you made to the manifest.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Please use the DISQUS comments section below to provide feedback and help us refine and shape our content.</source>
          <target state="new">Please use the DISQUS comments section below to provide feedback and help us refine and shape our content.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>