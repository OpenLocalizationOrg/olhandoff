<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="de-de" original="foo.file" tool-id="4a77aa06-bbaa-4d3b-af91-3806e54676e2" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="4a77aa06-bbaa-4d3b-af91-3806e54676e2" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="c3979265-f473-4303-a73a-7f1e76e71ddb">
        <trans-unit id="017ed0ca-57c7-47ad-82d5-ae11fa9a1fcc" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="c5963f28-a57d-4554-a4a8-1afc1173c492" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="f75de19f-e50e-41dd-a734-3c8d97c9437e" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="89557fe7-4357-41e3-bf20-3ed628b58934" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="a14e5baa-ebff-46a9-b09c-95db160d8dee" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="b5aefdcf-3a00-40eb-bf29-f5335c9c877c" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="ca84837f-eeb3-442f-9beb-63412ce3542f">&lt;code&gt;</bpt>Get-VM<ept id="ca84837f-eeb3-442f-9beb-63412ce3542f">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="ca84837f-eeb3-442f-9beb-63412ce3542f">&lt;code&gt;</bpt>Get-VM<ept id="ca84837f-eeb3-442f-9beb-63412ce3542f">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="c257d5ee-fa33-4453-8c72-4d5654b8b6fb" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="d3011d69-7153-4237-9207-0f5b88767a4a" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="b1c63923-d210-49d9-bddd-de49cddc0b95" xml:space="preserve">
          <source><bpt id="ed71754a-c59f-40d7-a212-89a789c59a7c">&lt;strong&gt;</bpt>Requirements<ept id="ed71754a-c59f-40d7-a212-89a789c59a7c">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="ed71754a-c59f-40d7-a212-89a789c59a7c">&lt;strong&gt;</bpt>Requirements<ept id="ed71754a-c59f-40d7-a212-89a789c59a7c">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="28160602-0d5b-4764-aab7-17a5100bbfe5" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="6df36a52-f06a-4426-867e-6174921ffa44" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="83628f1f-0931-4c77-80f1-4d21a3492bc7" xml:space="preserve">
          <source><bpt id="80745224-3a11-4880-ab7b-bd6034adceac">&lt;strong&gt;</bpt>Common Variables<ept id="80745224-3a11-4880-ab7b-bd6034adceac">&lt;/strong&gt;</ept> :  
<bpt id="b1456cc6-565e-4d94-b7aa-89df8895557d">&lt;code&gt;</bpt>$VMName<ept id="b1456cc6-565e-4d94-b7aa-89df8895557d">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="80745224-3a11-4880-ab7b-bd6034adceac">&lt;strong&gt;</bpt>Common Variables<ept id="80745224-3a11-4880-ab7b-bd6034adceac">&lt;/strong&gt;</ept> :  
<bpt id="b1456cc6-565e-4d94-b7aa-89df8895557d">&lt;code&gt;</bpt>$VMName<ept id="b1456cc6-565e-4d94-b7aa-89df8895557d">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="454e18e9-419a-4f30-9dbe-f8867a614b2e" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="606053e8-0bf2-423d-8a5b-74b124cde2fd">&lt;code&gt;</bpt>Get-VM<ept id="606053e8-0bf2-423d-8a5b-74b124cde2fd">&lt;/code&gt;</ept>  
<bpt id="ce4c0330-222a-4fba-8021-5fc44f1a695c">&lt;code&gt;</bpt>$cred<ept id="ce4c0330-222a-4fba-8021-5fc44f1a695c">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="606053e8-0bf2-423d-8a5b-74b124cde2fd">&lt;code&gt;</bpt>Get-VM<ept id="606053e8-0bf2-423d-8a5b-74b124cde2fd">&lt;/code&gt;</ept>  
<bpt id="ce4c0330-222a-4fba-8021-5fc44f1a695c">&lt;code&gt;</bpt>$cred<ept id="ce4c0330-222a-4fba-8021-5fc44f1a695c">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="c53f7092-0a12-4f55-bf22-d1356caff109" xml:space="preserve">
          <source>Can be populated using <bpt id="7be89e50-5fa2-4503-837f-eb514892f70c">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="7be89e50-5fa2-4503-837f-eb514892f70c">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="7be89e50-5fa2-4503-837f-eb514892f70c">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="7be89e50-5fa2-4503-837f-eb514892f70c">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="953c5023-bcfc-49c9-b0be-2fbd3096d50e" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="cf4caaa4-9526-4446-9d66-41ae10b8aeb7" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="ab7aa298-a57f-4c53-8cc2-8c700dac6767" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="520c3ec3-587f-4d7d-81e2-ce2239e78bdd" xml:space="preserve">
          <source><bpt id="703de902-b9ff-45db-b0ef-31ea5eefa4b9">&lt;strong&gt;</bpt>Outcome<ept id="703de902-b9ff-45db-b0ef-31ea5eefa4b9">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="703de902-b9ff-45db-b0ef-31ea5eefa4b9">&lt;strong&gt;</bpt>Outcome<ept id="703de902-b9ff-45db-b0ef-31ea5eefa4b9">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="9437c5a5-d0fb-4cbe-9238-ec6007dd0cfe" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="68ab56ad-f2e0-441b-bd54-3f76c19fed9e" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="034bdcf4-6540-4ac5-9879-f4162e97b78b" xml:space="preserve">
          <source><bpt id="13485533-aac4-48e4-88d5-22a6a04da1b2">&lt;strong&gt;</bpt>Outcome<ept id="13485533-aac4-48e4-88d5-22a6a04da1b2">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="13485533-aac4-48e4-88d5-22a6a04da1b2">&lt;strong&gt;</bpt>Outcome<ept id="13485533-aac4-48e4-88d5-22a6a04da1b2">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="3d773651-94d5-4160-b58a-7695c81b6e73" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="7a282318-55f1-4bc1-9d1a-6d05117df8c3" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="a0410e3d-faae-4f83-9053-91878a18f3c7" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="f906e0d1-2cb0-49f0-8323-789c11dcc82a" xml:space="preserve">
          <source><bpt id="a3f2979a-246a-4805-92f5-92e1c775f33c">&lt;em&gt;</bpt>* Outcome *<ept id="a3f2979a-246a-4805-92f5-92e1c775f33c">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="a3f2979a-246a-4805-92f5-92e1c775f33c">&lt;em&gt;</bpt>* Outcome *<ept id="a3f2979a-246a-4805-92f5-92e1c775f33c">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="0aad8935-72e2-46b9-b0d9-f347712efb29" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="7b21feec-e0f8-49fe-8110-166e5e0dcdaa" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="aa50ac6c-9213-42fe-bb48-6a891872dbe9" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="3cf19619-316e-4289-9b10-d36fa79b7241" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="15ef7269-3c4a-4c34-ade7-d25e90433ce4" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="1d7ff5c2-6017-4b8b-a2b3-cea59d5b7e1a" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="1f8024f7-3b91-4771-bdd4-743df47440eb" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="746987e0-8c1a-463b-a37e-01bee1f96809" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="4b895572-4e7c-4a96-9b64-252c6ec69853">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="4b895572-4e7c-4a96-9b64-252c6ec69853">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="4b895572-4e7c-4a96-9b64-252c6ec69853">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="4b895572-4e7c-4a96-9b64-252c6ec69853">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="0f9753bb-da88-42c6-a052-5d9cd8332aee" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="d70378ac-fac0-48fb-9631-bf67aaf6b8d0" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="4b619d14-1a24-4ad9-b955-8f7728a9cb26" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="480f1013-a8e6-41fc-ab4a-af89bd36553c" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="4f642cc8-8ffc-4ae8-a9a5-868fa515388a" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="cb04cecd-152b-4dc7-b37b-6a17984fd7ad" xml:space="preserve">
          <source><bpt id="7cc8fe2d-dd4a-4a49-8da7-9f697bca3ab7">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="7cc8fe2d-dd4a-4a49-8da7-9f697bca3ab7">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="7cc8fe2d-dd4a-4a49-8da7-9f697bca3ab7">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="7cc8fe2d-dd4a-4a49-8da7-9f697bca3ab7">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9e48393c-a895-4054-b3eb-e0b4354ef82e" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="c9c89591-b092-4a2f-bfdc-cd83ec6caef0" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="2ffce91f-e4ee-412f-ab09-5fb4924bb25f" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="03217696-bbc7-42c9-b3df-a87a56e926b9" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="1340e5d5-bfdc-49f9-a8a4-0e5ef54ee4be" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>