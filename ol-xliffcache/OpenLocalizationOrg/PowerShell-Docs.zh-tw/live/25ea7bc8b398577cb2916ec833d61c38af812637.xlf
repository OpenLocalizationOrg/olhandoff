<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="35ffddf0-41e9-4fb9-9e13-97a7bc5a9b46" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="35ffddf0-41e9-4fb9-9e13-97a7bc5a9b46" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="07872b6c-ba21-4d31-8fc5-886fce2b6d40">
        <trans-unit id="cac1b2ad-4a61-476a-ba55-61408d335823" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="744b464a-28e2-4a04-810a-5470a1e718a2" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="1915acdd-7249-430a-8c9e-cf0faa38d583" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="56d764e1-2813-4046-aa8c-05e90ce09afb" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="d5531ab1-0e37-45f0-be90-fb820ef7fe49" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="e94f89b0-5336-48c3-bfda-286025105567" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="857956b8-d256-494f-b3bc-d6ce6e35f65b" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="fffaa57e-1bb8-4fce-9a16-c345e0bf74de" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="8fe14b46-6fe9-4dd6-9a85-bfe677917661" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="aa6df265-c095-43e8-94db-43af4bdfcc88" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="694cfc6b-3462-45b2-bb4b-6245947e1287" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="b92cf530-6ec7-45fc-850f-cf793bc2d950">&lt;strong&gt;</bpt>ConfigurationData<ept id="b92cf530-6ec7-45fc-850f-cf793bc2d950">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="b92cf530-6ec7-45fc-850f-cf793bc2d950">&lt;strong&gt;</bpt>ConfigurationData<ept id="b92cf530-6ec7-45fc-850f-cf793bc2d950">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="a068fab0-3e40-44a7-bd63-734843dadadc" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="b3022937-4668-46cb-b563-f4f30edea06d">&lt;strong&gt;</bpt>AllNodes<ept id="b3022937-4668-46cb-b563-f4f30edea06d">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="b3022937-4668-46cb-b563-f4f30edea06d">&lt;strong&gt;</bpt>AllNodes<ept id="b3022937-4668-46cb-b563-f4f30edea06d">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="99e3b9d1-a536-4215-aef6-e700aa2f6dd6" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="ad5a8ce0-1c93-4265-874d-5e3e17fbac40" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="a1cfb972-38c0-403a-94ff-de1af8163f62" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="2227ca75-c719-4a48-a48d-d08f1b53984c" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="6327e403-7e91-4867-9e79-66e628c91648" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="02f66c08-04f5-47ca-8dad-8388cdaf7606" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="5a4577bb-36d6-47f0-8f32-f46664508700" xml:space="preserve">
          <source><bpt id="60b8f69d-ea69-4777-acdb-5ea9791d6acd">&lt;strong&gt;</bpt>$AllNodes<ept id="60b8f69d-ea69-4777-acdb-5ea9791d6acd">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="60b8f69d-ea69-4777-acdb-5ea9791d6acd">&lt;strong&gt;</bpt>$AllNodes<ept id="60b8f69d-ea69-4777-acdb-5ea9791d6acd">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="79928ef1-c699-4da0-811b-54f49d3d6b15" xml:space="preserve">
          <source>You can use filtering with <bpt id="1cc09a98-f13d-4fea-842d-820406ae8528">&lt;strong&gt;</bpt>.Where()<ept id="1cc09a98-f13d-4fea-842d-820406ae8528">&lt;/strong&gt;</ept> and <bpt id="dc2d666a-0f64-4b2c-9731-cf824169f979">&lt;strong&gt;</bpt>.ForEach()<ept id="dc2d666a-0f64-4b2c-9731-cf824169f979">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="1cc09a98-f13d-4fea-842d-820406ae8528">&lt;strong&gt;</bpt>.Where()<ept id="1cc09a98-f13d-4fea-842d-820406ae8528">&lt;/strong&gt;</ept> and <bpt id="dc2d666a-0f64-4b2c-9731-cf824169f979">&lt;strong&gt;</bpt>.ForEach()<ept id="dc2d666a-0f64-4b2c-9731-cf824169f979">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="2917cd2a-5c94-4d62-ac80-b792b7ee56a5" xml:space="preserve">
          <source><bpt id="25cee786-6731-4169-aee7-f66149cca6b1">&lt;strong&gt;</bpt>$Node<ept id="25cee786-6731-4169-aee7-f66149cca6b1">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="25cee786-6731-4169-aee7-f66149cca6b1">&lt;strong&gt;</bpt>$Node<ept id="25cee786-6731-4169-aee7-f66149cca6b1">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="27af0055-995a-4387-bd30-79379c05e249" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="000883e1-5705-4a73-ad48-a15e3696a5d5" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="a3f6c9cd-ea17-4ec7-acd9-34ee67edf576" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="65dab59a-ee96-4db0-bef2-149880546b0d" xml:space="preserve">
          <source><bpt id="1cfd67b2-f2a6-4eb8-8155-93579b6160ab">&lt;strong&gt;</bpt>$ConfigurationData<ept id="1cfd67b2-f2a6-4eb8-8155-93579b6160ab">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="1cfd67b2-f2a6-4eb8-8155-93579b6160ab">&lt;strong&gt;</bpt>$ConfigurationData<ept id="1cfd67b2-f2a6-4eb8-8155-93579b6160ab">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="92a76650-6ec5-4a41-832c-3e1546e36efa" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="e598d037-2103-4b25-ba03-750cc6174a1b" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="39e5c3d4-8111-46a4-8227-239e5570a69bCapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="39e5c3d4-8111-46a4-8227-239e5570a69bCapsExtId1">&lt;/linkText&gt;</ept><bpt id="39e5c3d4-8111-46a4-8227-239e5570a69bCapsExtId2">&lt;title&gt;</bpt><ept id="39e5c3d4-8111-46a4-8227-239e5570a69bCapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="39e5c3d4-8111-46a4-8227-239e5570a69bCapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="39e5c3d4-8111-46a4-8227-239e5570a69bCapsExtId1">&lt;/linkText&gt;</ept><bpt id="39e5c3d4-8111-46a4-8227-239e5570a69bCapsExtId2">&lt;title&gt;</bpt><ept id="39e5c3d4-8111-46a4-8227-239e5570a69bCapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>