<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="2157f0f3-3583-4457-8358-bca7f637da24" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="2157f0f3-3583-4457-8358-bca7f637da24" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="9747b9c4-0e49-4a7f-9316-9eac44e3a106">
        <trans-unit id="e5cb255d-4faf-49ed-a111-a51c7eb0232f" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="342901f7-9f92-4ec9-bacf-7e359b1bb063" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="32f762c1-5af0-4f98-8ecb-caf05376639e" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="8bb55c5c-1f6b-4890-bb77-15713f361500" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="1e03c6c7-9429-4e32-bb7f-711f42725f7e" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="b9b5fc7d-f365-43f8-a943-7f9f41c541d6" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="0a82dbc6-fcc9-45ae-b364-9f8e42f29ea5" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="6104e37f-6d1a-4f77-a37e-e70bfda42593" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="3e694075-901f-42a5-892b-3dd87b1dadf5" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="d2b6337c-ee22-4e32-8233-e82b8653c683" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="41b7a0cc-ce05-46ea-a4bc-c513fc4b9ebc" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="582b1c11-2d87-4bde-b056-24e219967ce8">&lt;strong&gt;</bpt>ConfigurationData<ept id="582b1c11-2d87-4bde-b056-24e219967ce8">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="582b1c11-2d87-4bde-b056-24e219967ce8">&lt;strong&gt;</bpt>ConfigurationData<ept id="582b1c11-2d87-4bde-b056-24e219967ce8">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="5290af18-8f72-473b-9af9-25377b585961" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="0075e2ba-e78e-4c0b-b384-d571b3b5ea23">&lt;strong&gt;</bpt>AllNodes<ept id="0075e2ba-e78e-4c0b-b384-d571b3b5ea23">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="0075e2ba-e78e-4c0b-b384-d571b3b5ea23">&lt;strong&gt;</bpt>AllNodes<ept id="0075e2ba-e78e-4c0b-b384-d571b3b5ea23">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="fd9a579b-c1cd-4c3e-8a65-7db8d7820c48" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="0948ba2b-86ae-45a2-9941-8931918b1b9d" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="04a57202-0139-4bca-9799-c659d7d96276" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="059b0459-aca8-4f82-a1d0-f428e21e5aee" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="8065b860-c28e-4a1a-b180-60b6bbafcb7d" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="014a735b-aced-4d1a-810f-f6f16babdc47" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="2f5e9a66-1c04-43ee-9ef2-acad9f246f29" xml:space="preserve">
          <source><bpt id="10a5fce3-2aba-4a3f-bbc8-d24bdecba55b">&lt;strong&gt;</bpt>$AllNodes<ept id="10a5fce3-2aba-4a3f-bbc8-d24bdecba55b">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="10a5fce3-2aba-4a3f-bbc8-d24bdecba55b">&lt;strong&gt;</bpt>$AllNodes<ept id="10a5fce3-2aba-4a3f-bbc8-d24bdecba55b">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="a2f96ce9-1e20-4a0b-8349-b6b113cc977b" xml:space="preserve">
          <source>You can use filtering with <bpt id="db9110a1-0335-4f87-8cf4-4a939bf30aea">&lt;strong&gt;</bpt>.Where()<ept id="db9110a1-0335-4f87-8cf4-4a939bf30aea">&lt;/strong&gt;</ept> and <bpt id="421f9283-e428-41e3-953f-0e4f55ef707b">&lt;strong&gt;</bpt>.ForEach()<ept id="421f9283-e428-41e3-953f-0e4f55ef707b">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="db9110a1-0335-4f87-8cf4-4a939bf30aea">&lt;strong&gt;</bpt>.Where()<ept id="db9110a1-0335-4f87-8cf4-4a939bf30aea">&lt;/strong&gt;</ept> and <bpt id="421f9283-e428-41e3-953f-0e4f55ef707b">&lt;strong&gt;</bpt>.ForEach()<ept id="421f9283-e428-41e3-953f-0e4f55ef707b">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="9aa3eb83-12f4-47d5-ba36-e23a3cc21d4e" xml:space="preserve">
          <source><bpt id="ffcf9837-f23e-46fb-8c03-96ac405ff5db">&lt;strong&gt;</bpt>$Node<ept id="ffcf9837-f23e-46fb-8c03-96ac405ff5db">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="ffcf9837-f23e-46fb-8c03-96ac405ff5db">&lt;strong&gt;</bpt>$Node<ept id="ffcf9837-f23e-46fb-8c03-96ac405ff5db">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="e32ea48e-89d1-4763-8f99-7bff6aad69f8" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="ab8029ae-7469-491b-bbf5-69ac055bb7d1" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="78980808-ed2e-4e6e-bae8-afcbd1256598" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="85745419-ae2d-497d-9186-26de155d19ce" xml:space="preserve">
          <source><bpt id="608b869d-ae88-4ffa-9241-010f1f282976">&lt;strong&gt;</bpt>$ConfigurationData<ept id="608b869d-ae88-4ffa-9241-010f1f282976">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="608b869d-ae88-4ffa-9241-010f1f282976">&lt;strong&gt;</bpt>$ConfigurationData<ept id="608b869d-ae88-4ffa-9241-010f1f282976">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="6ad365eb-2696-4b6f-9b30-14f50a2792bb" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="e2c320eb-2efc-4787-bc8c-ca2b7b43afba" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="dd3eb68b-7c52-40f8-a971-f4dd305cbc42CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="dd3eb68b-7c52-40f8-a971-f4dd305cbc42CapsExtId1">&lt;/linkText&gt;</ept><bpt id="dd3eb68b-7c52-40f8-a971-f4dd305cbc42CapsExtId2">&lt;title&gt;</bpt><ept id="dd3eb68b-7c52-40f8-a971-f4dd305cbc42CapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="dd3eb68b-7c52-40f8-a971-f4dd305cbc42CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="dd3eb68b-7c52-40f8-a971-f4dd305cbc42CapsExtId1">&lt;/linkText&gt;</ept><bpt id="dd3eb68b-7c52-40f8-a971-f4dd305cbc42CapsExtId2">&lt;title&gt;</bpt><ept id="dd3eb68b-7c52-40f8-a971-f4dd305cbc42CapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>