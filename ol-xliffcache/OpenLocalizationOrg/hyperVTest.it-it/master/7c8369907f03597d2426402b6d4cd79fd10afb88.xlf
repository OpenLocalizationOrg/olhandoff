<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="it-it" original="foo.file" tool-id="dd70f51d-d1f1-474e-bbbb-b49e93a577ae" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="dd70f51d-d1f1-474e-bbbb-b49e93a577ae" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">7c8369907f03597d2426402b6d4cd79fd10afb88</olfilehash>
    </header>
    <body>
      <group id="1a883a48-c09d-41fc-8389-3936a7a3ac79">
        <trans-unit id="9cb898cb-6d6e-47e6-a838-eb70267f3904" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="88c32e5b-9d19-410d-a29a-e8493c7702aa" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="3f8db78f-b44d-4e54-aac2-643ec1ac77f1" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="772e5e1f-ba2c-4ea1-8c01-d616a9514bfa" xml:space="preserve">
          <source>12-Nov update.Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">12-Nov update.Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="affef4ce-7aae-43ca-a492-f56265a12466" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="c69a0f29-98a8-4d76-a571-655633a3b897" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="d630345e-abf0-4255-96a5-fc77ec31160f" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="7998a604-966a-4333-af8c-5397bdbc3281">&lt;code&gt;</bpt>Get-VM<ept id="7998a604-966a-4333-af8c-5397bdbc3281">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="7998a604-966a-4333-af8c-5397bdbc3281">&lt;code&gt;</bpt>Get-VM<ept id="7998a604-966a-4333-af8c-5397bdbc3281">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="d9a9816e-c829-410d-8533-1995672cce2c" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="f89b8dfa-204f-4d71-a00d-a98deaedc508" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="faced2e6-3dac-49b7-baa0-fe022e8967bf" xml:space="preserve">
          <source><bpt id="1e217096-f45d-405a-80a6-a6491c1d8e28">&lt;strong&gt;</bpt>Requirements<ept id="1e217096-f45d-405a-80a6-a6491c1d8e28">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="1e217096-f45d-405a-80a6-a6491c1d8e28">&lt;strong&gt;</bpt>Requirements<ept id="1e217096-f45d-405a-80a6-a6491c1d8e28">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="4ad2c0b3-d809-4680-b869-59abdd853aef" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="96edbd37-483a-4a14-b8ef-f2314ba0889c" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="39bdcff6-dd48-4d97-9925-3e95c40d85e5" xml:space="preserve">
          <source><bpt id="8c372ac8-bb73-44a3-bfd7-6f29ee05ea81">&lt;strong&gt;</bpt>Common Variables<ept id="8c372ac8-bb73-44a3-bfd7-6f29ee05ea81">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="8c372ac8-bb73-44a3-bfd7-6f29ee05ea81">&lt;strong&gt;</bpt>Common Variables<ept id="8c372ac8-bb73-44a3-bfd7-6f29ee05ea81">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="edb47ead-8a4e-41be-860b-cd1ef389403c" xml:space="preserve">
          <source><bpt id="d6cb7073-c558-4694-8c93-111a4350f47b">&lt;code&gt;</bpt>$VMName<ept id="d6cb7073-c558-4694-8c93-111a4350f47b">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="d6cb7073-c558-4694-8c93-111a4350f47b">&lt;code&gt;</bpt>$VMName<ept id="d6cb7073-c558-4694-8c93-111a4350f47b">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="c157a335-9606-479e-b480-490c83440b0d" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="527df19f-5068-49e9-85bb-a669c4f6adc5">&lt;code&gt;</bpt>Get-VM<ept id="527df19f-5068-49e9-85bb-a669c4f6adc5">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="527df19f-5068-49e9-85bb-a669c4f6adc5">&lt;code&gt;</bpt>Get-VM<ept id="527df19f-5068-49e9-85bb-a669c4f6adc5">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="442fab00-e685-426a-86fe-de42b2aa8834" xml:space="preserve">
          <source><bpt id="49887529-8dd0-43ef-9254-f4a92df0efdf">&lt;code&gt;</bpt>$cred<ept id="49887529-8dd0-43ef-9254-f4a92df0efdf">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="49887529-8dd0-43ef-9254-f4a92df0efdf">&lt;code&gt;</bpt>$cred<ept id="49887529-8dd0-43ef-9254-f4a92df0efdf">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="51b80b1d-fe29-46be-a238-c07c3d5d48b7" xml:space="preserve">
          <source>Can be populated using <bpt id="c744f45b-ab36-42c1-aefd-21ade87c592d">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c744f45b-ab36-42c1-aefd-21ade87c592d">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="c744f45b-ab36-42c1-aefd-21ade87c592d">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c744f45b-ab36-42c1-aefd-21ade87c592d">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="527f58c4-68bb-4086-924a-a050c61fabd1" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="ba38620a-b1ba-4c47-a84e-1b69d1c89f64" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="ec32d72c-42b4-439a-89d6-e0d0a0433621" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="d263ce89-8cc4-4ae8-8f2b-fd4187d70043" xml:space="preserve">
          <source><bpt id="e9c8e8ce-9b71-429f-80e1-db8ba0f3dbe1">&lt;strong&gt;</bpt>Outcome<ept id="e9c8e8ce-9b71-429f-80e1-db8ba0f3dbe1">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="e9c8e8ce-9b71-429f-80e1-db8ba0f3dbe1">&lt;strong&gt;</bpt>Outcome<ept id="e9c8e8ce-9b71-429f-80e1-db8ba0f3dbe1">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ba92ba60-aa4c-4e2b-b2dd-1788457686b8" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="76075b36-ad9c-48e6-95c5-dc6140b9ae3c" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="108b3b53-8f86-4b6b-88ff-c5998d56be07" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="775c3681-ff4c-42ea-87f0-deb27ed7b3f0" xml:space="preserve">
          <source><bpt id="c4614036-82cf-4000-9df7-1342e68ecde9">&lt;strong&gt;</bpt>Outcome<ept id="c4614036-82cf-4000-9df7-1342e68ecde9">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="c4614036-82cf-4000-9df7-1342e68ecde9">&lt;strong&gt;</bpt>Outcome<ept id="c4614036-82cf-4000-9df7-1342e68ecde9">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="a12b90a2-17aa-4354-bd79-94a896b99c9d" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="7d140877-ed39-4d0a-884b-4719a5629d9f" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="2095cf53-417b-4613-90bf-574e72440cef" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="e49a6565-d543-4488-b759-1af28890e245" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="8fcc6c2c-052e-40bd-9806-cdeca125b23e" xml:space="preserve">
          <source><bpt id="6d64f0aa-f098-400c-8660-644c40959d1b">&lt;em&gt;</bpt>* Outcome *<ept id="6d64f0aa-f098-400c-8660-644c40959d1b">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="6d64f0aa-f098-400c-8660-644c40959d1b">&lt;em&gt;</bpt>* Outcome *<ept id="6d64f0aa-f098-400c-8660-644c40959d1b">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="7e559881-744f-43ff-b909-9e849c8f3237" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="03dac88f-2603-41d2-96fc-73d13b06c5d5" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="1599d089-51be-4fcf-bdfd-969c7eb22119" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="6bd320e2-bc2c-4d52-a0bb-4ed454421f7e" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="b6db1ef3-2fa2-4e04-9526-6300dd426bd3" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="2c545e99-971f-4909-a0f0-8bfdb8d802e7" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="008ba270-ab2a-412f-9a9c-1f07fe78af25" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="63dc3110-19f2-4178-bb24-343bf45823c9" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="27c7acfc-b171-40db-a781-dc6d584c6ebc" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="7b1ada2e-b1f4-4a53-bfca-8e7c266af325">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="7b1ada2e-b1f4-4a53-bfca-8e7c266af325">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="7b1ada2e-b1f4-4a53-bfca-8e7c266af325">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="7b1ada2e-b1f4-4a53-bfca-8e7c266af325">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="0a4eb26f-1b7c-4fef-abb4-c748bc0bf165" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="29a0e2ac-897f-4d2a-a507-2505dab0bd83" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="f3a7828b-15ae-45f9-ae3c-41216d0665ce" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="789f8fb0-6e3f-42bc-8e9e-725c6ec348bb" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="c85cf194-d77f-4b45-930b-a24ada8571f8" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="b662f477-924f-4ca6-a29b-994788313b70" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="832c6c92-c288-4252-ad6e-99c074d68aa7" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="592b7741-44b1-458d-a013-58d7dc3c7276" xml:space="preserve">
          <source><bpt id="09f50b9b-50f2-4a42-b67c-4e3ed6891a87">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="09f50b9b-50f2-4a42-b67c-4e3ed6891a87">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="09f50b9b-50f2-4a42-b67c-4e3ed6891a87">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="09f50b9b-50f2-4a42-b67c-4e3ed6891a87">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ea60cfe2-962f-4ef7-972d-e6b691acb94b" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="c97e590d-5878-48b3-a73b-8196bb2088fd" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="bc3f37cc-4b7a-487d-80fc-d144f5e17195" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="4227607c-bf8c-44cf-aab2-82001115aed5" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="dde2533d-7bf2-49ec-a8e1-7d2ea378e30a" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>