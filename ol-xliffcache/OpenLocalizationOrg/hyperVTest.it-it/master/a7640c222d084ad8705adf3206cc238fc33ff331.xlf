<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="it-it" original="foo.file" tool-id="c62ebba5-7d79-43da-926c-ef739dc85dc7" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="c62ebba5-7d79-43da-926c-ef739dc85dc7" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">a7640c222d084ad8705adf3206cc238fc33ff331</olfilehash>
    </header>
    <body>
      <group id="aa015e20-e9c5-4f3b-9239-9174fee83fb0">
        <trans-unit id="89808b7d-62eb-449c-a2db-9133146f0e13" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="c2a80bf2-2ef7-4b7e-bb84-15b1c93d30ae" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="bfd90f45-1bcc-49e5-ad8f-b92c2ced469f" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="1a71d4c7-9b54-4420-a5d3-b92f37f53998" xml:space="preserve">
          <source>Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="a71c6daa-0e06-41a3-a150-ce47b612cf71" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="af9c8c8e-8c64-407c-aa3f-9a53d6a6f4e7" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="063538c1-c9c5-4bd1-b76a-d0d113fe39c5" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="bebba497-d759-49cb-a7b5-8b1b25f2dde5">&lt;code&gt;</bpt>Get-VM<ept id="bebba497-d759-49cb-a7b5-8b1b25f2dde5">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="bebba497-d759-49cb-a7b5-8b1b25f2dde5">&lt;code&gt;</bpt>Get-VM<ept id="bebba497-d759-49cb-a7b5-8b1b25f2dde5">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="e198ca3a-3672-4da8-a4d6-bf374d39442d" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="51f35ea4-3520-4423-b1e2-afba92762dce" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="fe5b2c8b-6f3c-4544-99d9-a075bc2616e2" xml:space="preserve">
          <source><bpt id="684da05c-6fb7-4f8e-8ed1-b9be88d1d60b">&lt;strong&gt;</bpt>Requirements<ept id="684da05c-6fb7-4f8e-8ed1-b9be88d1d60b">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="684da05c-6fb7-4f8e-8ed1-b9be88d1d60b">&lt;strong&gt;</bpt>Requirements<ept id="684da05c-6fb7-4f8e-8ed1-b9be88d1d60b">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="5733a844-9e04-4f63-8a89-94c5a52124e0" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="4b5d791f-f9fe-4b4d-b90d-a0740207f26c" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="13f75223-1f26-4a42-bc57-ebd52396c3c6" xml:space="preserve">
          <source><bpt id="6147c32c-d027-4efb-9d21-ba4de3c3d698">&lt;strong&gt;</bpt>Common Variables<ept id="6147c32c-d027-4efb-9d21-ba4de3c3d698">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="6147c32c-d027-4efb-9d21-ba4de3c3d698">&lt;strong&gt;</bpt>Common Variables<ept id="6147c32c-d027-4efb-9d21-ba4de3c3d698">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="11c83736-5727-4657-a34f-2780e74e7055" xml:space="preserve">
          <source><bpt id="550ada00-ad25-475f-817f-45907d1b4060">&lt;code&gt;</bpt>$VMName<ept id="550ada00-ad25-475f-817f-45907d1b4060">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="550ada00-ad25-475f-817f-45907d1b4060">&lt;code&gt;</bpt>$VMName<ept id="550ada00-ad25-475f-817f-45907d1b4060">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="1ef62f7e-ff28-41f9-ac63-027765747b96" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="f6188156-41dc-484b-91e9-084be831280d">&lt;code&gt;</bpt>Get-VM<ept id="f6188156-41dc-484b-91e9-084be831280d">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="f6188156-41dc-484b-91e9-084be831280d">&lt;code&gt;</bpt>Get-VM<ept id="f6188156-41dc-484b-91e9-084be831280d">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4392685b-ac15-4767-93e8-99279cf1c1db" xml:space="preserve">
          <source><bpt id="de72ab9f-a9d2-46bc-b702-994752da4b38">&lt;code&gt;</bpt>$cred<ept id="de72ab9f-a9d2-46bc-b702-994752da4b38">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="de72ab9f-a9d2-46bc-b702-994752da4b38">&lt;code&gt;</bpt>$cred<ept id="de72ab9f-a9d2-46bc-b702-994752da4b38">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="96924567-60ec-489e-aace-9f7eec856daf" xml:space="preserve">
          <source>Can be populated using <bpt id="7c3df6d1-c276-48a4-8345-5021e89b37e9">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="7c3df6d1-c276-48a4-8345-5021e89b37e9">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="7c3df6d1-c276-48a4-8345-5021e89b37e9">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="7c3df6d1-c276-48a4-8345-5021e89b37e9">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="fa475678-488c-4314-81aa-ad42f84396c5" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="c270be4c-e082-4aa4-b9b7-8ab21954ec96" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="25f35033-89b0-41f6-a20b-b50de24b00fe" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="ae2baa82-b769-4f5a-b300-811fc28b29c7" xml:space="preserve">
          <source><bpt id="a79a54d5-313a-4959-9cf1-497822471436">&lt;strong&gt;</bpt>Outcome<ept id="a79a54d5-313a-4959-9cf1-497822471436">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="a79a54d5-313a-4959-9cf1-497822471436">&lt;strong&gt;</bpt>Outcome<ept id="a79a54d5-313a-4959-9cf1-497822471436">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6c8f2cdd-60e0-4daa-b515-1f808cff8111" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="8eea7cda-7bdd-4932-9998-918698e2ffc4" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="b302064f-82a2-4b24-b4b6-157ba0c93ad2" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="42d4d130-7643-4bbf-9b57-ae1dda70a753" xml:space="preserve">
          <source><bpt id="67d2fb97-f043-4312-a3cb-fc6c6573017b">&lt;strong&gt;</bpt>Outcome<ept id="67d2fb97-f043-4312-a3cb-fc6c6573017b">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="67d2fb97-f043-4312-a3cb-fc6c6573017b">&lt;strong&gt;</bpt>Outcome<ept id="67d2fb97-f043-4312-a3cb-fc6c6573017b">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="573651cb-0c75-4d83-8797-c160d80dc356" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="991f7f5d-c7b8-4bd9-9786-7364068f5392" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="125006d9-6726-4cd8-a8a4-61ed54e587ff" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="70aab721-3bd8-486c-91c0-b730b2cd2a17" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="f8213bdf-dc82-45f2-af2e-36cec3f5cf48" xml:space="preserve">
          <source><bpt id="c6267992-8e2b-4d88-b35a-caf44c2b3141">&lt;em&gt;</bpt>* Outcome *<ept id="c6267992-8e2b-4d88-b35a-caf44c2b3141">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="c6267992-8e2b-4d88-b35a-caf44c2b3141">&lt;em&gt;</bpt>* Outcome *<ept id="c6267992-8e2b-4d88-b35a-caf44c2b3141">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="a1b4bb39-7d9f-4010-bd7a-ef0c3c99cf9e" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="fe08aa20-2d6c-4230-8b5f-bbf7b3e729c2" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="5c47f8d6-9f9b-4cb0-a00c-1c7bd360d23f" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="2e39ed57-7f6f-4041-b80e-10dcb749bf3e" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="c6fa27f1-1639-498b-9c82-08941b0f6b72" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="895badc2-2238-4bf1-864c-39e256d0a6d6" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="80c8c9fd-7b0b-4686-a1a0-2856cc746597" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="fdd2afcd-3e4a-4ba8-8640-3c9748a6776d" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="e4f0fe17-9a94-4e43-b370-2a9b73f619c8" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="1e732a94-8337-4ad8-8ae1-444b3b59d18e">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="1e732a94-8337-4ad8-8ae1-444b3b59d18e">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="1e732a94-8337-4ad8-8ae1-444b3b59d18e">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="1e732a94-8337-4ad8-8ae1-444b3b59d18e">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="d2dc0a4d-4f30-428e-b3a8-972a563cb88b" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="12670835-b455-4441-8c0a-6d35d9ce3aa3" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="0f6dede6-821e-45c5-9611-7e9b37e1c199" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="b12fcd86-a3a7-4a65-9063-b283a5630a17" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="ba1120c6-06f6-491c-8a13-79c8c0b597cb" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="f77da1ba-9533-4102-a401-127428286cb1" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="849bb173-3a53-4e41-b981-8134c0a0cb61" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="f5007738-a0ad-45ae-b424-8b4a4aea4f00" xml:space="preserve">
          <source><bpt id="170ee220-d441-471b-97f7-f7fe713f0e94">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="170ee220-d441-471b-97f7-f7fe713f0e94">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="170ee220-d441-471b-97f7-f7fe713f0e94">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="170ee220-d441-471b-97f7-f7fe713f0e94">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="97b499d4-2368-4556-bb1c-72a24a1f7464" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="d675223b-49d5-4bfa-8073-2e4cd199d57e" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="fc829692-13ac-4e3a-9660-b1b743eb935a" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="7c9e3d2b-1cd1-43d0-bf7a-109590235fd8" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="659af80c-ebed-4d69-9500-474bdd6ba7d1" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>