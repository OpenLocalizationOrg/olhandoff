<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="ja-jp" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">c90ab2e265a02e42262c86460aa75b087c2f1cfe</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Message Compiler Properties for Driver Projects</source>
            <target xml:space="preserve">Message Compiler Properties for Driver Projects</target>
          </segment>
        </unit>
        <unit id="102">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="102">
            <source xml:space="preserve">Sets the properties for the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Message Compiler (MC.exe)**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> tool.</source>
            <target xml:space="preserve">Sets the properties for the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Message Compiler (MC.exe)**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> tool.</target>
          </segment>
        </unit>
        <unit id="103">
          <segment state="initial" id="103">
            <source xml:space="preserve">The compiler generates the message resource files that you can add to your project.</source>
            <target xml:space="preserve">The compiler generates the message resource files that you can add to your project.</target>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source xml:space="preserve">For example, if you are using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Event Tracing for Windows (ETW)</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> kernel-mode API to add event tracing to a kernel-mode driver, you could use the message compiler to create a header file that contains definitions for the event provider, event attributes, channels, and events.</source>
            <target xml:space="preserve">For example, if you are using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Event Tracing for Windows (ETW)</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> kernel-mode API to add event tracing to a kernel-mode driver, you could use the message compiler to create a header file that contains definitions for the event provider, event attributes, channels, and events.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">You must include this header file in your source code.</source>
            <target xml:space="preserve">You must include this header file in your source code.</target>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source xml:space="preserve">The message compiler creates a resource compiler script (\*.rc) that you add to your project file.</source>
            <target xml:space="preserve">The message compiler creates a resource compiler script (\*.rc) that you add to your project file.</target>
          </segment>
        </unit>
        <unit id="107">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;html&gt;</data>
            <data id="id12">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="107">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2"></pc>
							<pc dataRefEnd="id6" dataRefStart="id5" id="3"></pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="4"></pc>
							<pc dataRefEnd="id10" dataRefStart="id9" id="5"></pc>
							<pc dataRefEnd="id12" dataRefStart="id11" id="6"></pc>Setting Message Compiler properties for driver projects</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2"></pc>
							<pc dataRefEnd="id6" dataRefStart="id5" id="3"></pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="4"></pc>
							<pc dataRefEnd="id10" dataRefStart="id9" id="5"></pc>
							<pc dataRefEnd="id12" dataRefStart="id11" id="6"></pc>Setting Message Compiler properties for driver projects</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">Open the property pages for your driver project.</source>
            <target xml:space="preserve">Open the property pages for your driver project.</target>
          </segment>
        </unit>
        <unit id="109">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="109">
            <source xml:space="preserve">Right-click the driver project in <pc dataRefEnd="id2" dataRefStart="id1" id="2">Solution Explorer</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="4">Properties</pc>.</source>
            <target xml:space="preserve">Right-click the driver project in <pc dataRefEnd="id2" dataRefStart="id1" id="2">Solution Explorer</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="4">Properties</pc>.</target>
          </segment>
        </unit>
        <unit id="110">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="110">
            <source xml:space="preserve">In the property pages for the driver project, click <pc dataRefEnd="id2" dataRefStart="id1" id="2">Configuration Properties</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="4">Message Compiler</pc>.</source>
            <target xml:space="preserve">In the property pages for the driver project, click <pc dataRefEnd="id2" dataRefStart="id1" id="2">Configuration Properties</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="4">Message Compiler</pc>.</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">Set the properties for the project.</source>
            <target xml:space="preserve">Set the properties for the project.</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">This property page is available if you add a message text file (.mc) or a manifest (.man) to your solution.</source>
            <target xml:space="preserve">This property page is available if you add a message text file (.mc) or a manifest (.man) to your solution.</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">Option</source>
            <target xml:space="preserve">Option</target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source xml:space="preserve">Additional Options</source>
            <target xml:space="preserve">Additional Options</target>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source xml:space="preserve">Specifies additional options to pass to the </source>
            <target xml:space="preserve">Specifies additional options to pass to the </target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve">Message Compiler (MC.exe)</source>
            <target xml:space="preserve">Message Compiler (MC.exe)</target>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source xml:space="preserve"> tool.</source>
            <target xml:space="preserve"> tool.</target>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source xml:space="preserve">Ansi Input File</source>
            <target xml:space="preserve">Ansi Input File</target>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source xml:space="preserve">Specifies that the input file contains ANSI content (this is the default). (</source>
            <target xml:space="preserve">Specifies that the input file contains ANSI content (this is the default). (</target>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source xml:space="preserve">-a</source>
            <target xml:space="preserve">-a</target>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">Ansi Message In Bin File</source>
            <target xml:space="preserve">Ansi Message In Bin File</target>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source xml:space="preserve">Specifies that the messages in the output .bin file should be ANSI. (</source>
            <target xml:space="preserve">Specifies that the messages in the output .bin file should be ANSI. (</target>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source xml:space="preserve">-A</source>
            <target xml:space="preserve">-A</target>
          </segment>
        </unit>
        <unit id="126">
          <segment state="initial" id="126">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">Baseline Path</source>
            <target xml:space="preserve">Baseline Path</target>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source xml:space="preserve">The path must point to the folder that contains the .BIN files that the baseline operation created. (</source>
            <target xml:space="preserve">The path must point to the folder that contains the .BIN files that the baseline operation created. (</target>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source xml:space="preserve">-t</source>
            <target xml:space="preserve">-t</target>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source xml:space="preserve">directory</source>
            <target xml:space="preserve">directory</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">Baseline Resource Path</source>
            <target xml:space="preserve">Baseline Resource Path</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve">The folder which contains the baseline manifest files. (</source>
            <target xml:space="preserve">The folder which contains the baseline manifest files. (</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">-s</source>
            <target xml:space="preserve">-s</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve">directory</source>
            <target xml:space="preserve">directory</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="137">
          <segment state="initial" id="137">
            <source xml:space="preserve">Debug Output Path</source>
            <target xml:space="preserve">Debug Output Path</target>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source xml:space="preserve">The path in which to place the .dbg C include file. (</source>
            <target xml:space="preserve">The path in which to place the .dbg C include file. (</target>
          </segment>
        </unit>
        <unit id="139">
          <segment state="initial" id="139">
            <source xml:space="preserve">-x</source>
            <target xml:space="preserve">-x</target>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source xml:space="preserve">path</source>
            <target xml:space="preserve">path</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="142">
          <segment state="initial" id="142">
            <source xml:space="preserve">Enable Callout Macro</source>
            <target xml:space="preserve">Enable Callout Macro</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">Adds a callout macro to invoke user code at logging. Not available for C#, and ignored. (</source>
            <target xml:space="preserve">Adds a callout macro to invoke user code at logging. Not available for C#, and ignored. (</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">-co</source>
            <target xml:space="preserve">-co</target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source xml:space="preserve">Enable Debug Output Path</source>
            <target xml:space="preserve">Enable Debug Output Path</target>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source xml:space="preserve">Enables the compiler to place the .dbg C include file specified by the </source>
            <target xml:space="preserve">Enables the compiler to place the .dbg C include file specified by the </target>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source xml:space="preserve">Debug Output Path</source>
            <target xml:space="preserve">Debug Output Path</target>
          </segment>
        </unit>
        <unit id="149">
          <segment state="initial" id="149">
            <source xml:space="preserve"> property.</source>
            <target xml:space="preserve"> property.</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">File extension for the generated header</source>
            <target xml:space="preserve">File extension for the generated header</target>
          </segment>
        </unit>
        <unit id="151">
          <segment state="initial" id="151">
            <source xml:space="preserve">Specifies the extension of the generated header file. (</source>
            <target xml:space="preserve">Specifies the extension of the generated header file. (</target>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source xml:space="preserve">-e</source>
            <target xml:space="preserve">-e</target>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source xml:space="preserve">extension</source>
            <target xml:space="preserve">extension</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source xml:space="preserve">Generate Baseline Resource</source>
            <target xml:space="preserve">Generate Baseline Resource</target>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source xml:space="preserve">Creates a baseline of your instrumentation.</source>
            <target xml:space="preserve">Creates a baseline of your instrumentation.</target>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source xml:space="preserve">Generate C# (managed) logging class</source>
            <target xml:space="preserve">Generate C# (managed) logging class</target>
          </segment>
        </unit>
        <unit id="158">
          <segment state="initial" id="158">
            <source xml:space="preserve">Generates a C# (managed) logging class that includes methods that you would call to log events in your manifest. (</source>
            <target xml:space="preserve">Generates a C# (managed) logging class that includes methods that you would call to log events in your manifest. (</target>
          </segment>
        </unit>
        <unit id="159">
          <segment state="initial" id="159">
            <source xml:space="preserve">-cs</source>
            <target xml:space="preserve">-cs</target>
          </segment>
        </unit>
        <unit id="160">
          <segment state="initial" id="160">
            <source xml:space="preserve">namespace</source>
            <target xml:space="preserve">namespace</target>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source xml:space="preserve">Generate header file for containing counter names and GUIDs</source>
            <target xml:space="preserve">Generate header file for containing counter names and GUIDs</target>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source xml:space="preserve">Use this option to specify the folder into which you want the compiler to place the generated header file.</source>
            <target xml:space="preserve">Use this option to specify the folder into which you want the compiler to place the generated header file.</target>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source xml:space="preserve">Generate Kernel Mode Logging Macros</source>
            <target xml:space="preserve">Generate Kernel Mode Logging Macros</target>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source xml:space="preserve">Generates kernel-mode logging macros. (</source>
            <target xml:space="preserve">Generates kernel-mode logging macros. (</target>
          </segment>
        </unit>
        <unit id="166">
          <segment state="initial" id="166">
            <source xml:space="preserve">-km</source>
            <target xml:space="preserve">-km</target>
          </segment>
        </unit>
        <unit id="167">
          <segment state="initial" id="167">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">Generate MOF File</source>
            <target xml:space="preserve">Generate MOF File</target>
          </segment>
        </unit>
        <unit id="169">
          <segment state="initial" id="169">
            <source xml:space="preserve">Generate down-level support for all functions and macros generated. MOF file will be generated from the manifest. MOF file will be placed in the location specified by the </source>
            <target xml:space="preserve">Generate down-level support for all functions and macros generated. MOF file will be generated from the manifest. MOF file will be placed in the location specified by the </target>
          </segment>
        </unit>
        <unit id="170">
          <segment state="initial" id="170">
            <source xml:space="preserve">-h</source>
            <target xml:space="preserve">-h</target>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source xml:space="preserve"> option (</source>
            <target xml:space="preserve"> option (</target>
          </segment>
        </unit>
        <unit id="172">
          <segment state="initial" id="172">
            <source xml:space="preserve">-mof</source>
            <target xml:space="preserve">-mof</target>
          </segment>
        </unit>
        <unit id="173">
          <segment state="initial" id="173">
            <source xml:space="preserve">).</source>
            <target xml:space="preserve">).</target>
          </segment>
        </unit>
        <unit id="174">
          <segment state="initial" id="174">
            <source xml:space="preserve">Generate OLE2 Header</source>
            <target xml:space="preserve">Generate OLE2 Header</target>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source xml:space="preserve">Generates an OLE2 header file. (</source>
            <target xml:space="preserve">Generates an OLE2 header file. (</target>
          </segment>
        </unit>
        <unit id="176">
          <segment state="initial" id="176">
            <source xml:space="preserve">-o</source>
            <target xml:space="preserve">-o</target>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="178">
          <segment state="initial" id="178">
            <source xml:space="preserve">Generate static C# (managed) logging class</source>
            <target xml:space="preserve">Generate static C# (managed) logging class</target>
          </segment>
        </unit>
        <unit id="179">
          <segment state="initial" id="179">
            <source xml:space="preserve">Generates a static C# (managed) logging class that includes methods that you would call to log events in your manifest. (</source>
            <target xml:space="preserve">Generates a static C# (managed) logging class that includes methods that you would call to log events in your manifest. (</target>
          </segment>
        </unit>
        <unit id="180">
          <segment state="initial" id="180">
            <source xml:space="preserve">-css</source>
            <target xml:space="preserve">-css</target>
          </segment>
        </unit>
        <unit id="181">
          <segment state="initial" id="181">
            <source xml:space="preserve">namespace</source>
            <target xml:space="preserve">namespace</target>
          </segment>
        </unit>
        <unit id="182">
          <segment state="initial" id="182">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="183">
          <segment state="initial" id="183">
            <source xml:space="preserve">Generate User Mode Logging Macros</source>
            <target xml:space="preserve">Generate User Mode Logging Macros</target>
          </segment>
        </unit>
        <unit id="184">
          <segment state="initial" id="184">
            <source xml:space="preserve">Generate user-mode logging macros. (</source>
            <target xml:space="preserve">Generate user-mode logging macros. (</target>
          </segment>
        </unit>
        <unit id="185">
          <segment state="initial" id="185">
            <source xml:space="preserve">-um</source>
            <target xml:space="preserve">-um</target>
          </segment>
        </unit>
        <unit id="186">
          <segment state="initial" id="186">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="187">
          <segment state="initial" id="187">
            <source xml:space="preserve">Generated Files Base Name</source>
            <target xml:space="preserve">Generated Files Base Name</target>
          </segment>
        </unit>
        <unit id="188">
          <segment state="initial" id="188">
            <source xml:space="preserve">Specifies the base name of all generated files. (</source>
            <target xml:space="preserve">Specifies the base name of all generated files. (</target>
          </segment>
        </unit>
        <unit id="189">
          <segment state="initial" id="189">
            <source xml:space="preserve">-z</source>
            <target xml:space="preserve">-z</target>
          </segment>
        </unit>
        <unit id="190">
          <segment state="initial" id="190">
            <source xml:space="preserve">basename</source>
            <target xml:space="preserve">basename</target>
          </segment>
        </unit>
        <unit id="191">
          <segment state="initial" id="191">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="192">
          <segment state="initial" id="192">
            <source xml:space="preserve">Generated RC and Binary Message Files Path</source>
            <target xml:space="preserve">Generated RC and Binary Message Files Path</target>
          </segment>
        </unit>
        <unit id="193">
          <segment state="initial" id="193">
            <source xml:space="preserve">Specifies the path to the generated the RC and binary message files.</source>
            <target xml:space="preserve">Specifies the path to the generated the RC and binary message files.</target>
          </segment>
        </unit>
        <unit id="194">
          <segment state="initial" id="194">
            <source xml:space="preserve">Header File Path</source>
            <target xml:space="preserve">Header File Path</target>
          </segment>
        </unit>
        <unit id="195">
          <segment state="initial" id="195">
            <source xml:space="preserve">Specifies the path the generated header file. (</source>
            <target xml:space="preserve">Specifies the path the generated header file. (</target>
          </segment>
        </unit>
        <unit id="196">
          <segment state="initial" id="196">
            <source xml:space="preserve">-h</source>
            <target xml:space="preserve">-h</target>
          </segment>
        </unit>
        <unit id="197">
          <segment state="initial" id="197">
            <source xml:space="preserve">path</source>
            <target xml:space="preserve">path</target>
          </segment>
        </unit>
        <unit id="198">
          <segment state="initial" id="198">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="199">
          <segment state="initial" id="199">
            <source xml:space="preserve">Maximum Message Length</source>
            <target xml:space="preserve">Maximum Message Length</target>
          </segment>
        </unit>
        <unit id="200">
          <segment state="initial" id="200">
            <source xml:space="preserve">Use this argument to have the compiler generate a warning if any message exceeds length characters. (</source>
            <target xml:space="preserve">Use this argument to have the compiler generate a warning if any message exceeds length characters. (</target>
          </segment>
        </unit>
        <unit id="201">
          <segment state="initial" id="201">
            <source xml:space="preserve">-m</source>
            <target xml:space="preserve">-m</target>
          </segment>
        </unit>
        <unit id="202">
          <segment state="initial" id="202">
            <source xml:space="preserve">length</source>
            <target xml:space="preserve">length</target>
          </segment>
        </unit>
        <unit id="203">
          <segment state="initial" id="203">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="204">
          <segment state="initial" id="204">
            <source xml:space="preserve">Prefix Macro Name</source>
            <target xml:space="preserve">Prefix Macro Name</target>
          </segment>
        </unit>
        <unit id="205">
          <segment state="initial" id="205">
            <source xml:space="preserve">Use this argument to override the default prefix that the compiler uses for the logging macro names and method names. (</source>
            <target xml:space="preserve">Use this argument to override the default prefix that the compiler uses for the logging macro names and method names. (</target>
          </segment>
        </unit>
        <unit id="206">
          <segment state="initial" id="206">
            <source xml:space="preserve">-p</source>
            <target xml:space="preserve">-p</target>
          </segment>
        </unit>
        <unit id="207">
          <segment state="initial" id="207">
            <source xml:space="preserve">prefix</source>
            <target xml:space="preserve">prefix</target>
          </segment>
        </unit>
        <unit id="208">
          <segment state="initial" id="208">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="209">
          <segment state="initial" id="209">
            <source xml:space="preserve">RC File Path</source>
            <target xml:space="preserve">RC File Path</target>
          </segment>
        </unit>
        <unit id="210">
          <segment state="initial" id="210">
            <source xml:space="preserve">The folder into which you want the compiler to place the generated resource compiler script (.rc file) and the generated .bin files. (</source>
            <target xml:space="preserve">The folder into which you want the compiler to place the generated resource compiler script (.rc file) and the generated .bin files. (</target>
          </segment>
        </unit>
        <unit id="211">
          <segment state="initial" id="211">
            <source xml:space="preserve">-r</source>
            <target xml:space="preserve">-r</target>
          </segment>
        </unit>
        <unit id="212">
          <segment state="initial" id="212">
            <source xml:space="preserve">path</source>
            <target xml:space="preserve">path</target>
          </segment>
        </unit>
        <unit id="213">
          <segment state="initial" id="213">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="214">
          <segment state="initial" id="214">
            <source xml:space="preserve">Remove Characters From Symbolic Name</source>
            <target xml:space="preserve">Remove Characters From Symbolic Name</target>
          </segment>
        </unit>
        <unit id="215">
          <segment state="initial" id="215">
            <source xml:space="preserve">Use this argument to remove characters from the beginning of the symbolic name that you specified for the event. (</source>
            <target xml:space="preserve">Use this argument to remove characters from the beginning of the symbolic name that you specified for the event. (</target>
          </segment>
        </unit>
        <unit id="216">
          <segment state="initial" id="216">
            <source xml:space="preserve">-P</source>
            <target xml:space="preserve">-P</target>
          </segment>
        </unit>
        <unit id="217">
          <segment state="initial" id="217">
            <source xml:space="preserve">prefix</source>
            <target xml:space="preserve">prefix</target>
          </segment>
        </unit>
        <unit id="218">
          <segment state="initial" id="218">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="219">
          <segment state="initial" id="219">
            <source xml:space="preserve">Set Customer Bit</source>
            <target xml:space="preserve">Set Customer Bit</target>
          </segment>
        </unit>
        <unit id="220">
          <segment state="initial" id="220">
            <source xml:space="preserve">Sets the Customer bit in the entire message Ids. (</source>
            <target xml:space="preserve">Sets the Customer bit in the entire message Ids. (</target>
          </segment>
        </unit>
        <unit id="221">
          <segment state="initial" id="221">
            <source xml:space="preserve">-c</source>
            <target xml:space="preserve">-c</target>
          </segment>
        </unit>
        <unit id="222">
          <segment state="initial" id="222">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="223">
          <segment state="initial" id="223">
            <source xml:space="preserve">Terminate Message With Null</source>
            <target xml:space="preserve">Terminate Message With Null</target>
          </segment>
        </unit>
        <unit id="224">
          <segment state="initial" id="224">
            <source xml:space="preserve">Terminates all strings with nulls in the message tables. (</source>
            <target xml:space="preserve">Terminates all strings with nulls in the message tables. (</target>
          </segment>
        </unit>
        <unit id="225">
          <segment state="initial" id="225">
            <source xml:space="preserve">-n</source>
            <target xml:space="preserve">-n</target>
          </segment>
        </unit>
        <unit id="226">
          <segment state="initial" id="226">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="227">
          <segment state="initial" id="227">
            <source xml:space="preserve">Unicode Input File</source>
            <target xml:space="preserve">Unicode Input File</target>
          </segment>
        </unit>
        <unit id="228">
          <segment state="initial" id="228">
            <source xml:space="preserve">Specifies that the input file contains Unicode content. (</source>
            <target xml:space="preserve">Specifies that the input file contains Unicode content. (</target>
          </segment>
        </unit>
        <unit id="229">
          <segment state="initial" id="229">
            <source xml:space="preserve">-u</source>
            <target xml:space="preserve">-u</target>
          </segment>
        </unit>
        <unit id="230">
          <segment state="initial" id="230">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="231">
          <segment state="initial" id="231">
            <source xml:space="preserve">The default is ANSI.</source>
            <target xml:space="preserve">The default is ANSI.</target>
          </segment>
        </unit>
        <unit id="232">
          <segment state="initial" id="232">
            <source xml:space="preserve">Unicode Message In Bin File</source>
            <target xml:space="preserve">Unicode Message In Bin File</target>
          </segment>
        </unit>
        <unit id="233">
          <segment state="initial" id="233">
            <source xml:space="preserve">Specifies that the messages in the output .bin file are Unicode. (</source>
            <target xml:space="preserve">Specifies that the messages in the output .bin file are Unicode. (</target>
          </segment>
        </unit>
        <unit id="234">
          <segment state="initial" id="234">
            <source xml:space="preserve">-U</source>
            <target xml:space="preserve">-U</target>
          </segment>
        </unit>
        <unit id="235">
          <segment state="initial" id="235">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="236">
          <segment state="initial" id="236">
            <source xml:space="preserve">This is the default.</source>
            <target xml:space="preserve">This is the default.</target>
          </segment>
        </unit>
        <unit id="237">
          <segment state="initial" id="237">
            <source xml:space="preserve">Use Base Name Of Input</source>
            <target xml:space="preserve">Use Base Name Of Input</target>
          </segment>
        </unit>
        <unit id="238">
          <segment state="initial" id="238">
            <source xml:space="preserve">Use this argument to have the compiler use the base name of the input file for the name of the output .bin files. (</source>
            <target xml:space="preserve">Use this argument to have the compiler use the base name of the input file for the name of the output .bin files. (</target>
          </segment>
        </unit>
        <unit id="239">
          <segment state="initial" id="239">
            <source xml:space="preserve">-b</source>
            <target xml:space="preserve">-b</target>
          </segment>
        </unit>
        <unit id="240">
          <segment state="initial" id="240">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="241">
          <segment state="initial" id="241">
            <source xml:space="preserve">Use Decimal Values</source>
            <target xml:space="preserve">Use Decimal Values</target>
          </segment>
        </unit>
        <unit id="242">
          <segment state="initial" id="242">
            <source xml:space="preserve">Use this argument to use decimal values for the Severity and Facility constants in the header file instead of hexadecimal values. (</source>
            <target xml:space="preserve">Use this argument to use decimal values for the Severity and Facility constants in the header file instead of hexadecimal values. (</target>
          </segment>
        </unit>
        <unit id="243">
          <segment state="initial" id="243">
            <source xml:space="preserve">-d</source>
            <target xml:space="preserve">-d</target>
          </segment>
        </unit>
        <unit id="244">
          <segment state="initial" id="244">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="245">
          <segment state="initial" id="245">
            <source xml:space="preserve">Validate Against Baseline Resource</source>
            <target xml:space="preserve">Validate Against Baseline Resource</target>
          </segment>
        </unit>
        <unit id="246">
          <segment state="initial" id="246">
            <source xml:space="preserve">Use this argument when you create a new version of your manifest and want to check it for application compatibility against the baseline that you created using the </source>
            <target xml:space="preserve">Use this argument when you create a new version of your manifest and want to check it for application compatibility against the baseline that you created using the </target>
          </segment>
        </unit>
        <unit id="247">
          <segment state="initial" id="247">
            <source xml:space="preserve">-s</source>
            <target xml:space="preserve">-s</target>
          </segment>
        </unit>
        <unit id="248">
          <segment state="initial" id="248">
            <source xml:space="preserve"> option.</source>
            <target xml:space="preserve"> option.</target>
          </segment>
        </unit>
        <unit id="249">
          <segment state="initial" id="249">
            <source xml:space="preserve">Verbose</source>
            <target xml:space="preserve">Verbose</target>
          </segment>
        </unit>
        <unit id="250">
          <segment state="initial" id="250">
            <source xml:space="preserve">Use this option to generate verbose output. (</source>
            <target xml:space="preserve">Use this option to generate verbose output. (</target>
          </segment>
        </unit>
        <unit id="251">
          <segment state="initial" id="251">
            <source xml:space="preserve">-v</source>
            <target xml:space="preserve">-v</target>
          </segment>
        </unit>
        <unit id="252">
          <segment state="initial" id="252">
            <source xml:space="preserve">)</source>
            <target xml:space="preserve">)</target>
          </segment>
        </unit>
        <unit id="253">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="253">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2"></pc>Related topics</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2"></pc>Related topics</target>
          </segment>
        </unit>
        <unit id="254">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="254">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Message Compiler (MC.exe)</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Message Compiler (MC.exe)</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="255">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="255">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">WDK and Visual Studio build environment</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">WDK and Visual Studio build environment</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="256">
          <segment state="initial" id="256">
            <source xml:space="preserve">Message compiler task</source>
            <target xml:space="preserve">Message compiler task</target>
          </segment>
        </unit>
        <unit id="257">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="257">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Event Tracing for Windows (ETW)</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Event Tracing for Windows (ETW)</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="258">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="258">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Send comments about this topic to Microsoft</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3">Send comments about this topic to Microsoft</pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Send comments about this topic to Microsoft</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3">Send comments about this topic to Microsoft</pc>
							</pc>
						</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>