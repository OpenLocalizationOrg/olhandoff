<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="ja-jp" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">e0bfd69a30b06e7f02519cea359d2a0d8d70c47b</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">KMDF Verifier Properties for Driver Package Projects</source>
            <target xml:space="preserve">KMDF Verifier Properties for Driver Package Projects</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">Sets the properties for the KMDF Verifier (or framework verifier) on a remote computer.</source>
            <target xml:space="preserve">Sets the properties for the KMDF Verifier (or framework verifier) on a remote computer.</target>
          </segment>
        </unit>
        <unit id="103">
          <segment state="initial" id="103">
            <source xml:space="preserve">You can use these settings when you build and deploy a KMDF driver to a test computer.</source>
            <target xml:space="preserve">You can use these settings when you build and deploy a KMDF driver to a test computer.</target>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source xml:space="preserve">For information about KMDF drivers, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Kernel-Mode Driver Framework</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For information about KMDF drivers, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Kernel-Mode Driver Framework</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="105">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="105">
            <source xml:space="preserve">For more information about the framework verifier, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Using the Framework's Verifier</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">WDF Verifier Control Application</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For more information about the framework verifier, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Using the Framework's Verifier</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">WDF Verifier Control Application</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="106">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;html&gt;</data>
            <data id="id12">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="106">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2"></pc>
							<pc dataRefEnd="id6" dataRefStart="id5" id="3"></pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="4"></pc>
							<pc dataRefEnd="id10" dataRefStart="id9" id="5"></pc>
							<pc dataRefEnd="id12" dataRefStart="id11" id="6"></pc>Setting KMDF Verifier properties for driver package projects</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2"></pc>
							<pc dataRefEnd="id6" dataRefStart="id5" id="3"></pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="4"></pc>
							<pc dataRefEnd="id10" dataRefStart="id9" id="5"></pc>
							<pc dataRefEnd="id12" dataRefStart="id11" id="6"></pc>Setting KMDF Verifier properties for driver package projects</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">Open the property pages for your driver package.</source>
            <target xml:space="preserve">Open the property pages for your driver package.</target>
          </segment>
        </unit>
        <unit id="108">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="108">
            <source xml:space="preserve">Right-click the driver package project in Solution Explorer and select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Properties</pc>.</source>
            <target xml:space="preserve">Right-click the driver package project in Solution Explorer and select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Properties</pc>.</target>
          </segment>
        </unit>
        <unit id="109">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="109">
            <source xml:space="preserve">In the property pages for the driver package, click <pc dataRefEnd="id2" dataRefStart="id1" id="2">Configuration Properties</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="4">Driver Install</pc>, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="6">KMDF Verifier</pc>.</source>
            <target xml:space="preserve">In the property pages for the driver package, click <pc dataRefEnd="id2" dataRefStart="id1" id="2">Configuration Properties</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="4">Driver Install</pc>, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="6">KMDF Verifier</pc>.</target>
          </segment>
        </unit>
        <unit id="110">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="110">
            <source xml:space="preserve">Click the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Enable KMDF Verifier</pc> option and select <pc dataRefEnd="id4" dataRefStart="id3" id="4">KMDF verifier is always on</pc>.</source>
            <target xml:space="preserve">Click the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Enable KMDF Verifier</pc> option and select <pc dataRefEnd="id4" dataRefStart="id3" id="4">KMDF verifier is always on</pc>.</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">When this option is selected, you can configure the framework verification options for KMDF drivers.</source>
            <target xml:space="preserve">When this option is selected, you can configure the framework verification options for KMDF drivers.</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">Option</source>
            <target xml:space="preserve">Option</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">Enable KMDF Verifier</source>
            <target xml:space="preserve">Enable KMDF Verifier</target>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source xml:space="preserve">Enables the KMDF verifier on the test computer. The choices are </source>
            <target xml:space="preserve">Enables the KMDF verifier on the test computer. The choices are </target>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source xml:space="preserve">KMDF verifier is always on</source>
            <target xml:space="preserve">KMDF verifier is always on</target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve"> or </source>
            <target xml:space="preserve"> or </target>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source xml:space="preserve">KMDF verifer is off</source>
            <target xml:space="preserve">KMDF verifer is off</target>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source xml:space="preserve">. If the KMDF verifier is not enabled, basic framework verification is enabled as part of </source>
            <target xml:space="preserve">. If the KMDF verifier is not enabled, basic framework verification is enabled as part of </target>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source xml:space="preserve">Driver Verifier</source>
            <target xml:space="preserve">Driver Verifier</target>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source xml:space="preserve"> if KMDF version is 1.9 or higher.</source>
            <target xml:space="preserve"> if KMDF version is 1.9 or higher.</target>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source xml:space="preserve">KMDF Service Names</source>
            <target xml:space="preserve">KMDF Service Names</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">Specifies the service names of the KDMF drivers to monitor.</source>
            <target xml:space="preserve">Specifies the service names of the KDMF drivers to monitor.</target>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source xml:space="preserve">IRQL checks</source>
            <target xml:space="preserve">IRQL checks</target>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source xml:space="preserve">Enables IRQL checks and critical memory leak checks.</source>
            <target xml:space="preserve">Enables IRQL checks and critical memory leak checks.</target>
          </segment>
        </unit>
        <unit id="126">
          <segment state="initial" id="126">
            <source xml:space="preserve">Forward Compatible Checks</source>
            <target xml:space="preserve">Forward Compatible Checks</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">Enables checks created after the current driver version.</source>
            <target xml:space="preserve">Enables checks created after the current driver version.</target>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source xml:space="preserve">Forward Progress Handler Testing</source>
            <target xml:space="preserve">Forward Progress Handler Testing</target>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source xml:space="preserve">Specifies options for testing forward progress handling of your driver.</source>
            <target xml:space="preserve">Specifies options for testing forward progress handling of your driver.</target>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source xml:space="preserve">No Allocation Failures</source>
            <target xml:space="preserve">No Allocation Failures</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve"> No faults will be simulated to test the forward progress handling of your driver.</source>
            <target xml:space="preserve"> No faults will be simulated to test the forward progress handling of your driver.</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">Fail All Allocations</source>
            <target xml:space="preserve">Fail All Allocations</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve"> All I/O requests destined for a forward progress queue will appear to fail, relying on your driver's forward progress handling.</source>
            <target xml:space="preserve"> All I/O requests destined for a forward progress queue will appear to fail, relying on your driver's forward progress handling.</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">Randomly Fail Allocations</source>
            <target xml:space="preserve">Randomly Fail Allocations</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve"> Randomly fail I/O requests destined for a forward progress queue.</source>
            <target xml:space="preserve"> Randomly fail I/O requests destined for a forward progress queue.</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">Track KMDF Object Handles</source>
            <target xml:space="preserve">Track KMDF Object Handles</target>
          </segment>
        </unit>
        <unit id="137">
          <segment state="initial" id="137">
            <source xml:space="preserve">Specifies the list of object handle types to track.</source>
            <target xml:space="preserve">Specifies the list of object handle types to track.</target>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source xml:space="preserve">Enable KMDF Loader Messages</source>
            <target xml:space="preserve">Enable KMDF Loader Messages</target>
          </segment>
        </unit>
        <unit id="139">
          <segment state="initial" id="139">
            <source xml:space="preserve">Enables KMDF loader messages through the debugger. A reboot of the target computer is required to enable this.</source>
            <target xml:space="preserve">Enables KMDF loader messages through the debugger. A reboot of the target computer is required to enable this.</target>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source xml:space="preserve">Starting with Windows Vista, the operating system suppresses DbgPrint output by default, which makes the WDF Loader diagnostic messages unusable until the suppression is overridden. KDMF Verifier can manage this for you so that KMDF loader diagnostics are available in the kernel debugger for these systems.</source>
            <target xml:space="preserve">Starting with Windows Vista, the operating system suppresses DbgPrint output by default, which makes the WDF Loader diagnostic messages unusable until the suppression is overridden. KDMF Verifier can manage this for you so that KMDF loader diagnostics are available in the kernel debugger for these systems.</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">Verbose logging</source>
            <target xml:space="preserve">Verbose logging</target>
          </segment>
        </unit>
        <unit id="142">
          <segment state="initial" id="142">
            <source xml:space="preserve">Enables verbose logging.</source>
            <target xml:space="preserve">Enables verbose logging.</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">Memory Pages for Logs</source>
            <target xml:space="preserve">Memory Pages for Logs</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">Specifies the number of non-paged pool pages (1-10) to allocate for kernel event trace logs. The options are </source>
            <target xml:space="preserve">Specifies the number of non-paged pool pages (1-10) to allocate for kernel event trace logs. The options are </target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">Runtime Choice</source>
            <target xml:space="preserve">Runtime Choice</target>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source xml:space="preserve"> or [</source>
            <target xml:space="preserve"> or [</target>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source xml:space="preserve">1</source>
            <target xml:space="preserve">1</target>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source xml:space="preserve">-</source>
            <target xml:space="preserve">-</target>
          </segment>
        </unit>
        <unit id="149">
          <segment state="initial" id="149">
            <source xml:space="preserve">10</source>
            <target xml:space="preserve">10</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">]. If </source>
            <target xml:space="preserve">]. If </target>
          </segment>
        </unit>
        <unit id="151">
          <segment state="initial" id="151">
            <source xml:space="preserve">Runtime Choice</source>
            <target xml:space="preserve">Runtime Choice</target>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source xml:space="preserve">, the number of pages depends on the KMDF runtime. Starting with KMDF 1.9, the runtime uses more pages when verification is enabled with verbose logging.</source>
            <target xml:space="preserve">, the number of pages depends on the KMDF runtime. Starting with KMDF 1.9, the runtime uses more pages when verification is enabled with verbose logging.</target>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source xml:space="preserve">Fail Memory Allocations</source>
            <target xml:space="preserve">Fail Memory Allocations</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">Specifies the number of successful memory allocations allowed before the KMDF verifier starts to fail all memory allocations.</source>
            <target xml:space="preserve">Specifies the number of successful memory allocations allowed before the KMDF verifier starts to fail all memory allocations.</target>
          </segment>
        </unit>
        <unit id="155">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="155">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2"></pc>Related topics</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2"></pc>Related topics</target>
          </segment>
        </unit>
        <unit id="156">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="156">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Kernel-Mode Driver Framework</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Kernel-Mode Driver Framework</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="157">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="157">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Driver Verifier</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Driver Verifier</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="158">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="158">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Deploying a Driver to a Test Computer</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Deploying a Driver to a Test Computer</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="159">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="159">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Send comments about this topic to Microsoft</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3">Send comments about this topic to Microsoft</pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Send comments about this topic to Microsoft</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3">Send comments about this topic to Microsoft</pc>
							</pc>
						</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>