<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_hi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f1c9fd9ce857488c7f63ca93010a9dc79e89f64</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f8f5666" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Batch feature overview | Microsoft Azure</source>
          <target state="new">Azure Batch feature overview | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn the features of the Batch service and its APIs from a development standpoint.</source>
          <target state="new">Learn the features of the Batch service and its APIs from a development standpoint.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Overview of Azure Batch features</source>
          <target state="new">Overview of Azure Batch features</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article provides a basic overview of the core API features of the Azure Batch service.</source>
          <target state="new">This article provides a basic overview of the core API features of the Azure Batch service.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Whether developing a distributed computational solution using the <bpt id="p1">[</bpt>Batch REST<ph id="ph1">][</ph>batch_rest_api<ept id="p1">]</ept> or <bpt id="p2">[</bpt>Batch .NET<ph id="ph2">][</ph>batch_net_api<ept id="p2">]</ept> APIs, you will use many of the entities and features discussed below.</source>
          <target state="new">Whether developing a distributed computational solution using the <bpt id="p1">[</bpt>Batch REST<ph id="ph1">][</ph>batch_rest_api<ept id="p1">]</ept> or <bpt id="p2">[</bpt>Batch .NET<ph id="ph2">][</ph>batch_net_api<ept id="p2">]</ept> APIs, you will use many of the entities and features discussed below.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For a higher level technical overview of Batch, please see <bpt id="p1">[</bpt>Azure Batch basics<ept id="p1">](batch-technical-overview.md)</ept></source>
          <target state="new">For a higher level technical overview of Batch, please see <bpt id="p1">[</bpt>Azure Batch basics<ept id="p1">](batch-technical-overview.md)</ept></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Workflow of the Batch service</source>
          <target state="new">Workflow of the Batch service</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following high-level workflow is typical of that used by nearly all distributed computational scenarios developed within the Batch service:</source>
          <target state="new">The following high-level workflow is typical of that used by nearly all distributed computational scenarios developed within the Batch service:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Upload the <bpt id="p1">*</bpt>data files<ept id="p1">*</ept> that you want to use in your distributed computational scenario to an <bpt id="p2">[</bpt>Azure Storage<ph id="ph1">][</ph>azure_storage<ept id="p2">]</ept> account.</source>
          <target state="new">Upload the <bpt id="p1">*</bpt>data files<ept id="p1">*</ept> that you want to use in your distributed computational scenario to an <bpt id="p2">[</bpt>Azure Storage<ph id="ph1">][</ph>azure_storage<ept id="p2">]</ept> account.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>These files must be in the Storage account so that the Batch service can access them.</source>
          <target state="new">These files must be in the Storage account so that the Batch service can access them.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Tasks will download these files to <bpt id="p1">[</bpt>compute nodes<ept id="p1">](#computenode)</ept> when they are run.</source>
          <target state="new">Tasks will download these files to <bpt id="p1">[</bpt>compute nodes<ept id="p1">](#computenode)</ept> when they are run.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Upload the dependent <bpt id="p1">*</bpt>binary files<ept id="p1">*</ept> to your Storage account.</source>
          <target state="new">Upload the dependent <bpt id="p1">*</bpt>binary files<ept id="p1">*</ept> to your Storage account.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These binary files include the program to be run by the tasks, and any of its dependent assemblies.</source>
          <target state="new">These binary files include the program to be run by the tasks, and any of its dependent assemblies.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These files must also be accessed from your Storage account so they can be downloaded to the compute nodes by the tasks.</source>
          <target state="new">These files must also be accessed from your Storage account so they can be downloaded to the compute nodes by the tasks.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt>Pool<ept id="p1">](#pool)</ept> of compute nodes.</source>
          <target state="new">Create a <bpt id="p1">[</bpt>Pool<ept id="p1">](#pool)</ept> of compute nodes.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You specify the <bpt id="p1">[</bpt>size of the compute nodes<ph id="ph1">][</ph>cloud_service_sizes<ept id="p1">]</ept> to use when the pool is created, and when a task runs, it is assigned a node in this pool.</source>
          <target state="new">You specify the <bpt id="p1">[</bpt>size of the compute nodes<ph id="ph1">][</ph>cloud_service_sizes<ept id="p1">]</ept> to use when the pool is created, and when a task runs, it is assigned a node in this pool.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt>Job<ept id="p1">](#job)</ept>.</source>
          <target state="new">Create a <bpt id="p1">[</bpt>Job<ept id="p1">](#job)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A job enables you to manage a collection tasks.</source>
          <target state="new">A job enables you to manage a collection tasks.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add <bpt id="p1">[</bpt>Tasks<ept id="p1">](#task)</ept> to the job.</source>
          <target state="new">Add <bpt id="p1">[</bpt>Tasks<ept id="p1">](#task)</ept> to the job.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each task uses the program that you uploaded to process information in the data file(s) that you uploaded to your Storage account.</source>
          <target state="new">Each task uses the program that you uploaded to process information in the data file(s) that you uploaded to your Storage account.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Monitor job progress and retrieve the results.</source>
          <target state="new">Monitor job progress and retrieve the results.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You will need a <bpt id="p1">[</bpt>Batch account<ept id="p1">](batch-account-create-portal.md)</ept> to use the Batch service, and nearly all solutions will use an <bpt id="p2">[</bpt>Azure Storage<ph id="ph1">][</ph>azure_storage<ept id="p2">]</ept> account for file storage and retrieval.</source>
          <target state="new">You will need a <bpt id="p1">[</bpt>Batch account<ept id="p1">](batch-account-create-portal.md)</ept> to use the Batch service, and nearly all solutions will use an <bpt id="p2">[</bpt>Azure Storage<ph id="ph1">][</ph>azure_storage<ept id="p2">]</ept> account for file storage and retrieval.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the sections below, you'll learn about each of the resources mentioned in the above workflow, as well as many other features of Batch that will enable your distributed computational scenario.</source>
          <target state="new">In the sections below, you'll learn about each of the resources mentioned in the above workflow, as well as many other features of Batch that will enable your distributed computational scenario.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Resources of the Batch service</source>
          <target state="new">Resources of the Batch service</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When you use Batch, you will use many of the following resources.</source>
          <target state="new">When you use Batch, you will use many of the following resources.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Some of these resources, such as accounts, compute nodes, pools, jobs, and tasks, are used in all Batch solutions.</source>
          <target state="new">Some of these resources, such as accounts, compute nodes, pools, jobs, and tasks, are used in all Batch solutions.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Others, such as job schedules and application packages, are helpful but optional features.</source>
          <target state="new">Others, such as job schedules and application packages, are helpful but optional features.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Account</source>
          <target state="new">Account</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Compute node</source>
          <target state="new">Compute node</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Pool</source>
          <target state="new">Pool</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Job</source>
          <target state="new">Job</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="new">Task</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Start task</source>
          <target state="new">Start task</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Job manager task</source>
          <target state="new">Job manager task</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Job preparation and release tasks</source>
          <target state="new">Job preparation and release tasks</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Multi-instance tasks</source>
          <target state="new">Multi-instance tasks</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Task dependencies</source>
          <target state="new">Task dependencies</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Job schedules</source>
          <target state="new">Job schedules</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Application packages</source>
          <target state="new">Application packages</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Account</source>
          <target state="new">Account</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A Batch account is a uniquely identified entity within the Batch service.</source>
          <target state="new">A Batch account is a uniquely identified entity within the Batch service.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>All processing is associated with a Batch account.</source>
          <target state="new">All processing is associated with a Batch account.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When you perform operations with the Batch service, you need both the account name and the account key.</source>
          <target state="new">When you perform operations with the Batch service, you need both the account name and the account key.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To create a batch account, check out <bpt id="p1">[</bpt>Create and manage an Azure Batch account in the Azure portal<ept id="p1">](batch-account-create-portal.md)</ept></source>
          <target state="new">To create a batch account, check out <bpt id="p1">[</bpt>Create and manage an Azure Batch account in the Azure portal<ept id="p1">](batch-account-create-portal.md)</ept></target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Compute node</source>
          <target state="new">Compute node</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A compute node is an Azure virtual machine that is dedicated to a specific workload for your application.</source>
          <target state="new">A compute node is an Azure virtual machine that is dedicated to a specific workload for your application.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The size of a node determines the number of CPU cores, the memory capacity, and the local file system size that is allocated to the node.</source>
          <target state="new">The size of a node determines the number of CPU cores, the memory capacity, and the local file system size that is allocated to the node.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A node can be any of the <bpt id="p1">[</bpt>cloud service node sizes<ph id="ph1">][</ph>cloud_service_sizes<ept id="p1">]</ept>, except for A0.</source>
          <target state="new">A node can be any of the <bpt id="p1">[</bpt>cloud service node sizes<ph id="ph1">][</ph>cloud_service_sizes<ept id="p1">]</ept>, except for A0.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Nodes can run executables and scripts, including executables (.exe), command (.cmd) files, batch (.bat) files, and PowerShell scripts.</source>
          <target state="new">Nodes can run executables and scripts, including executables (.exe), command (.cmd) files, batch (.bat) files, and PowerShell scripts.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A node also has the following attributes:</source>
          <target state="new">A node also has the following attributes:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A standard <bpt id="p1">**</bpt>folder structure<ept id="p1">**</ept> and associated <bpt id="p2">**</bpt>environment variables<ept id="p2">**</ept> detailing their paths are created on each compute node.</source>
          <target state="new">A standard <bpt id="p1">**</bpt>folder structure<ept id="p1">**</ept> and associated <bpt id="p2">**</bpt>environment variables<ept id="p2">**</ept> detailing their paths are created on each compute node.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Files and directories<ept id="p1">](#files)</ept> below for more information.</source>
          <target state="new">See <bpt id="p1">[</bpt>Files and directories<ept id="p1">](#files)</ept> below for more information.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Environment variables<ept id="p1">**</ept> available for reference by tasks.</source>
          <target state="new"><bpt id="p1">**</bpt>Environment variables<ept id="p1">**</ept> available for reference by tasks.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Firewall<ept id="p1">**</ept> settings that are configured to control access.</source>
          <target state="new"><bpt id="p1">**</bpt>Firewall<ept id="p1">**</ept> settings that are configured to control access.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>remote access<ept id="p1">**</ept> to a compute node is required (for debugging, for example), an RDP file can be obtained which may then be used to access the node via <bpt id="p2">*</bpt>Remote Desktop<ept id="p2">*</ept></source>
          <target state="new">If <bpt id="p1">**</bpt>remote access<ept id="p1">**</ept> to a compute node is required (for debugging, for example), an RDP file can be obtained which may then be used to access the node via <bpt id="p2">*</bpt>Remote Desktop<ept id="p2">*</ept></target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Pool</source>
          <target state="new">Pool</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A pool is a collection of nodes on which your application runs.</source>
          <target state="new">A pool is a collection of nodes on which your application runs.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The pool can be created manually by you, or by the Batch service automatically when you specify the work to be done.</source>
          <target state="new">The pool can be created manually by you, or by the Batch service automatically when you specify the work to be done.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can create and manage a pool that meets the needs of your application, and pools may be used only by the Batch account in which it was created.</source>
          <target state="new">You can create and manage a pool that meets the needs of your application, and pools may be used only by the Batch account in which it was created.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A Batch account can have more than one pool.</source>
          <target state="new">A Batch account can have more than one pool.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Azure Batch pools build on top of the core Azure compute platform: Batch pools provide large-scale allocation, application installation, data distribution, and health monitoring, as well as the flexible adjustment of the number of compute nodes within a pool (scaling).</source>
          <target state="new">Azure Batch pools build on top of the core Azure compute platform: Batch pools provide large-scale allocation, application installation, data distribution, and health monitoring, as well as the flexible adjustment of the number of compute nodes within a pool (scaling).</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Every node that is added to a pool is assigned a unique name and IP address.</source>
          <target state="new">Every node that is added to a pool is assigned a unique name and IP address.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When a node is removed from a pool, any changes made to the operating system or files are lost, and its name and IP address are released for future use.</source>
          <target state="new">When a node is removed from a pool, any changes made to the operating system or files are lost, and its name and IP address are released for future use.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When a node leaves a pool, its lifetime is over.</source>
          <target state="new">When a node leaves a pool, its lifetime is over.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can configure a pool to allow communication between the nodes within it.</source>
          <target state="new">You can configure a pool to allow communication between the nodes within it.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If intra-pool communication is requested for a pool, the Batch service enables ports greater than 1100 on each node in the pool.</source>
          <target state="new">If intra-pool communication is requested for a pool, the Batch service enables ports greater than 1100 on each node in the pool.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Each node in the pool is configured to allow incoming connections to this port range only, and only from other nodes within the pool.</source>
          <target state="new">Each node in the pool is configured to allow incoming connections to this port range only, and only from other nodes within the pool.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If your application does not require communication between nodes, the Batch service can allocate a potentially large number of nodes to the pool from many different clusters and data centers to enable increased parallel processing power.</source>
          <target state="new">If your application does not require communication between nodes, the Batch service can allocate a potentially large number of nodes to the pool from many different clusters and data centers to enable increased parallel processing power.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When you create a pool, you can specify the following attributes:</source>
          <target state="new">When you create a pool, you can specify the following attributes:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Size of the nodes<ept id="p1">**</ept> in the pool</source>
          <target state="new"><bpt id="p1">**</bpt>Size of the nodes<ept id="p1">**</ept> in the pool</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An appropriate node size should be chosen, taking into account the characteristics and requirements of the application or applications that are going to be run on the nodes.</source>
          <target state="new">An appropriate node size should be chosen, taking into account the characteristics and requirements of the application or applications that are going to be run on the nodes.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The node size is typically selected assuming one task will run on the node at a time.</source>
          <target state="new">The node size is typically selected assuming one task will run on the node at a time.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Considering aspects such as whether the application is multi-threaded and how much memory it consumes will help determine the most suitable and cost-effective node size.</source>
          <target state="new">Considering aspects such as whether the application is multi-threaded and how much memory it consumes will help determine the most suitable and cost-effective node size.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It is possible to have multiple tasks assigned and multiple application instances run in parallel, in which case a larger node is typically chosen - see "Task scheduling policy" below for more information.</source>
          <target state="new">It is possible to have multiple tasks assigned and multiple application instances run in parallel, in which case a larger node is typically chosen - see "Task scheduling policy" below for more information.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>All of the nodes in a pool must be the same size.</source>
          <target state="new">All of the nodes in a pool must be the same size.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If different applications are to be run with differing system requirements and/or load levels, separate pools should be created.</source>
          <target state="new">If different applications are to be run with differing system requirements and/or load levels, separate pools should be created.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>All <bpt id="p1">[</bpt>cloud service node sizes<ph id="ph1">][</ph>cloud_service_sizes<ept id="p1">]</ept> can be configured for a pool, except for A0.</source>
          <target state="new">All <bpt id="p1">[</bpt>cloud service node sizes<ph id="ph1">][</ph>cloud_service_sizes<ept id="p1">]</ept> can be configured for a pool, except for A0.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Operating system family<ept id="p1">**</ept> and <bpt id="p2">**</bpt>version<ept id="p2">**</ept> that runs on the nodes</source>
          <target state="new"><bpt id="p1">**</bpt>Operating system family<ept id="p1">**</ept> and <bpt id="p2">**</bpt>version<ept id="p2">**</ept> that runs on the nodes</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>As with worker roles within Cloud Services, the <bpt id="p1">*</bpt>OS Family<ept id="p1">*</ept> and <bpt id="p2">*</bpt>OS Version<ept id="p2">*</ept> can be specified (for more information on worker roles, see the <bpt id="p3">[</bpt>Tell me about cloud services<ph id="ph1">][</ph>about_cloud_services<ept id="p3">]</ept> section in <bpt id="p4">*</bpt>Compute Hosting Options Provided by Azure<ept id="p4">*</ept></source>
          <target state="new">As with worker roles within Cloud Services, the <bpt id="p1">*</bpt>OS Family<ept id="p1">*</ept> and <bpt id="p2">*</bpt>OS Version<ept id="p2">*</ept> can be specified (for more information on worker roles, see the <bpt id="p3">[</bpt>Tell me about cloud services<ph id="ph1">][</ph>about_cloud_services<ept id="p3">]</ept> section in <bpt id="p4">*</bpt>Compute Hosting Options Provided by Azure<ept id="p4">*</ept></target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The OS Family also determines which versions of .NET are installed with the OS.</source>
          <target state="new">The OS Family also determines which versions of .NET are installed with the OS.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>As with worker roles, it is recommended that <ph id="ph1">`*`</ph> be specified for the OS Version so that the nodes are automatically upgraded, and there is no work required to cater to newly released versions.</source>
          <target state="new">As with worker roles, it is recommended that <ph id="ph1">`*`</ph> be specified for the OS Version so that the nodes are automatically upgraded, and there is no work required to cater to newly released versions.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The primary use case for picking a specific OS version is to ensure that application compatibility is maintained, allowing backward compatibility testing to be performed before allowing the version to be updated.</source>
          <target state="new">The primary use case for picking a specific OS version is to ensure that application compatibility is maintained, allowing backward compatibility testing to be performed before allowing the version to be updated.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Once validated, the OS version for the pool can be updated and the new OS image installed–any running task will be interrupted and re-queued.</source>
          <target state="new">Once validated, the OS version for the pool can be updated and the new OS image installed–any running task will be interrupted and re-queued.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Target number of nodes<ept id="p1">**</ept> that should be available for the pool</source>
          <target state="new"><bpt id="p1">**</bpt>Target number of nodes<ept id="p1">**</ept> that should be available for the pool</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Scaling policy<ept id="p1">**</ept> for the pool</source>
          <target state="new"><bpt id="p1">**</bpt>Scaling policy<ept id="p1">**</ept> for the pool</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In addition to the number of nodes, you can also specify an <bpt id="p1">[</bpt>auto-scaling formula<ept id="p1">](batch-automatic-scaling.md)</ept> for a pool.</source>
          <target state="new">In addition to the number of nodes, you can also specify an <bpt id="p1">[</bpt>auto-scaling formula<ept id="p1">](batch-automatic-scaling.md)</ept> for a pool.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The Batch service will execute the formula and adjust the number of nodes within the pool based on various pool, job, and task parameters that you can specify.</source>
          <target state="new">The Batch service will execute the formula and adjust the number of nodes within the pool based on various pool, job, and task parameters that you can specify.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Task scheduling<ept id="p1">**</ept> policy</source>
          <target state="new"><bpt id="p1">**</bpt>Task scheduling<ept id="p1">**</ept> policy</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>max tasks per node<ept id="p1">](batch-parallel-node-tasks.md)</ept> configuration option determines the maximum number of tasks that can be run in parallel on each node within the pool.</source>
          <target state="new">The <bpt id="p1">[</bpt>max tasks per node<ept id="p1">](batch-parallel-node-tasks.md)</ept> configuration option determines the maximum number of tasks that can be run in parallel on each node within the pool.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default configuration is for one task to be run on a compute node at a time, but there are scenarios where it is beneficial to have more than one task executed on a node at the same time.</source>
          <target state="new">The default configuration is for one task to be run on a compute node at a time, but there are scenarios where it is beneficial to have more than one task executed on a node at the same time.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>One example is to increase node utilization if an application has to wait for I/O.</source>
          <target state="new">One example is to increase node utilization if an application has to wait for I/O.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Having more than one application executed concurrently will increase CPU utilization.</source>
          <target state="new">Having more than one application executed concurrently will increase CPU utilization.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Another example is to reduce the number of nodes in the pool.</source>
          <target state="new">Another example is to reduce the number of nodes in the pool.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This could reduce the amount of data transfer required for large reference data sets - if an A1 node size is sufficient for an application, then the A4 node size could instead be chosen and the pool configured for 8 parallel tasks, each using a core.</source>
          <target state="new">This could reduce the amount of data transfer required for large reference data sets - if an A1 node size is sufficient for an application, then the A4 node size could instead be chosen and the pool configured for 8 parallel tasks, each using a core.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A "fill type" can also be specified which determines whether Batch spreads the tasks evenly across all nodes, or packs each node with the maximum number of tasks before assigning tasks to another node in the pool.</source>
          <target state="new">A "fill type" can also be specified which determines whether Batch spreads the tasks evenly across all nodes, or packs each node with the maximum number of tasks before assigning tasks to another node in the pool.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Communication status<ept id="p1">**</ept> of the nodes in the pool</source>
          <target state="new"><bpt id="p1">**</bpt>Communication status<ept id="p1">**</ept> of the nodes in the pool</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A pool may be configured to allow communication between the nodes in the pool which determines its underlying network infrastructure.</source>
          <target state="new">A pool may be configured to allow communication between the nodes in the pool which determines its underlying network infrastructure.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Note that this also impacts placement of the nodes within clusters.</source>
          <target state="new">Note that this also impacts placement of the nodes within clusters.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In most scenarios, tasks operate independently and do not need to communicate with one another, but there may be some applications in which tasks must communicate.</source>
          <target state="new">In most scenarios, tasks operate independently and do not need to communicate with one another, but there may be some applications in which tasks must communicate.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Start task<ept id="p1">**</ept> for nodes in the pool</source>
          <target state="new"><bpt id="p1">**</bpt>Start task<ept id="p1">**</ept> for nodes in the pool</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>start task<ept id="p1">*</ept> may be specified which is executed each time a compute node joins the pool, and when a node is restarted.</source>
          <target state="new">A <bpt id="p1">*</bpt>start task<ept id="p1">*</ept> may be specified which is executed each time a compute node joins the pool, and when a node is restarted.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This is often used to install an application to be used by the tasks running on the node.</source>
          <target state="new">This is often used to install an application to be used by the tasks running on the node.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Job</source>
          <target state="new">Job</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A job is a collection of tasks, and specifies how computation is performed on compute nodes in a pool.</source>
          <target state="new">A job is a collection of tasks, and specifies how computation is performed on compute nodes in a pool.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The job specifies the <bpt id="p1">**</bpt>pool<ept id="p1">**</ept> in which the work will be run.</source>
          <target state="new">The job specifies the <bpt id="p1">**</bpt>pool<ept id="p1">**</ept> in which the work will be run.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The pool can be an existing pool, previously created for use by many jobs, or created on-demand for each job associated with a job schedule, or for all jobs associated with a job schedule.</source>
          <target state="new">The pool can be an existing pool, previously created for use by many jobs, or created on-demand for each job associated with a job schedule, or for all jobs associated with a job schedule.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An optional <bpt id="p1">**</bpt>job priority<ept id="p1">**</ept> can be specified.</source>
          <target state="new">An optional <bpt id="p1">**</bpt>job priority<ept id="p1">**</ept> can be specified.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When a job is submitted with a higher priority than jobs currently in progress, the higher priority job's tasks are inserted into the queue ahead of the lower priority job tasks.</source>
          <target state="new">When a job is submitted with a higher priority than jobs currently in progress, the higher priority job's tasks are inserted into the queue ahead of the lower priority job tasks.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Lower priority tasks that are already running will not be pre-empted.</source>
          <target state="new">Lower priority tasks that are already running will not be pre-empted.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Job <bpt id="p1">**</bpt>constraints<ept id="p1">**</ept> specify certain limits for your jobs.</source>
          <target state="new">Job <bpt id="p1">**</bpt>constraints<ept id="p1">**</ept> specify certain limits for your jobs.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>maximum wallclock time<ept id="p1">**</ept> can be set for jobs.</source>
          <target state="new">A <bpt id="p1">**</bpt>maximum wallclock time<ept id="p1">**</ept> can be set for jobs.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the jobs runs for longer than the maximum wallclock time specified, then the job and all associated tasks will be ended.</source>
          <target state="new">If the jobs runs for longer than the maximum wallclock time specified, then the job and all associated tasks will be ended.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Azure Batch can detect tasks that fail and retry the tasks.</source>
          <target state="new">Azure Batch can detect tasks that fail and retry the tasks.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>maximum number of task retries<ept id="p1">**</ept> can be specified as a constraint, including whether a task is always or never retried.</source>
          <target state="new">The <bpt id="p1">**</bpt>maximum number of task retries<ept id="p1">**</ept> can be specified as a constraint, including whether a task is always or never retried.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Retrying a task means that the task is re-queued to be run again.</source>
          <target state="new">Retrying a task means that the task is re-queued to be run again.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Tasks can be added to the job by your client application, or a <bpt id="p1">[</bpt>Job Manager task<ept id="p1">](#jobmanagertask)</ept> may be specified.</source>
          <target state="new">Tasks can be added to the job by your client application, or a <bpt id="p1">[</bpt>Job Manager task<ept id="p1">](#jobmanagertask)</ept> may be specified.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A job manager task uses the Batch API and contains the information necessary to create the required tasks for a job, with the task being run on one of the compute nodes within the pool.</source>
          <target state="new">A job manager task uses the Batch API and contains the information necessary to create the required tasks for a job, with the task being run on one of the compute nodes within the pool.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The job manager task is handled specifically by Batch–it is queued as soon as the job is created, and restarted if it fails.</source>
          <target state="new">The job manager task is handled specifically by Batch–it is queued as soon as the job is created, and restarted if it fails.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A Job Manager task is required for jobs created by a job schedule as it is the only way to define the tasks before the job is instantiated.</source>
          <target state="new">A Job Manager task is required for jobs created by a job schedule as it is the only way to define the tasks before the job is instantiated.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>More information on job manager tasks appears below.</source>
          <target state="new">More information on job manager tasks appears below.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="new">Task</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A task is a unit of computation that is associated with a job and runs on a node.</source>
          <target state="new">A task is a unit of computation that is associated with a job and runs on a node.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Tasks are assigned to a node for execution, or are queued until a node becomes free.</source>
          <target state="new">Tasks are assigned to a node for execution, or are queued until a node becomes free.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A task uses the following resources:</source>
          <target state="new">A task uses the following resources:</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The application specified in the <bpt id="p1">**</bpt>command line<ept id="p1">**</ept> of the task.</source>
          <target state="new">The application specified in the <bpt id="p1">**</bpt>command line<ept id="p1">**</ept> of the task.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Resource files<ept id="p1">**</ept> that contain the data to be processed.</source>
          <target state="new"><bpt id="p1">**</bpt>Resource files<ept id="p1">**</ept> that contain the data to be processed.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>These files are automatically copied to the node from blob storage in an Azure Storage account.</source>
          <target state="new">These files are automatically copied to the node from blob storage in an Azure Storage account.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Files and directories<ept id="p1">](#files)</ept> below.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Files and directories<ept id="p1">](#files)</ept> below.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>environment variables<ept id="p1">**</ept> that are required by the application.</source>
          <target state="new">The <bpt id="p1">**</bpt>environment variables<ept id="p1">**</ept> that are required by the application.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Environment settings for tasks<ept id="p1">](#environment)</ept> below.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Environment settings for tasks<ept id="p1">](#environment)</ept> below.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>constraints<ept id="p1">**</ept> under which the computation should occur.</source>
          <target state="new">The <bpt id="p1">**</bpt>constraints<ept id="p1">**</ept> under which the computation should occur.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For example, the maximum time in which the task is allowed to run, the maximum number of times that a task should be retried if it fails, and the maximum time that files in the working directory are retained.</source>
          <target state="new">For example, the maximum time in which the task is allowed to run, the maximum number of times that a task should be retried if it fails, and the maximum time that files in the working directory are retained.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>In addition to tasks that you define to perform computation on a node, the following special tasks are also provided by the Batch service:</source>
          <target state="new">In addition to tasks that you define to perform computation on a node, the following special tasks are also provided by the Batch service:</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Start task</source>
          <target state="new">Start task</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Job manager task</source>
          <target state="new">Job manager task</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Job preparation and release tasks</source>
          <target state="new">Job preparation and release tasks</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Multi-instance tasks</source>
          <target state="new">Multi-instance tasks</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Task dependencies</source>
          <target state="new">Task dependencies</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Start task</source>
          <target state="new">Start task</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>By associating a <bpt id="p1">**</bpt>start task<ept id="p1">**</ept> with a pool, you can configure the operating environment of its nodes, performing actions such as installing software or starting background processes.</source>
          <target state="new">By associating a <bpt id="p1">**</bpt>start task<ept id="p1">**</ept> with a pool, you can configure the operating environment of its nodes, performing actions such as installing software or starting background processes.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The start task runs every time a node starts for as long as it remains in the pool, including when the node is first added to the pool.</source>
          <target state="new">The start task runs every time a node starts for as long as it remains in the pool, including when the node is first added to the pool.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A primary benefit of the start task is that it contains all of the information necessary to configure compute nodes and install applications necessary for job task execution.</source>
          <target state="new">A primary benefit of the start task is that it contains all of the information necessary to configure compute nodes and install applications necessary for job task execution.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Thus, increasing the number of nodes in a pool is as simple as specifying the new target node count - Batch already has all of the information needed to configure the new nodes and get them ready for accepting tasks.</source>
          <target state="new">Thus, increasing the number of nodes in a pool is as simple as specifying the new target node count - Batch already has all of the information needed to configure the new nodes and get them ready for accepting tasks.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>As with any Batch task, a list of <bpt id="p1">**</bpt>resource files<ept id="p1">**</ept> in <bpt id="p2">[</bpt>Azure Storage<ph id="ph1">][</ph>azure_storage<ept id="p2">]</ept> can be specified, in addition to a <bpt id="p3">**</bpt>command line<ept id="p3">**</ept> to be executed.</source>
          <target state="new">As with any Batch task, a list of <bpt id="p1">**</bpt>resource files<ept id="p1">**</ept> in <bpt id="p2">[</bpt>Azure Storage<ph id="ph1">][</ph>azure_storage<ept id="p2">]</ept> can be specified, in addition to a <bpt id="p3">**</bpt>command line<ept id="p3">**</ept> to be executed.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Azure Batch will first copy the files from Azure Storage, then run the command line.</source>
          <target state="new">Azure Batch will first copy the files from Azure Storage, then run the command line.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>For a pool start task, the file list usually contains the application package or files, but it could also include reference data to be used by all tasks running on the compute nodes.</source>
          <target state="new">For a pool start task, the file list usually contains the application package or files, but it could also include reference data to be used by all tasks running on the compute nodes.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The start task's command line could execute a PowerShell script or perform a <ph id="ph1">`robocopy`</ph> operation, for example, to copy application files to the "shared" folder, then subsequently run an MSI or</source>
          <target state="new">The start task's command line could execute a PowerShell script or perform a <ph id="ph1">`robocopy`</ph> operation, for example, to copy application files to the "shared" folder, then subsequently run an MSI or</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>It is typically desirable for the Batch service to wait for the start task to complete before considering the node ready to be assigned tasks, but this is configurable.</source>
          <target state="new">It is typically desirable for the Batch service to wait for the start task to complete before considering the node ready to be assigned tasks, but this is configurable.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If a start task fails on a compute node, then the state of the node is updated to reflect the failure, and the node will not be available for tasks to be assigned.</source>
          <target state="new">If a start task fails on a compute node, then the state of the node is updated to reflect the failure, and the node will not be available for tasks to be assigned.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A start task can fail if there is an issue copying its resource files from storage, or if the process executed by its command line returns a non-zero exit code.</source>
          <target state="new">A start task can fail if there is an issue copying its resource files from storage, or if the process executed by its command line returns a non-zero exit code.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Job manager task</source>
          <target state="new">Job manager task</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Job Manager task<ept id="p1">**</ept> is typically used in controlling and/or monitoring job execution.</source>
          <target state="new">A <bpt id="p1">**</bpt>Job Manager task<ept id="p1">**</ept> is typically used in controlling and/or monitoring job execution.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For example, creating and submitting the tasks for a job, determining additional tasks to run, and determining when work is complete.</source>
          <target state="new">For example, creating and submitting the tasks for a job, determining additional tasks to run, and determining when work is complete.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>A Job Manager task is not restricted to these activities, however - it is a fully fledged task that can perform any actions required for the job.</source>
          <target state="new">A Job Manager task is not restricted to these activities, however - it is a fully fledged task that can perform any actions required for the job.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>For example, a Job Manager task might download a file specified as a parameter, analyze the contents of that file, and submit additional tasks based on those contents.</source>
          <target state="new">For example, a Job Manager task might download a file specified as a parameter, analyze the contents of that file, and submit additional tasks based on those contents.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A job manager task is started before all other tasks and provides the following features:</source>
          <target state="new">A job manager task is started before all other tasks and provides the following features:</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>It is automatically submitted as a task by the Batch service when the job is created.</source>
          <target state="new">It is automatically submitted as a task by the Batch service when the job is created.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>It is scheduled to execute before the other tasks in a job.</source>
          <target state="new">It is scheduled to execute before the other tasks in a job.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Its associated node is the last to be removed from a pool when the pool is being downsized.</source>
          <target state="new">Its associated node is the last to be removed from a pool when the pool is being downsized.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Its termination can be tied to the termination of all tasks in the job.</source>
          <target state="new">Its termination can be tied to the termination of all tasks in the job.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The job manager task is given the highest priority when it needs to be restarted.</source>
          <target state="new">The job manager task is given the highest priority when it needs to be restarted.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>If an idle node is not available, the Batch service may terminate one of the other running tasks in the pool to make room for the job manager task to run.</source>
          <target state="new">If an idle node is not available, the Batch service may terminate one of the other running tasks in the pool to make room for the job manager task to run.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A job manager task in one job does not have priority over the tasks of other jobs.</source>
          <target state="new">A job manager task in one job does not have priority over the tasks of other jobs.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Across jobs, only job-level priorities are observed.</source>
          <target state="new">Across jobs, only job-level priorities are observed.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Job preparation and release tasks</source>
          <target state="new">Job preparation and release tasks</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Batch provides the job preparation task for pre-job execution setup, and the job release task for post-job maintenance or cleanup.</source>
          <target state="new">Batch provides the job preparation task for pre-job execution setup, and the job release task for post-job maintenance or cleanup.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Job preparation task<ept id="p1">**</ept> - The job preparation task runs on all compute nodes scheduled to run tasks, before any of the other job tasks are executed.</source>
          <target state="new"><bpt id="p1">**</bpt>Job preparation task<ept id="p1">**</ept> - The job preparation task runs on all compute nodes scheduled to run tasks, before any of the other job tasks are executed.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Use the job preparation task to copy data shared by all tasks, but unique to the job, for example.</source>
          <target state="new">Use the job preparation task to copy data shared by all tasks, but unique to the job, for example.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Job release task<ept id="p1">**</ept> - When a job has completed, the job release task runs on each node in the pool that executed at least one task.</source>
          <target state="new"><bpt id="p1">**</bpt>Job release task<ept id="p1">**</ept> - When a job has completed, the job release task runs on each node in the pool that executed at least one task.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Use the job release task to delete data copied by the job preparation task, or compress and upload diagnostic log data, for example.</source>
          <target state="new">Use the job release task to delete data copied by the job preparation task, or compress and upload diagnostic log data, for example.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Both job preparation and release tasks allow you to specify a command line to run when the task is invoked, and offer features such as file download, elevated execution, custom environment variables, maximum execution duration, retry count, and file retention time.</source>
          <target state="new">Both job preparation and release tasks allow you to specify a command line to run when the task is invoked, and offer features such as file download, elevated execution, custom environment variables, maximum execution duration, retry count, and file retention time.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For more information on job preparation and release tasks, see <bpt id="p1">[</bpt>Run job preparation and completion tasks on Azure Batch compute nodes<ept id="p1">](batch-job-prep-release.md)</ept></source>
          <target state="new">For more information on job preparation and release tasks, see <bpt id="p1">[</bpt>Run job preparation and completion tasks on Azure Batch compute nodes<ept id="p1">](batch-job-prep-release.md)</ept></target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Multi-instance tasks</source>
          <target state="new">Multi-instance tasks</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>multi-instance task<ept id="p1">](batch-mpi.md)</ept> is a task that is configured to run on more than one compute node simultaneously.</source>
          <target state="new">A <bpt id="p1">[</bpt>multi-instance task<ept id="p1">](batch-mpi.md)</ept> is a task that is configured to run on more than one compute node simultaneously.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>With multi-instance tasks, you can enable high performance computing scenarios like Message Passing Interface (MPI) that require a group of compute nodes allocated together to process a single workload.</source>
          <target state="new">With multi-instance tasks, you can enable high performance computing scenarios like Message Passing Interface (MPI) that require a group of compute nodes allocated together to process a single workload.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>For a detailed discussion on running MPI jobs in Batch using the Batch .NET library, check out <bpt id="p1">[</bpt>Use multi-instance tasks to run Message Passing Interface (MPI) applications in Azure Batch<ept id="p1">](batch-mpi.md)</ept></source>
          <target state="new">For a detailed discussion on running MPI jobs in Batch using the Batch .NET library, check out <bpt id="p1">[</bpt>Use multi-instance tasks to run Message Passing Interface (MPI) applications in Azure Batch<ept id="p1">](batch-mpi.md)</ept></target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Task dependencies</source>
          <target state="new">Task dependencies</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Task dependencies, as the name implies, allow you to specify that a task depends on the completion of other tasks before its execution.</source>
          <target state="new">Task dependencies, as the name implies, allow you to specify that a task depends on the completion of other tasks before its execution.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This feature provides support for situations in which a "downstream" task consumes the output of an "upstream" task, or when an upstream task performs some initialization that is required by a downstream task.</source>
          <target state="new">This feature provides support for situations in which a "downstream" task consumes the output of an "upstream" task, or when an upstream task performs some initialization that is required by a downstream task.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>To use this feature, you must first enable task dependencies on your Batch job.</source>
          <target state="new">To use this feature, you must first enable task dependencies on your Batch job.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Then, for each task that depends on another (or many others), you specify the tasks which that task depends on.</source>
          <target state="new">Then, for each task that depends on another (or many others), you specify the tasks which that task depends on.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>With task dependencies, you can configure scenarios such as the following:</source>
          <target state="new">With task dependencies, you can configure scenarios such as the following:</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>taskB<ept id="p1">*</ept> depends on <bpt id="p2">*</bpt>taskA<ept id="p2">*</ept><ph id="ph1"> (</ph><bpt id="p3">*</bpt>taskB<ept id="p3">*</ept> will not begin execution until <bpt id="p4">*</bpt>taskA<ept id="p4">*</ept> has completed)</source>
          <target state="new"><bpt id="p1">*</bpt>taskB<ept id="p1">*</ept> depends on <bpt id="p2">*</bpt>taskA<ept id="p2">*</ept><ph id="ph1"> (</ph><bpt id="p3">*</bpt>taskB<ept id="p3">*</ept> will not begin execution until <bpt id="p4">*</bpt>taskA<ept id="p4">*</ept> has completed)</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>taskC<ept id="p1">*</ept> depends on both <bpt id="p2">*</bpt>taskA<ept id="p2">*</ept> and <bpt id="p3">*</bpt>taskB<ept id="p3">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>taskC<ept id="p1">*</ept> depends on both <bpt id="p2">*</bpt>taskA<ept id="p2">*</ept> and <bpt id="p3">*</bpt>taskB<ept id="p3">*</ept></target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>taskD<ept id="p1">*</ept> depends on a range of tasks, such as tasks <bpt id="p2">*</bpt>1<ept id="p2">*</ept> through <bpt id="p3">*</bpt>10<ept id="p3">*</ept>, before it executes</source>
          <target state="new"><bpt id="p1">*</bpt>taskD<ept id="p1">*</ept> depends on a range of tasks, such as tasks <bpt id="p2">*</bpt>1<ept id="p2">*</ept> through <bpt id="p3">*</bpt>10<ept id="p3">*</ept>, before it executes</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Check out the <bpt id="p1">[</bpt>TaskDependencies<ph id="ph1">][</ph>github_sample_taskdeps<ept id="p1">]</ept> code sample in the <bpt id="p2">[</bpt>azure-batch-samples<ph id="ph2">][</ph>github_samples<ept id="p2">]</ept> GitHub repository.</source>
          <target state="new">Check out the <bpt id="p1">[</bpt>TaskDependencies<ph id="ph1">][</ph>github_sample_taskdeps<ept id="p1">]</ept> code sample in the <bpt id="p2">[</bpt>azure-batch-samples<ph id="ph2">][</ph>github_samples<ept id="p2">]</ept> GitHub repository.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>In it, you will see how to configure tasks that depend on other tasks using the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>batch_net_api<ept id="p1">]</ept> library.</source>
          <target state="new">In it, you will see how to configure tasks that depend on other tasks using the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>batch_net_api<ept id="p1">]</ept> library.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Scheduled jobs</source>
          <target state="new">Scheduled jobs</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Job schedules enable you to create recurring jobs within the Batch service.</source>
          <target state="new">Job schedules enable you to create recurring jobs within the Batch service.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>A job schedule specifies when to run jobs and includes the specifications for the jobs to be run.</source>
          <target state="new">A job schedule specifies when to run jobs and includes the specifications for the jobs to be run.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>A job schedule allows for the specification of the duration of the schedule - how long and when the schedule is in effect - and how often during that time period jobs should be created.</source>
          <target state="new">A job schedule allows for the specification of the duration of the schedule - how long and when the schedule is in effect - and how often during that time period jobs should be created.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Application packages</source>
          <target state="new">Application packages</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>application packages<ept id="p1">](batch-application-packages.md)</ept> feature provides easy management and deployment of applications to the compute nodes in your pools.</source>
          <target state="new">The <bpt id="p1">[</bpt>application packages<ept id="p1">](batch-application-packages.md)</ept> feature provides easy management and deployment of applications to the compute nodes in your pools.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>With application packages, you can easily upload and manage multiple versions of the applications run by your tasks, including binaries and support files, then automatically deploy one or more of these applications to the compute nodes in your pool.</source>
          <target state="new">With application packages, you can easily upload and manage multiple versions of the applications run by your tasks, including binaries and support files, then automatically deploy one or more of these applications to the compute nodes in your pool.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Batch handles the details of working with Azure Storage in the background to securely store and deploy your application packages to compute nodes, so both your code and your management overhead can be simplified.</source>
          <target state="new">Batch handles the details of working with Azure Storage in the background to securely store and deploy your application packages to compute nodes, so both your code and your management overhead can be simplified.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>To find out more about the application package feature, check out <bpt id="p1">[</bpt>Application deployment with Azure Batch application packages<ept id="p1">](batch-application-packages.md)</ept></source>
          <target state="new">To find out more about the application package feature, check out <bpt id="p1">[</bpt>Application deployment with Azure Batch application packages<ept id="p1">](batch-application-packages.md)</ept></target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Files and directories</source>
          <target state="new">Files and directories</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Each task has a working directory under which it creates zero or more files and directories for storing the program that is run by the task, the data that it processes, and the output of the processing performed by the task.</source>
          <target state="new">Each task has a working directory under which it creates zero or more files and directories for storing the program that is run by the task, the data that it processes, and the output of the processing performed by the task.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>These files and directories are then available for use by other tasks during the running of a job.</source>
          <target state="new">These files and directories are then available for use by other tasks during the running of a job.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>All tasks, files, and directories on a node are owned by a single user account.</source>
          <target state="new">All tasks, files, and directories on a node are owned by a single user account.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The Batch service exposes a portion of the file system on a node as the "root directory."</source>
          <target state="new">The Batch service exposes a portion of the file system on a node as the "root directory."</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The root directory is available to a task by accessing the <ph id="ph1">`%AZ_BATCH_NODE_ROOT_DIR%`</ph> environment variable.</source>
          <target state="new">The root directory is available to a task by accessing the <ph id="ph1">`%AZ_BATCH_NODE_ROOT_DIR%`</ph> environment variable.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>For more information about using environment variables, see <bpt id="p1">[</bpt>Environment settings for tasks<ept id="p1">](#environment)</ept></source>
          <target state="new">For more information about using environment variables, see <bpt id="p1">[</bpt>Environment settings for tasks<ept id="p1">](#environment)</ept></target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Compute node directory structure</source>
          <target state="new">Compute node directory structure</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The root directory contains the following directory structure:</source>
          <target state="new">The root directory contains the following directory structure:</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Shared<ept id="p1">**</ept> – This location is a shared directory for all tasks that run on a node, regardless of job.</source>
          <target state="new"><bpt id="p1">**</bpt>Shared<ept id="p1">**</ept> – This location is a shared directory for all tasks that run on a node, regardless of job.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>On the node, the shared directory is accessed via  <ph id="ph1">`%AZ_BATCH_NODE_SHARED_DIR%`</ph>.</source>
          <target state="new">On the node, the shared directory is accessed via  <ph id="ph1">`%AZ_BATCH_NODE_SHARED_DIR%`</ph>.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>This directory provides read/write access to all tasks that execute on the node.</source>
          <target state="new">This directory provides read/write access to all tasks that execute on the node.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Tasks can create, read, update, and delete files in this directory.</source>
          <target state="new">Tasks can create, read, update, and delete files in this directory.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Startup<ept id="p1">**</ept> – This location is used by a start task as its working directory.</source>
          <target state="new"><bpt id="p1">**</bpt>Startup<ept id="p1">**</ept> – This location is used by a start task as its working directory.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>All of the files that are downloaded by the Batch service to launch the start task are also stored under this directory.</source>
          <target state="new">All of the files that are downloaded by the Batch service to launch the start task are also stored under this directory.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>On the node, the start directory is available via the <ph id="ph1">`%AZ_BATCH_NODE_STARTUP_DIR%`</ph> environment variable.</source>
          <target state="new">On the node, the start directory is available via the <ph id="ph1">`%AZ_BATCH_NODE_STARTUP_DIR%`</ph> environment variable.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The start task can create, read, update, and delete files under this directory, and this directory can be used by start tasks to configure the operating system.</source>
          <target state="new">The start task can create, read, update, and delete files under this directory, and this directory can be used by start tasks to configure the operating system.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tasks<ept id="p1">**</ept> - A directory is created for each task that runs on the node, accessed via <ph id="ph1">`%AZ_BATCH_TASK_DIR%`</ph>.</source>
          <target state="new"><bpt id="p1">**</bpt>Tasks<ept id="p1">**</ept> - A directory is created for each task that runs on the node, accessed via <ph id="ph1">`%AZ_BATCH_TASK_DIR%`</ph>.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Within each task directory, the Batch service creates a working directory (<ph id="ph1">`wd`</ph>) whose unique path is specified by the <ph id="ph2">`%AZ_BATCH_TASK_WORKING_DIR%`</ph> environment variable.</source>
          <target state="new">Within each task directory, the Batch service creates a working directory (<ph id="ph1">`wd`</ph>) whose unique path is specified by the <ph id="ph2">`%AZ_BATCH_TASK_WORKING_DIR%`</ph> environment variable.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This directory provides read/write access to the task.</source>
          <target state="new">This directory provides read/write access to the task.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The task can create, read, update, and delete files under this directory, and this directory is retained based on the <bpt id="p1">*</bpt>RetentionTime<ept id="p1">*</ept> constraint specified for the task.</source>
          <target state="new">The task can create, read, update, and delete files under this directory, and this directory is retained based on the <bpt id="p1">*</bpt>RetentionTime<ept id="p1">*</ept> constraint specified for the task.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`stderr.txt`</ph> - These files are written to the task folder during the execution of the task.</source>
          <target state="new">and <ph id="ph1">`stderr.txt`</ph> - These files are written to the task folder during the execution of the task.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>When a node is removed from the pool, all of the files that are stored on the node are removed.</source>
          <target state="new">When a node is removed from the pool, all of the files that are stored on the node are removed.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Pool and compute node lifetime</source>
          <target state="new">Pool and compute node lifetime</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>When designing your Azure Batch solution, a design decision must be made with regard to how and when pools are created, and how long compute nodes within those pools are kept available.</source>
          <target state="new">When designing your Azure Batch solution, a design decision must be made with regard to how and when pools are created, and how long compute nodes within those pools are kept available.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>On one end of the spectrum, a pool could be created for each job when the job is submitted, and its nodes removed as soon as tasks finish execution.</source>
          <target state="new">On one end of the spectrum, a pool could be created for each job when the job is submitted, and its nodes removed as soon as tasks finish execution.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>This will maximize utilization as the nodes are only allocated when absolutely needed, and shutdown as soon as they become idle.</source>
          <target state="new">This will maximize utilization as the nodes are only allocated when absolutely needed, and shutdown as soon as they become idle.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>While this means that the job must wait for the nodes to be allocated, it is important to note that tasks will be scheduled to nodes as soon as they are individually available, allocated, and the start task has completed.</source>
          <target state="new">While this means that the job must wait for the nodes to be allocated, it is important to note that tasks will be scheduled to nodes as soon as they are individually available, allocated, and the start task has completed.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Batch does <bpt id="p1">*</bpt>not<ept id="p1">*</ept> wait until all nodes within a pool are available before assigning tasks, thus ensuring maximum utilization of all available nodes.</source>
          <target state="new">Batch does <bpt id="p1">*</bpt>not<ept id="p1">*</ept> wait until all nodes within a pool are available before assigning tasks, thus ensuring maximum utilization of all available nodes.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>At the other end of the spectrum, if having jobs start immediately is the highest priority, a pool may be created ahead of time and its nodes made available before jobs are submitted.</source>
          <target state="new">At the other end of the spectrum, if having jobs start immediately is the highest priority, a pool may be created ahead of time and its nodes made available before jobs are submitted.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>In this scenario, job tasks can start immediately, but nodes may sit idle while waiting for tasks to be assigned.</source>
          <target state="new">In this scenario, job tasks can start immediately, but nodes may sit idle while waiting for tasks to be assigned.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A combined approach, typically used for handling variable but ongoing load, is to have a pool to which multiple jobs are submitted, but scale the number of nodes up or down according to the job load (see <bpt id="p1">*</bpt>Scaling applications<ept id="p1">*</ept> below).</source>
          <target state="new">A combined approach, typically used for handling variable but ongoing load, is to have a pool to which multiple jobs are submitted, but scale the number of nodes up or down according to the job load (see <bpt id="p1">*</bpt>Scaling applications<ept id="p1">*</ept> below).</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This can be done reactively, based on current load, or proactively if load can be predicted.</source>
          <target state="new">This can be done reactively, based on current load, or proactively if load can be predicted.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Scaling applications</source>
          <target state="new">Scaling applications</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>With <bpt id="p1">[</bpt>automatic scaling<ept id="p1">](batch-automatic-scaling.md)</ept>, you can have the Batch service dynamically adjust the number of compute nodes in a pool according to the current workload and resource usage of your compute scenario.</source>
          <target state="new">With <bpt id="p1">[</bpt>automatic scaling<ept id="p1">](batch-automatic-scaling.md)</ept>, you can have the Batch service dynamically adjust the number of compute nodes in a pool according to the current workload and resource usage of your compute scenario.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>This allows you to lower the overall cost of running your application by using only the resources you need, and releasing those you don't.</source>
          <target state="new">This allows you to lower the overall cost of running your application by using only the resources you need, and releasing those you don't.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>You can specify the automatic scaling settings for a pool when it is created, or enable scaling later, and you can update the scaling settings on an automatic scaling-enabled pool.</source>
          <target state="new">You can specify the automatic scaling settings for a pool when it is created, or enable scaling later, and you can update the scaling settings on an automatic scaling-enabled pool.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Automatic scaling is performed by specifying an <bpt id="p1">**</bpt>automatic scaling formula<ept id="p1">**</ept> for a pool.</source>
          <target state="new">Automatic scaling is performed by specifying an <bpt id="p1">**</bpt>automatic scaling formula<ept id="p1">**</ept> for a pool.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The Batch service uses this formula to determine the target number of nodes in the pool for the next scaling interval (an interval which you can specify).</source>
          <target state="new">The Batch service uses this formula to determine the target number of nodes in the pool for the next scaling interval (an interval which you can specify).</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>For example, perhaps a job requires that you submit a large number of tasks to be scheduled for execution.</source>
          <target state="new">For example, perhaps a job requires that you submit a large number of tasks to be scheduled for execution.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>You can assign a scaling formula to the pool that adjusts number of nodes in the pool based on the current number of pending tasks, and the completion rate of those tasks.</source>
          <target state="new">You can assign a scaling formula to the pool that adjusts number of nodes in the pool based on the current number of pending tasks, and the completion rate of those tasks.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The Batch service periodically evaluates the formula, and resizes the pool based on workload and your formula settings.</source>
          <target state="new">The Batch service periodically evaluates the formula, and resizes the pool based on workload and your formula settings.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A scaling formula can be based on the following metrics:</source>
          <target state="new">A scaling formula can be based on the following metrics:</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Time metrics<ept id="p1">**</ept> – Based on statistics collected every five minutes in the specified number of hours.</source>
          <target state="new"><bpt id="p1">**</bpt>Time metrics<ept id="p1">**</ept> – Based on statistics collected every five minutes in the specified number of hours.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Resource metrics<ept id="p1">**</ept> – Based on CPU usage, bandwidth usage, memory usage, and number of nodes.</source>
          <target state="new"><bpt id="p1">**</bpt>Resource metrics<ept id="p1">**</ept> – Based on CPU usage, bandwidth usage, memory usage, and number of nodes.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Task metrics<ept id="p1">**</ept> – Based on the status of tasks, such as Active, Pending, and Completed.</source>
          <target state="new"><bpt id="p1">**</bpt>Task metrics<ept id="p1">**</ept> – Based on the status of tasks, such as Active, Pending, and Completed.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>When automatic scaling decreases the number of compute nodes in a pool, currently running tasks must be considered.</source>
          <target state="new">When automatic scaling decreases the number of compute nodes in a pool, currently running tasks must be considered.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>To accommodate this, your formula can include a node de-allocation policy setting that specifies whether running tasks are stopped immediately, or allowed to finish before the node is removed from the pool.</source>
          <target state="new">To accommodate this, your formula can include a node de-allocation policy setting that specifies whether running tasks are stopped immediately, or allowed to finish before the node is removed from the pool.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>To maximize compute resource utilization, set the target number of nodes to zero at the end of a job, but allow running tasks to finish.</source>
          <target state="new">To maximize compute resource utilization, set the target number of nodes to zero at the end of a job, but allow running tasks to finish.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>For more information about automatically scaling an application, see <bpt id="p1">[</bpt>Automatically scale compute nodes in an Azure Batch pool<ept id="p1">](batch-automatic-scaling.md)</ept></source>
          <target state="new">For more information about automatically scaling an application, see <bpt id="p1">[</bpt>Automatically scale compute nodes in an Azure Batch pool<ept id="p1">](batch-automatic-scaling.md)</ept></target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Security with certificates</source>
          <target state="new">Security with certificates</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>You typically need to use certificates when encrypting or decrypting sensitive information for tasks, such as the key for an <bpt id="p1">[</bpt>Azure Storage account<ph id="ph1">][</ph>azure_storage<ept id="p1">]</ept>.</source>
          <target state="new">You typically need to use certificates when encrypting or decrypting sensitive information for tasks, such as the key for an <bpt id="p1">[</bpt>Azure Storage account<ph id="ph1">][</ph>azure_storage<ept id="p1">]</ept>.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>To support this, certificates can be installed on nodes.</source>
          <target state="new">To support this, certificates can be installed on nodes.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Encrypted secrets are passed to tasks via command-line parameters or embedded in one of the task resources, and the installed certificates can be used to decrypt them.</source>
          <target state="new">Encrypted secrets are passed to tasks via command-line parameters or embedded in one of the task resources, and the installed certificates can be used to decrypt them.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>You use the <bpt id="p1">[</bpt>Add certificate<ph id="ph1">][</ph>rest_add_cert<ept id="p1">]</ept> operation (Batch REST API) or <bpt id="p2">[</bpt>CertificateOperations.CreateCertificate<ph id="ph2">][</ph>net_create_cert<ept id="p2">]</ept> method (Batch .NET API) to add a certificate to a Batch account.</source>
          <target state="new">You use the <bpt id="p1">[</bpt>Add certificate<ph id="ph1">][</ph>rest_add_cert<ept id="p1">]</ept> operation (Batch REST API) or <bpt id="p2">[</bpt>CertificateOperations.CreateCertificate<ph id="ph2">][</ph>net_create_cert<ept id="p2">]</ept> method (Batch .NET API) to add a certificate to a Batch account.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>You can then associate the certificate to a new or existing pool.</source>
          <target state="new">You can then associate the certificate to a new or existing pool.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>When a certificate is associated with a pool, the Batch service installs the certificate on each node in the pool.</source>
          <target state="new">When a certificate is associated with a pool, the Batch service installs the certificate on each node in the pool.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The Batch service installs the appropriate certificates when the node starts up, before launching any tasks including start and job manager tasks.</source>
          <target state="new">The Batch service installs the appropriate certificates when the node starts up, before launching any tasks including start and job manager tasks.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Scheduling priority</source>
          <target state="new">Scheduling priority</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>You can assign a priority to jobs you create in Batch.</source>
          <target state="new">You can assign a priority to jobs you create in Batch.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The Batch service uses the priority value of the job to determine the order of job scheduling within an account.</source>
          <target state="new">The Batch service uses the priority value of the job to determine the order of job scheduling within an account.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The priority values range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest.</source>
          <target state="new">The priority values range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>You can update the priority of a job by using the <bpt id="p1">[</bpt>Update the properties of a job<ph id="ph1">][</ph>rest_update_job<ept id="p1">]</ept> operation (Batch REST API) or by modifying the <bpt id="p2">[</bpt>CloudJob.Priority<ph id="ph2">][</ph>net_cloudjob_priority<ept id="p2">]</ept> property (Batch .NET API).</source>
          <target state="new">You can update the priority of a job by using the <bpt id="p1">[</bpt>Update the properties of a job<ph id="ph1">][</ph>rest_update_job<ept id="p1">]</ept> operation (Batch REST API) or by modifying the <bpt id="p2">[</bpt>CloudJob.Priority<ph id="ph2">][</ph>net_cloudjob_priority<ept id="p2">]</ept> property (Batch .NET API).</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Within the same account, higher priority jobs have scheduling precedence over lower priority jobs.</source>
          <target state="new">Within the same account, higher priority jobs have scheduling precedence over lower priority jobs.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>A job with a higher priority value in one account does not have scheduling precedence over another job with a lower priority value in a different account.</source>
          <target state="new">A job with a higher priority value in one account does not have scheduling precedence over another job with a lower priority value in a different account.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Job scheduling across pools is independent.</source>
          <target state="new">Job scheduling across pools is independent.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Between different pools, it is not guaranteed that a higher priority job will be scheduled first if its associated pool is short of idle nodes.</source>
          <target state="new">Between different pools, it is not guaranteed that a higher priority job will be scheduled first if its associated pool is short of idle nodes.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>In the same pool, jobs with the same priority level have an equal chance of being scheduled.</source>
          <target state="new">In the same pool, jobs with the same priority level have an equal chance of being scheduled.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Environment settings for tasks</source>
          <target state="new">Environment settings for tasks</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Each task that executes within a Batch job has access to environment variables set both by the Batch service (system-defined, see table below) as well as user-defined environment variables.</source>
          <target state="new">Each task that executes within a Batch job has access to environment variables set both by the Batch service (system-defined, see table below) as well as user-defined environment variables.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Applications and scripts run by tasks on compute nodes have access to these environment variables during execution on the node.</source>
          <target state="new">Applications and scripts run by tasks on compute nodes have access to these environment variables during execution on the node.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Set user-defined environment variables when using the <bpt id="p1">[</bpt>Add a task to a job<ph id="ph1">][</ph>rest_add_task<ept id="p1">]</ept> operation (Batch REST API) or by modifying the <bpt id="p2">[</bpt>CloudTask.EnvironmentSettings<ph id="ph2">][</ph>net_cloudtask_env<ept id="p2">]</ept> property (Batch .NET API) when adding tasks to a job.</source>
          <target state="new">Set user-defined environment variables when using the <bpt id="p1">[</bpt>Add a task to a job<ph id="ph1">][</ph>rest_add_task<ept id="p1">]</ept> operation (Batch REST API) or by modifying the <bpt id="p2">[</bpt>CloudTask.EnvironmentSettings<ph id="ph2">][</ph>net_cloudtask_env<ept id="p2">]</ept> property (Batch .NET API) when adding tasks to a job.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Get a task's environment variables, both system- and user-defined, by using the <bpt id="p1">[</bpt>Get information about a task<ph id="ph1">][</ph>rest_get_task_info<ept id="p1">]</ept> operation (Batch REST API) or by accessing the <bpt id="p2">[</bpt>CloudTask.EnvironmentSettings<ph id="ph2">][</ph>net_cloudtask_env<ept id="p2">]</ept> property (Batch .NET API).</source>
          <target state="new">Get a task's environment variables, both system- and user-defined, by using the <bpt id="p1">[</bpt>Get information about a task<ph id="ph1">][</ph>rest_get_task_info<ept id="p1">]</ept> operation (Batch REST API) or by accessing the <bpt id="p2">[</bpt>CloudTask.EnvironmentSettings<ph id="ph2">][</ph>net_cloudtask_env<ept id="p2">]</ept> property (Batch .NET API).</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>As mentioned, processes executing on a compute node can also access all environment variables, for example by using the familiar <ph id="ph1">`%VARIABLE_NAME%`</ph> syntax.</source>
          <target state="new">As mentioned, processes executing on a compute node can also access all environment variables, for example by using the familiar <ph id="ph1">`%VARIABLE_NAME%`</ph> syntax.</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>For every task that is scheduled within a job, the following set of system-defined environment variables is set by the Batch service:</source>
          <target state="new">For every task that is scheduled within a job, the following set of system-defined environment variables is set by the Batch service:</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Environment Variable Name</source>
          <target state="new">Environment Variable Name</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The name of the account to which the task belongs.</source>
          <target state="new">The name of the account to which the task belongs.</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The ID of the job to which the task belongs.</source>
          <target state="new">The ID of the job to which the task belongs.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The full path of the job preparation task directory on the node.</source>
          <target state="new">The full path of the job preparation task directory on the node.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The full path of the job preparation task working directory on the node.</source>
          <target state="new">The full path of the job preparation task working directory on the node.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The ID of the node on which the task is running.</source>
          <target state="new">The ID of the node on which the task is running.</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The full path of the root directory on the node.</source>
          <target state="new">The full path of the root directory on the node.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The full path of the shared directory on the node.</source>
          <target state="new">The full path of the shared directory on the node.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The full path of the compute node startup task directory on the node.</source>
          <target state="new">The full path of the compute node startup task directory on the node.</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The ID of the pool on which the task is running.</source>
          <target state="new">The ID of the pool on which the task is running.</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The full path of the task directory on the node.</source>
          <target state="new">The full path of the task directory on the node.</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The ID of the current task.</source>
          <target state="new">The ID of the current task.</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The full path of the task working directory on the node.</source>
          <target state="new">The full path of the task working directory on the node.</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>You cannot overwrite any of the above system-defined variables - they are read-only.</source>
          <target state="new">You cannot overwrite any of the above system-defined variables - they are read-only.</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="new">Error handling</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>You may find it necessary to handle both task and application failures within your Batch solution.</source>
          <target state="new">You may find it necessary to handle both task and application failures within your Batch solution.</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Task failure handling</source>
          <target state="new">Task failure handling</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Task failures fall into these categories:</source>
          <target state="new">Task failures fall into these categories:</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Scheduling failures</source>
          <target state="new">Scheduling failures</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>If the transfer of files specified for a task fails for any reason, a "scheduling error" is set for the task.</source>
          <target state="new">If the transfer of files specified for a task fails for any reason, a "scheduling error" is set for the task.</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Causes of scheduling errors could be because the files have moved, the Storage account is no longer available, or another issue was encountered that prevented the successful copying of files to the node.</source>
          <target state="new">Causes of scheduling errors could be because the files have moved, the Storage account is no longer available, or another issue was encountered that prevented the successful copying of files to the node.</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Application failures</source>
          <target state="new">Application failures</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The process specified by the task's command line can also fail.</source>
          <target state="new">The process specified by the task's command line can also fail.</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The process is deemed to have failed when a non-zero exit code is returned by the process executed by the task.</source>
          <target state="new">The process is deemed to have failed when a non-zero exit code is returned by the process executed by the task.</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>For application failures, it is possible to configure Batch to automatically retry the task up to a specified number of times.</source>
          <target state="new">For application failures, it is possible to configure Batch to automatically retry the task up to a specified number of times.</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Constraint failures</source>
          <target state="new">Constraint failures</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>A constraint can be set that specifies the maximum execution duration for a job or task, the <bpt id="p1">*</bpt>maxWallClockTime<ept id="p1">*</ept>.</source>
          <target state="new">A constraint can be set that specifies the maximum execution duration for a job or task, the <bpt id="p1">*</bpt>maxWallClockTime<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>This can be useful for terminating "hung" tasks.</source>
          <target state="new">This can be useful for terminating "hung" tasks.</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>When the maximum amount of time has been exceeded, the task is marked as <bpt id="p1">*</bpt>completed<ept id="p1">*</ept> but the exit code is set to <ph id="ph1">`0xC000013A`</ph>, and the <bpt id="p2">*</bpt>schedulingError<ept id="p2">*</ept> field will be marked as</source>
          <target state="new">When the maximum amount of time has been exceeded, the task is marked as <bpt id="p1">*</bpt>completed<ept id="p1">*</ept> but the exit code is set to <ph id="ph1">`0xC000013A`</ph>, and the <bpt id="p2">*</bpt>schedulingError<ept id="p2">*</ept> field will be marked as</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Debugging application failures</source>
          <target state="new">Debugging application failures</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>During execution, an application may produce diagnostic output which can be used to troubleshoot issues.</source>
          <target state="new">During execution, an application may produce diagnostic output which can be used to troubleshoot issues.</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>As mentioned in <bpt id="p1">[</bpt>Files and directories<ept id="p1">](#files)</ept> above, the Batch service sends stdout and stderr output to <ph id="ph1">`stdout.txt`</ph> and <ph id="ph2">`stderr.txt`</ph> files located in the task directory on the compute node.</source>
          <target state="new">As mentioned in <bpt id="p1">[</bpt>Files and directories<ept id="p1">](#files)</ept> above, the Batch service sends stdout and stderr output to <ph id="ph1">`stdout.txt`</ph> and <ph id="ph2">`stderr.txt`</ph> files located in the task directory on the compute node.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>By using <bpt id="p1">[</bpt>ComputeNode.GetNodeFile<ph id="ph1">][</ph>net_getfile_node<ept id="p1">]</ept> and <bpt id="p2">[</bpt>CloudTask.GetNodeFile<ph id="ph2">][</ph>net_getfile_task<ept id="p2">]</ept> in the Batch .NET API, you can retrieve these and other files for troubleshooting purposes.</source>
          <target state="new">By using <bpt id="p1">[</bpt>ComputeNode.GetNodeFile<ph id="ph1">][</ph>net_getfile_node<ept id="p1">]</ept> and <bpt id="p2">[</bpt>CloudTask.GetNodeFile<ph id="ph2">][</ph>net_getfile_task<ept id="p2">]</ept> in the Batch .NET API, you can retrieve these and other files for troubleshooting purposes.</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Even more extensive debugging can be performed by logging in to a compute node using <bpt id="p1">*</bpt>Remote Desktop<ept id="p1">*</ept>.</source>
          <target state="new">Even more extensive debugging can be performed by logging in to a compute node using <bpt id="p1">*</bpt>Remote Desktop<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>You can <bpt id="p1">[</bpt>get a remote desktop protocol file from a node<ph id="ph1">][</ph>rest_rdp<ept id="p1">]</ept> (Batch REST API) or the use the <bpt id="p2">[</bpt>ComputeNode.GetRDPFile<ph id="ph2">][</ph>net_rdp<ept id="p2">]</ept> method (Batch .NET API) for remote login.</source>
          <target state="new">You can <bpt id="p1">[</bpt>get a remote desktop protocol file from a node<ph id="ph1">][</ph>rest_rdp<ept id="p1">]</ept> (Batch REST API) or the use the <bpt id="p2">[</bpt>ComputeNode.GetRDPFile<ph id="ph2">][</ph>net_rdp<ept id="p2">]</ept> method (Batch .NET API) for remote login.</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>To connect to a node via RDP, you must first create a user on the node.</source>
          <target state="new">To connect to a node via RDP, you must first create a user on the node.</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Add a user account to a node<ph id="ph1">][</ph>rest_create_user<ept id="p1">]</ept> in the Batch REST API or the use the <bpt id="p2">[</bpt>ComputeNode.CreateComputeNodeUser<ph id="ph2">][</ph>net_create_user<ept id="p2">]</ept> method in Batch .NET.</source>
          <target state="new"><bpt id="p1">[</bpt>Add a user account to a node<ph id="ph1">][</ph>rest_create_user<ept id="p1">]</ept> in the Batch REST API or the use the <bpt id="p2">[</bpt>ComputeNode.CreateComputeNodeUser<ph id="ph2">][</ph>net_create_user<ept id="p2">]</ept> method in Batch .NET.</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Accounting for task failures or interruptions</source>
          <target state="new">Accounting for task failures or interruptions</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Tasks may occasionally fail or be interrupted.</source>
          <target state="new">Tasks may occasionally fail or be interrupted.</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The task application itself may fail, the node on which the task is running could be rebooted, or the node might be removed from the pool during a resize operation if the pool's de-allocation policy is set to remove nodes immediately without waiting for tasks to finish.</source>
          <target state="new">The task application itself may fail, the node on which the task is running could be rebooted, or the node might be removed from the pool during a resize operation if the pool's de-allocation policy is set to remove nodes immediately without waiting for tasks to finish.</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>In all cases, the task can be automatically re-queued by Batch for execution on another node.</source>
          <target state="new">In all cases, the task can be automatically re-queued by Batch for execution on another node.</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>It is also possible for an intermittent issue to cause a task to hang or take too long to execute.</source>
          <target state="new">It is also possible for an intermittent issue to cause a task to hang or take too long to execute.</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The maximum execution time can be set for a task, and if exceeded, Batch will interrupt the task application.</source>
          <target state="new">The maximum execution time can be set for a task, and if exceeded, Batch will interrupt the task application.</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Troubleshooting "bad" compute nodes</source>
          <target state="new">Troubleshooting "bad" compute nodes</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>In situations where some of your tasks are failing, your Batch client application or service can examine the metadata of the failed tasks to identify a misbehaving node.</source>
          <target state="new">In situations where some of your tasks are failing, your Batch client application or service can examine the metadata of the failed tasks to identify a misbehaving node.</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Each node in a pool is given a unique ID, and the node on which a task runs is included in the task metadata.</source>
          <target state="new">Each node in a pool is given a unique ID, and the node on which a task runs is included in the task metadata.</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Once identified, you can take several actions:</source>
          <target state="new">Once identified, you can take several actions:</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reboot the node<ept id="p1">**</ept><ph id="ph1"> (</ph><bpt id="p2">[</bpt>REST<ph id="ph2">][</ph>rest_reboot<ept id="p2">]</ept><ph id="ph3"> | </ph><bpt id="p3">[</bpt>.NET<ph id="ph4">][</ph>net_reboot<ept id="p3">]</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Reboot the node<ept id="p1">**</ept><ph id="ph1"> (</ph><bpt id="p2">[</bpt>REST<ph id="ph2">][</ph>rest_reboot<ept id="p2">]</ept><ph id="ph3"> | </ph><bpt id="p3">[</bpt>.NET<ph id="ph4">][</ph>net_reboot<ept id="p3">]</ept></target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Restarting the node can sometimes clear up latent issues such as stuck or crashed processes.</source>
          <target state="new">Restarting the node can sometimes clear up latent issues such as stuck or crashed processes.</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Note that if your pool uses a start task or your job uses a job preparation task, they will be executed when the node restarts.</source>
          <target state="new">Note that if your pool uses a start task or your job uses a job preparation task, they will be executed when the node restarts.</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reimage the node<ept id="p1">**</ept><ph id="ph1"> (</ph><bpt id="p2">[</bpt>REST<ph id="ph2">][</ph>rest_reimage<ept id="p2">]</ept><ph id="ph3"> | </ph><bpt id="p3">[</bpt>.NET<ph id="ph4">][</ph>net_reimage<ept id="p3">]</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Reimage the node<ept id="p1">**</ept><ph id="ph1"> (</ph><bpt id="p2">[</bpt>REST<ph id="ph2">][</ph>rest_reimage<ept id="p2">]</ept><ph id="ph3"> | </ph><bpt id="p3">[</bpt>.NET<ph id="ph4">][</ph>net_reimage<ept id="p3">]</ept></target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This reinstalls the operating system on the node.</source>
          <target state="new">This reinstalls the operating system on the node.</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>As with rebooting a node, start tasks and job preparation tasks are rerun after the node has been reimaged.</source>
          <target state="new">As with rebooting a node, start tasks and job preparation tasks are rerun after the node has been reimaged.</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Remove the node from the pool<ept id="p1">**</ept><ph id="ph1"> (</ph><bpt id="p2">[</bpt>REST<ph id="ph2">][</ph>rest_remove<ept id="p2">]</ept><ph id="ph3"> | </ph><bpt id="p3">[</bpt>.NET<ph id="ph4">][</ph>net_remove<ept id="p3">]</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Remove the node from the pool<ept id="p1">**</ept><ph id="ph1"> (</ph><bpt id="p2">[</bpt>REST<ph id="ph2">][</ph>rest_remove<ept id="p2">]</ept><ph id="ph3"> | </ph><bpt id="p3">[</bpt>.NET<ph id="ph4">][</ph>net_remove<ept id="p3">]</ept></target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to completely remove the node from the pool.</source>
          <target state="new">Sometimes it is necessary to completely remove the node from the pool.</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Disable task scheduling on the node<ept id="p1">**</ept><ph id="ph1"> (</ph><bpt id="p2">[</bpt>REST<ph id="ph2">][</ph>rest_offline<ept id="p2">]</ept><ph id="ph3"> | </ph><bpt id="p3">[</bpt>.NET<ph id="ph4">][</ph>net_offline<ept id="p3">]</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Disable task scheduling on the node<ept id="p1">**</ept><ph id="ph1"> (</ph><bpt id="p2">[</bpt>REST<ph id="ph2">][</ph>rest_offline<ept id="p2">]</ept><ph id="ph3"> | </ph><bpt id="p3">[</bpt>.NET<ph id="ph4">][</ph>net_offline<ept id="p3">]</ept></target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>This effectively takes the node "offline" so that no further tasks will be assigned to it, but allows the node to remain running and in the pool.</source>
          <target state="new">This effectively takes the node "offline" so that no further tasks will be assigned to it, but allows the node to remain running and in the pool.</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This enables you to perform further investigation into the cause of the failures without losing the failed task's data, and without the node causing additional task failures.</source>
          <target state="new">This enables you to perform further investigation into the cause of the failures without losing the failed task's data, and without the node causing additional task failures.</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>For example, you can disable task scheduling on the node, then log in remotely to examine the node's event logs, or perform other troubleshooting.</source>
          <target state="new">For example, you can disable task scheduling on the node, then log in remotely to examine the node's event logs, or perform other troubleshooting.</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Once you've finished your investigation, you can then bring the node back online by enabling task scheduling (<bpt id="p1">[</bpt>REST<ph id="ph1">][</ph>rest_online<ept id="p1">]</ept>, <bpt id="p2">[</bpt>.NET<ph id="ph2">][</ph>net_online<ept id="p2">]</ept>), or perform one of the other actions discussed above.</source>
          <target state="new">Once you've finished your investigation, you can then bring the node back online by enabling task scheduling (<bpt id="p1">[</bpt>REST<ph id="ph1">][</ph>rest_online<ept id="p1">]</ept>, <bpt id="p2">[</bpt>.NET<ph id="ph2">][</ph>net_online<ept id="p2">]</ept>), or perform one of the other actions discussed above.</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>With each action above--reboot, reimage, remove, disable task scheduling--you are able to specify how tasks currently running on the node are handled when you perform the action.</source>
          <target state="new">With each action above--reboot, reimage, remove, disable task scheduling--you are able to specify how tasks currently running on the node are handled when you perform the action.</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>For example, when you disable task scheduling on a node with the Batch .NET client library, you can specify a <bpt id="p1">[</bpt>DisableComputeNodeSchedulingOption<ph id="ph1">][</ph>net_offline_option<ept id="p1">]</ept> enum value to specify whether to <bpt id="p2">**</bpt>Terminate<ept id="p2">**</ept> running tasks, <bpt id="p3">**</bpt>Requeue<ept id="p3">**</ept> them for scheduling on other nodes, or allow running tasks to complete before performing the action (<bpt id="p4">**</bpt>TaskCompletion<ept id="p4">**</ept></source>
          <target state="new">For example, when you disable task scheduling on a node with the Batch .NET client library, you can specify a <bpt id="p1">[</bpt>DisableComputeNodeSchedulingOption<ph id="ph1">][</ph>net_offline_option<ept id="p1">]</ept> enum value to specify whether to <bpt id="p2">**</bpt>Terminate<ept id="p2">**</ept> running tasks, <bpt id="p3">**</bpt>Requeue<ept id="p3">**</ept> them for scheduling on other nodes, or allow running tasks to complete before performing the action (<bpt id="p4">**</bpt>TaskCompletion<ept id="p4">**</ept></target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Create your first Batch application by following the steps in <bpt id="p1">[</bpt>Get started with the Azure Batch Library for .NET<ept id="p1">](batch-dotnet-get-started.md)</ept></source>
          <target state="new">Create your first Batch application by following the steps in <bpt id="p1">[</bpt>Get started with the Azure Batch Library for .NET<ept id="p1">](batch-dotnet-get-started.md)</ept></target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Download and build the <bpt id="p1">[</bpt>Batch Explorer<ph id="ph1">][</ph>batch_explorer_project<ept id="p1">]</ept> sample project for use while you develop your Batch solutions.</source>
          <target state="new">Download and build the <bpt id="p1">[</bpt>Batch Explorer<ph id="ph1">][</ph>batch_explorer_project<ept id="p1">]</ept> sample project for use while you develop your Batch solutions.</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Using the Batch Explorer, you can perform the following and more:</source>
          <target state="new">Using the Batch Explorer, you can perform the following and more:</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Monitor and manipulate pools, jobs, and tasks within your Batch account</source>
          <target state="new">Monitor and manipulate pools, jobs, and tasks within your Batch account</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Download <ph id="ph1">`stdout.txt`</ph>, <ph id="ph2">`stderr.txt`</ph>, and other files from nodes</source>
          <target state="new">Download <ph id="ph1">`stdout.txt`</ph>, <ph id="ph2">`stderr.txt`</ph>, and other files from nodes</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Create users on nodes and download RDP files for remote login</source>
          <target state="new">Create users on nodes and download RDP files for remote login</target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>about_cloud_services</source>
          <target state="new">about_cloud_services</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>azure_storage</source>
          <target state="new">azure_storage</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>batch_explorer_project</source>
          <target state="new">batch_explorer_project</target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>cloud_service_sizes</source>
          <target state="new">cloud_service_sizes</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>msmpi</source>
          <target state="new">msmpi</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>github_samples</source>
          <target state="new">github_samples</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>github_sample_taskdeps</source>
          <target state="new">github_sample_taskdeps</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>batch_net_api</source>
          <target state="new">batch_net_api</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>net_cloudjob_jobmanagertask</source>
          <target state="new">net_cloudjob_jobmanagertask</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>net_cloudjob_priority</source>
          <target state="new">net_cloudjob_priority</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>net_cloudpool_starttask</source>
          <target state="new">net_cloudpool_starttask</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>net_cloudtask_env</source>
          <target state="new">net_cloudtask_env</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>net_create_cert</source>
          <target state="new">net_create_cert</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>net_create_user</source>
          <target state="new">net_create_user</target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>net_getfile_node</source>
          <target state="new">net_getfile_node</target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>net_getfile_task</source>
          <target state="new">net_getfile_task</target>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>net_multiinstancesettings</source>
          <target state="new">net_multiinstancesettings</target>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>net_rdp</source>
          <target state="new">net_rdp</target>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>net_reboot</source>
          <target state="new">net_reboot</target>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>net_reimage</source>
          <target state="new">net_reimage</target>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>net_remove</source>
          <target state="new">net_remove</target>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>net_offline</source>
          <target state="new">net_offline</target>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>net_online</source>
          <target state="new">net_online</target>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>net_offline_option</source>
          <target state="new">net_offline_option</target>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>batch_rest_api</source>
          <target state="new">batch_rest_api</target>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>rest_add_job</source>
          <target state="new">rest_add_job</target>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>rest_add_pool</source>
          <target state="new">rest_add_pool</target>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>rest_add_cert</source>
          <target state="new">rest_add_cert</target>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>rest_add_task</source>
          <target state="new">rest_add_task</target>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>rest_create_user</source>
          <target state="new">rest_create_user</target>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>rest_get_task_info</source>
          <target state="new">rest_get_task_info</target>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>rest_multiinstance</source>
          <target state="new">rest_multiinstance</target>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>rest_multiinstancesettings</source>
          <target state="new">rest_multiinstancesettings</target>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>rest_update_job</source>
          <target state="new">rest_update_job</target>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>rest_rdp</source>
          <target state="new">rest_rdp</target>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>rest_reboot</source>
          <target state="new">rest_reboot</target>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>rest_reimage</source>
          <target state="new">rest_reimage</target>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>rest_remove</source>
          <target state="new">rest_remove</target>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>rest_offline</source>
          <target state="new">rest_offline</target>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>rest_online</source>
          <target state="new">rest_online</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>