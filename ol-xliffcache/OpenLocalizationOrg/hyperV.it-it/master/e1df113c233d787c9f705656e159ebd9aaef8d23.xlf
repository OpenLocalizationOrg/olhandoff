<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1df113c233d787c9f705656e159ebd9aaef8d23</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f8f5666" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Efficient list queries in Azure Batch | Microsoft Azure</source>
          <target state="new">Efficient list queries in Azure Batch | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Increase performance by reducing the amount of data that is returned when querying Azure Batch entities such as pools, jobs, tasks, and compute nodes.</source>
          <target state="new">Increase performance by reducing the amount of data that is returned when querying Azure Batch entities such as pools, jobs, tasks, and compute nodes.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Query the Azure Batch service efficiently</source>
          <target state="new">Query the Azure Batch service efficiently</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this article, you will learn how to increase your Azure Batch application's performance by reducing the amount of data that is returned when you query the Batch service using the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> library.</source>
          <target state="new">In this article, you will learn how to increase your Azure Batch application's performance by reducing the amount of data that is returned when you query the Batch service using the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> library.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure Batch offers big-compute capabilities--and in a production environment, entities like jobs, tasks, and compute nodes can number in the thousands.</source>
          <target state="new">Azure Batch offers big-compute capabilities--and in a production environment, entities like jobs, tasks, and compute nodes can number in the thousands.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Obtaining information on these items can therefore generate a large amount of data that must be transferred from the service to your application on each query.</source>
          <target state="new">Obtaining information on these items can therefore generate a large amount of data that must be transferred from the service to your application on each query.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>By limiting the number of items and the type of information that is returned for each, you can increase the speed of your queries, and therefore the performance of your application.</source>
          <target state="new">By limiting the number of items and the type of information that is returned for each, you can increase the speed of your queries, and therefore the performance of your application.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Nearly every application using Azure Batch will perform some type of monitoring or other operation that queries the Batch service, often at regular intervals.</source>
          <target state="new">Nearly every application using Azure Batch will perform some type of monitoring or other operation that queries the Batch service, often at regular intervals.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, to determine the capacity and status of a pool, you must query every node within the pool.</source>
          <target state="new">For example, to determine the capacity and status of a pool, you must query every node within the pool.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To determine whether any of a job's tasks are still queued, you must query every task within the job.</source>
          <target state="new">To determine whether any of a job's tasks are still queued, you must query every task within the job.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This article explains how to execute these types of queries in the most efficient way.</source>
          <target state="new">This article explains how to execute these types of queries in the most efficient way.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> API code snippet retrieves every task that is associated with a job, along with <bpt id="p2">*</bpt>all<ept id="p2">*</ept> of the tasks' properties:</source>
          <target state="new">This <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> API code snippet retrieves every task that is associated with a job, along with <bpt id="p2">*</bpt>all<ept id="p2">*</ept> of the tasks' properties:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A much more efficient list query can be performed, however.</source>
          <target state="new">A much more efficient list query can be performed, however.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You do this by supplying an <bpt id="p1">[</bpt>ODATADetailLevel<ph id="ph1">][</ph>odata<ept id="p1">]</ept> object to the <bpt id="p2">[</bpt>JobOperations.ListTasks<ph id="ph2">][</ph>net_list_tasks<ept id="p2">]</ept> method.</source>
          <target state="new">You do this by supplying an <bpt id="p1">[</bpt>ODATADetailLevel<ph id="ph1">][</ph>odata<ept id="p1">]</ept> object to the <bpt id="p2">[</bpt>JobOperations.ListTasks<ph id="ph2">][</ph>net_list_tasks<ept id="p2">]</ept> method.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This snippet returns only the ID, command line, and compute node information properties of completed tasks:</source>
          <target state="new">This snippet returns only the ID, command line, and compute node information properties of completed tasks:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the above example scenario, if there are thousands of tasks in the job, the results from the second query will typically be returned much quicker than the first.</source>
          <target state="new">In the above example scenario, if there are thousands of tasks in the job, the results from the second query will typically be returned much quicker than the first.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>More information about using ODATADetailLevel when you list items with the Batch .NET API is included below.</source>
          <target state="new">More information about using ODATADetailLevel when you list items with the Batch .NET API is included below.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>We highly recommend that you <bpt id="p1">*</bpt>always<ept id="p1">*</ept> supply an ODATADetailLevel object to your .NET API list calls to ensure maximum efficiency and performance of your application.</source>
          <target state="new">We highly recommend that you <bpt id="p1">*</bpt>always<ept id="p1">*</ept> supply an ODATADetailLevel object to your .NET API list calls to ensure maximum efficiency and performance of your application.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>By specifying a detail level, you can help to lower Batch service response times, improve network utilization, and minimize memory usage by client applications.</source>
          <target state="new">By specifying a detail level, you can help to lower Batch service response times, improve network utilization, and minimize memory usage by client applications.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Tools for efficient querying</source>
          <target state="new">Tools for efficient querying</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> and <bpt id="p2">[</bpt>Batch REST<ph id="ph2">][</ph>api_rest<ept id="p2">]</ept> APIs provide the ability to reduce both the number of items that are returned in a list, as well as the amount of information that is returned for each.</source>
          <target state="new">The <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> and <bpt id="p2">[</bpt>Batch REST<ph id="ph2">][</ph>api_rest<ept id="p2">]</ept> APIs provide the ability to reduce both the number of items that are returned in a list, as well as the amount of information that is returned for each.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You do so by specifying <bpt id="p1">**</bpt>filter<ept id="p1">**</ept>, <bpt id="p2">**</bpt>select<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>expand strings<ept id="p3">**</ept> when performing list queries.</source>
          <target state="new">You do so by specifying <bpt id="p1">**</bpt>filter<ept id="p1">**</ept>, <bpt id="p2">**</bpt>select<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>expand strings<ept id="p3">**</ept> when performing list queries.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="new">Filter</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The filter string is an expression that reduces the number of items that are returned.</source>
          <target state="new">The filter string is an expression that reduces the number of items that are returned.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, list only the running tasks for a job, or list only compute nodes that are ready to run tasks.</source>
          <target state="new">For example, list only the running tasks for a job, or list only compute nodes that are ready to run tasks.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The filter string consists of one or more expressions, with an expression that consists of a property name, operator, and value.</source>
          <target state="new">The filter string consists of one or more expressions, with an expression that consists of a property name, operator, and value.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The properties that can be specified are specific to each entity type that you query, as are the operators that are supported for each property.</source>
          <target state="new">The properties that can be specified are specific to each entity type that you query, as are the operators that are supported for each property.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Multiple expressions can be combined by using the logical operators <ph id="ph1">`and`</ph> and</source>
          <target state="new">Multiple expressions can be combined by using the logical operators <ph id="ph1">`and`</ph> and</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This example filter string lists only the running "render" tasks:</source>
          <target state="new">This example filter string lists only the running "render" tasks:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Select</source>
          <target state="new">Select</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The select string limits the property values that are returned for each item.</source>
          <target state="new">The select string limits the property values that are returned for each item.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You specify a list of property names, and only those property values are returned for the items in the query results.</source>
          <target state="new">You specify a list of property names, and only those property values are returned for the items in the query results.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The select string consists of a comma-separated list of property names.</source>
          <target state="new">The select string consists of a comma-separated list of property names.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can specify any of the properties for the entity type you are querying.</source>
          <target state="new">You can specify any of the properties for the entity type you are querying.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This example select string specifies that only three property values should be returned for each task:</source>
          <target state="new">This example select string specifies that only three property values should be returned for each task:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Expand</source>
          <target state="new">Expand</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The expand string reduces the number of API calls that are required to obtain certain information.</source>
          <target state="new">The expand string reduces the number of API calls that are required to obtain certain information.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When you use an expand string, more information about each item can be obtained with a single API call.</source>
          <target state="new">When you use an expand string, more information about each item can be obtained with a single API call.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Rather than first obtaining the list of entities, then requesting information for each item in the list, you use an expand string to obtain the same information in a single API call.</source>
          <target state="new">Rather than first obtaining the list of entities, then requesting information for each item in the list, you use an expand string to obtain the same information in a single API call.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Less API calls means better performance.</source>
          <target state="new">Less API calls means better performance.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Similar to the select string, the expand string controls whether certain data is included in list query results.</source>
          <target state="new">Similar to the select string, the expand string controls whether certain data is included in list query results.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The expand string is only supported when it is used in listing jobs, job schedules, tasks, and pools.</source>
          <target state="new">The expand string is only supported when it is used in listing jobs, job schedules, tasks, and pools.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Currently, it only supports statistics information.</source>
          <target state="new">Currently, it only supports statistics information.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When all properties are required and no select string is specified, the expand string <bpt id="p1">*</bpt>must<ept id="p1">*</ept> be used to get statistics information.</source>
          <target state="new">When all properties are required and no select string is specified, the expand string <bpt id="p1">*</bpt>must<ept id="p1">*</ept> be used to get statistics information.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If a select string is used to obtain a subset of properties, then <ph id="ph1">`stats`</ph> can be specified in the select string, and the expand string does not need to be specified.</source>
          <target state="new">If a select string is used to obtain a subset of properties, then <ph id="ph1">`stats`</ph> can be specified in the select string, and the expand string does not need to be specified.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This example expand string specifies that statistics information should be returned for each item in the list:</source>
          <target state="new">This example expand string specifies that statistics information should be returned for each item in the list:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When constructing any of the three query string types (filter, select, and expand), you must ensure that the property names and case match that of their REST API element counterparts.</source>
          <target state="new">When constructing any of the three query string types (filter, select, and expand), you must ensure that the property names and case match that of their REST API element counterparts.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, when working with the .NET <bpt id="p1">[</bpt>CloudTask<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask)</ept> class, you must specify <bpt id="p2">**</bpt>state<ept id="p2">**</ept> instead of <bpt id="p3">**</bpt>State<ept id="p3">**</ept>, even though the .NET property is <bpt id="p4">[</bpt>CloudTask.State<ept id="p4">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.state)</ept>.</source>
          <target state="new">For example, when working with the .NET <bpt id="p1">[</bpt>CloudTask<ept id="p1">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask)</ept> class, you must specify <bpt id="p2">**</bpt>state<ept id="p2">**</ept> instead of <bpt id="p3">**</bpt>State<ept id="p3">**</ept>, even though the .NET property is <bpt id="p4">[</bpt>CloudTask.State<ept id="p4">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.state)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See the tables below for property mappings between the .NET and REST APIs.</source>
          <target state="new">See the tables below for property mappings between the .NET and REST APIs.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Filter, select, and expand string specifications</source>
          <target state="new">Filter, select, and expand string specifications</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Properties specified in filter, select, and expand strings equate to the property names as they appear in the <bpt id="p1">[</bpt>Batch REST<ph id="ph1">][</ph>api_rest<ept id="p1">]</ept> API--even when you use the <bpt id="p2">[</bpt>Batch .NET<ph id="ph2">][</ph>api_net<ept id="p2">]</ept> library.</source>
          <target state="new">Properties specified in filter, select, and expand strings equate to the property names as they appear in the <bpt id="p1">[</bpt>Batch REST<ph id="ph1">][</ph>api_rest<ept id="p1">]</ept> API--even when you use the <bpt id="p2">[</bpt>Batch .NET<ph id="ph2">][</ph>api_net<ept id="p2">]</ept> library.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>All property names are case sensitive, but property values are case insensitive.</source>
          <target state="new">All property names are case sensitive, but property values are case insensitive.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Date/time strings can be one of two formats, and must be preceded with</source>
          <target state="new">Date/time strings can be one of two formats, and must be preceded with</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>W3C-DTF format example:</source>
          <target state="new">W3C-DTF format example:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RFC 1123 format example:</source>
          <target state="new">RFC 1123 format example:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Boolean strings are either <ph id="ph1">`true`</ph> or</source>
          <target state="new">Boolean strings are either <ph id="ph1">`true`</ph> or</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If an invalid property or operator is specified, a <ph id="ph1">`400 (Bad Request)`</ph> error will result.</source>
          <target state="new">If an invalid property or operator is specified, a <ph id="ph1">`400 (Bad Request)`</ph> error will result.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Efficient querying in Batch .NET</source>
          <target state="new">Efficient querying in Batch .NET</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Within the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> API, the <bpt id="p2">[</bpt>ODATADetailLevel<ph id="ph2">][</ph>odata<ept id="p2">]</ept> class is used for supplying filter, select, and expand strings to list operations.</source>
          <target state="new">Within the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> API, the <bpt id="p2">[</bpt>ODATADetailLevel<ph id="ph2">][</ph>odata<ept id="p2">]</ept> class is used for supplying filter, select, and expand strings to list operations.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The ODataDetailLevel class has three public string properties that can be specified in the constructor, or set directly on the object.</source>
          <target state="new">The ODataDetailLevel class has three public string properties that can be specified in the constructor, or set directly on the object.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You then pass the ODataDetailLevel object as a parameter to the various list operations such as <bpt id="p1">[</bpt>ListPools<ph id="ph1">][</ph>net_list_pools<ept id="p1">]</ept>, <bpt id="p2">[</bpt>ListJobs<ph id="ph2">][</ph>net_list_jobs<ept id="p2">]</ept>, and <bpt id="p3">[</bpt>ListTasks<ph id="ph3">][</ph>net_list_tasks<ept id="p3">]</ept></source>
          <target state="new">You then pass the ODataDetailLevel object as a parameter to the various list operations such as <bpt id="p1">[</bpt>ListPools<ph id="ph1">][</ph>net_list_pools<ept id="p1">]</ept>, <bpt id="p2">[</bpt>ListJobs<ph id="ph2">][</ph>net_list_jobs<ept id="p2">]</ept>, and <bpt id="p3">[</bpt>ListTasks<ph id="ph3">][</ph>net_list_tasks<ept id="p3">]</ept></target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ODATADetailLevel.FilterClause<ph id="ph1">][</ph>odata_filter<ept id="p1">]</ept>: Limit the number of items that are returned.</source>
          <target state="new"><bpt id="p1">[</bpt>ODATADetailLevel.FilterClause<ph id="ph1">][</ph>odata_filter<ept id="p1">]</ept>: Limit the number of items that are returned.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ODATADetailLevel.SelectClause<ph id="ph1">][</ph>odata_select<ept id="p1">]</ept>: Specify which property values are returned with each item.</source>
          <target state="new"><bpt id="p1">[</bpt>ODATADetailLevel.SelectClause<ph id="ph1">][</ph>odata_select<ept id="p1">]</ept>: Specify which property values are returned with each item.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ODATADetailLevel.ExpandClause<ph id="ph1">][</ph>odata_expand<ept id="p1">]</ept>: Retrieve data for all items in a single API call instead of separate calls for each item.</source>
          <target state="new"><bpt id="p1">[</bpt>ODATADetailLevel.ExpandClause<ph id="ph1">][</ph>odata_expand<ept id="p1">]</ept>: Retrieve data for all items in a single API call instead of separate calls for each item.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following code snippet uses the Batch .NET API to efficiently query the Batch service for the statistics of a specific set of pools.</source>
          <target state="new">The following code snippet uses the Batch .NET API to efficiently query the Batch service for the statistics of a specific set of pools.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In this scenario, the Batch user has both test and production pools.</source>
          <target state="new">In this scenario, the Batch user has both test and production pools.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The test pool IDs are prefixed with "test", and the production pool IDs are prefixed with "prod".</source>
          <target state="new">The test pool IDs are prefixed with "test", and the production pool IDs are prefixed with "prod".</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the snippet, <bpt id="p1">*</bpt>myBatchClient<ept id="p1">*</ept> is a properly initialized instance of the <bpt id="p2">[</bpt>BatchClient<ept id="p2">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient)</ept> class.</source>
          <target state="new">In the snippet, <bpt id="p1">*</bpt>myBatchClient<ept id="p1">*</ept> is a properly initialized instance of the <bpt id="p2">[</bpt>BatchClient<ept id="p2">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient)</ept> class.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An instance of <bpt id="p1">[</bpt>ODATADetailLevel<ph id="ph1">][</ph>odata<ept id="p1">]</ept> that is configured with Select and Expand clauses can also be passed to appropriate Get methods, such as <bpt id="p2">[</bpt>PoolOperations.GetPool<ept id="p2">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.getpool.aspx)</ept>, to limit the amount of data that is returned.</source>
          <target state="new">An instance of <bpt id="p1">[</bpt>ODATADetailLevel<ph id="ph1">][</ph>odata<ept id="p1">]</ept> that is configured with Select and Expand clauses can also be passed to appropriate Get methods, such as <bpt id="p2">[</bpt>PoolOperations.GetPool<ept id="p2">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.getpool.aspx)</ept>, to limit the amount of data that is returned.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Batch REST to .NET API mappings</source>
          <target state="new">Batch REST to .NET API mappings</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Property names in filter, select, and expand strings <bpt id="p1">*</bpt>must<ept id="p1">*</ept> reflect their REST API counterparts, both in name and case.</source>
          <target state="new">Property names in filter, select, and expand strings <bpt id="p1">*</bpt>must<ept id="p1">*</ept> reflect their REST API counterparts, both in name and case.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The tables below provide mappings between the .NET and REST API counterparts.</source>
          <target state="new">The tables below provide mappings between the .NET and REST API counterparts.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Mappings for filter strings</source>
          <target state="new">Mappings for filter strings</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET list methods<ept id="p1">**</ept>--Each of the .NET API methods in this column accepts an <bpt id="p2">[</bpt>ODATADetailLevel<ph id="ph1">][</ph>odata<ept id="p2">]</ept> object as a parameter.</source>
          <target state="new"><bpt id="p1">**</bpt>.NET list methods<ept id="p1">**</ept>--Each of the .NET API methods in this column accepts an <bpt id="p2">[</bpt>ODATADetailLevel<ph id="ph1">][</ph>odata<ept id="p2">]</ept> object as a parameter.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>REST list requests<ept id="p1">**</ept>--Each REST API page linked to in this column contains a table that specifies the properties and operations that are allowed in <bpt id="p2">*</bpt>filter<ept id="p2">*</ept> strings.</source>
          <target state="new"><bpt id="p1">**</bpt>REST list requests<ept id="p1">**</ept>--Each REST API page linked to in this column contains a table that specifies the properties and operations that are allowed in <bpt id="p2">*</bpt>filter<ept id="p2">*</ept> strings.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You will use these property names and operations when you construct an <bpt id="p1">[</bpt>ODATADetailLevel.FilterClause<ph id="ph1">][</ph>odata_filter<ept id="p1">]</ept> string.</source>
          <target state="new">You will use these property names and operations when you construct an <bpt id="p1">[</bpt>ODATADetailLevel.FilterClause<ph id="ph1">][</ph>odata_filter<ept id="p1">]</ept> string.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>.NET list methods</source>
          <target state="new">.NET list methods</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>REST list requests</source>
          <target state="new">REST list requests</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CertificateOperations.ListCertificates<ph id="ph1">][</ph>net_list_certs</source>
          <target state="new">CertificateOperations.ListCertificates<ph id="ph1">][</ph>net_list_certs</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>List the certificates in an account<ph id="ph1">][</ph>rest_list_certs</source>
          <target state="new">List the certificates in an account<ph id="ph1">][</ph>rest_list_certs</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CloudTask.ListNodeFiles<ph id="ph1">][</ph>net_list_task_files</source>
          <target state="new">CloudTask.ListNodeFiles<ph id="ph1">][</ph>net_list_task_files</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>List the files associated with a task<ph id="ph1">][</ph>rest_list_task_files</source>
          <target state="new">List the files associated with a task<ph id="ph1">][</ph>rest_list_task_files</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>JobOperations.ListJobPreparationAndReleaseTaskStatus<ph id="ph1">][</ph>net_list_jobprep_status</source>
          <target state="new">JobOperations.ListJobPreparationAndReleaseTaskStatus<ph id="ph1">][</ph>net_list_jobprep_status</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>List the status of the job preparation and job release tasks for a job<ph id="ph1">][</ph>rest_list_jobprep_status</source>
          <target state="new">List the status of the job preparation and job release tasks for a job<ph id="ph1">][</ph>rest_list_jobprep_status</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>JobOperations.ListJobs<ph id="ph1">][</ph>net_list_jobs</source>
          <target state="new">JobOperations.ListJobs<ph id="ph1">][</ph>net_list_jobs</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>List the jobs in an account<ph id="ph1">][</ph>rest_list_jobs</source>
          <target state="new">List the jobs in an account<ph id="ph1">][</ph>rest_list_jobs</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>JobOperations.ListNodeFiles<ph id="ph1">][</ph>net_list_nodefiles</source>
          <target state="new">JobOperations.ListNodeFiles<ph id="ph1">][</ph>net_list_nodefiles</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>List the files on a node<ph id="ph1">][</ph>rest_list_nodefiles</source>
          <target state="new">List the files on a node<ph id="ph1">][</ph>rest_list_nodefiles</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>JobOperations.ListTasks<ph id="ph1">][</ph>net_list_tasks</source>
          <target state="new">JobOperations.ListTasks<ph id="ph1">][</ph>net_list_tasks</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>List the tasks associated with a job<ph id="ph1">][</ph>rest_list_tasks</source>
          <target state="new">List the tasks associated with a job<ph id="ph1">][</ph>rest_list_tasks</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>JobScheduleOperations.ListJobSchedules<ph id="ph1">][</ph>net_list_job_schedules</source>
          <target state="new">JobScheduleOperations.ListJobSchedules<ph id="ph1">][</ph>net_list_job_schedules</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>List the job schedules in an account<ph id="ph1">][</ph>rest_list_job_schedules</source>
          <target state="new">List the job schedules in an account<ph id="ph1">][</ph>rest_list_job_schedules</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>JobScheduleOperations.ListJobs<ph id="ph1">][</ph>net_list_schedule_jobs</source>
          <target state="new">JobScheduleOperations.ListJobs<ph id="ph1">][</ph>net_list_schedule_jobs</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>List the jobs associated with a job schedule<ph id="ph1">][</ph>rest_list_schedule_jobs</source>
          <target state="new">List the jobs associated with a job schedule<ph id="ph1">][</ph>rest_list_schedule_jobs</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>PoolOperations.ListComputeNodes<ph id="ph1">][</ph>net_list_compute_nodes</source>
          <target state="new">PoolOperations.ListComputeNodes<ph id="ph1">][</ph>net_list_compute_nodes</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>List the compute nodes in a pool<ph id="ph1">][</ph>rest_list_compute_nodes</source>
          <target state="new">List the compute nodes in a pool<ph id="ph1">][</ph>rest_list_compute_nodes</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>PoolOperations.ListPools<ph id="ph1">][</ph>net_list_pools</source>
          <target state="new">PoolOperations.ListPools<ph id="ph1">][</ph>net_list_pools</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>List the pools in an account<ph id="ph1">][</ph>rest_list_pools</source>
          <target state="new">List the pools in an account<ph id="ph1">][</ph>rest_list_pools</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Mappings for select strings</source>
          <target state="new">Mappings for select strings</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Batch .NET types<ept id="p1">**</ept>--Batch .NET API types.</source>
          <target state="new"><bpt id="p1">**</bpt>Batch .NET types<ept id="p1">**</ept>--Batch .NET API types.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>REST API entities<ept id="p1">**</ept>--Each page in this column contains one or more tables that list the REST API property names for the type.</source>
          <target state="new"><bpt id="p1">**</bpt>REST API entities<ept id="p1">**</ept>--Each page in this column contains one or more tables that list the REST API property names for the type.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>These property names are used when you construct <bpt id="p1">*</bpt>select<ept id="p1">*</ept> strings.</source>
          <target state="new">These property names are used when you construct <bpt id="p1">*</bpt>select<ept id="p1">*</ept> strings.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You will use these same property names when you construct an <bpt id="p1">[</bpt>ODATADetailLevel.SelectClause<ph id="ph1">][</ph>odata_select<ept id="p1">]</ept> string.</source>
          <target state="new">You will use these same property names when you construct an <bpt id="p1">[</bpt>ODATADetailLevel.SelectClause<ph id="ph1">][</ph>odata_select<ept id="p1">]</ept> string.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Batch .NET types</source>
          <target state="new">Batch .NET types</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>REST API entities</source>
          <target state="new">REST API entities</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Certificate<ph id="ph1">][</ph>net_cert</source>
          <target state="new">Certificate<ph id="ph1">][</ph>net_cert</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Get information about a certificate<ph id="ph1">][</ph>rest_get_cert</source>
          <target state="new">Get information about a certificate<ph id="ph1">][</ph>rest_get_cert</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>CloudJob<ph id="ph1">][</ph>net_job</source>
          <target state="new">CloudJob<ph id="ph1">][</ph>net_job</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Get information about a job<ph id="ph1">][</ph>rest_get_job</source>
          <target state="new">Get information about a job<ph id="ph1">][</ph>rest_get_job</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CloudJobSchedule<ph id="ph1">][</ph>net_schedule</source>
          <target state="new">CloudJobSchedule<ph id="ph1">][</ph>net_schedule</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Get information about a job schedule<ph id="ph1">][</ph>rest_get_schedule</source>
          <target state="new">Get information about a job schedule<ph id="ph1">][</ph>rest_get_schedule</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>ComputeNode<ph id="ph1">][</ph>net_node</source>
          <target state="new">ComputeNode<ph id="ph1">][</ph>net_node</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Get information about a node<ph id="ph1">][</ph>rest_get_node</source>
          <target state="new">Get information about a node<ph id="ph1">][</ph>rest_get_node</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>CloudPool<ph id="ph1">][</ph>net_pool</source>
          <target state="new">CloudPool<ph id="ph1">][</ph>net_pool</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Get information about a pool<ph id="ph1">][</ph>rest_get_pool</source>
          <target state="new">Get information about a pool<ph id="ph1">][</ph>rest_get_pool</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>CloudTask<ph id="ph1">][</ph>net_task</source>
          <target state="new">CloudTask<ph id="ph1">][</ph>net_task</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Get information about a task<ph id="ph1">][</ph>rest_get_task</source>
          <target state="new">Get information about a task<ph id="ph1">][</ph>rest_get_task</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Example: constructing a filter string</source>
          <target state="new">Example: constructing a filter string</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When you construct a filter string for <bpt id="p1">[</bpt>ODATADetailLevel.FilterClause<ph id="ph1">][</ph>odata_filter<ept id="p1">]</ept>, consult the table above under "Mappings for filter strings" to find the REST API documentation page that corresponds to the list operation that you wish to perform.</source>
          <target state="new">When you construct a filter string for <bpt id="p1">[</bpt>ODATADetailLevel.FilterClause<ph id="ph1">][</ph>odata_filter<ept id="p1">]</ept>, consult the table above under "Mappings for filter strings" to find the REST API documentation page that corresponds to the list operation that you wish to perform.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You will find the filterable properties and their supported operators in the first multirow table on that page.</source>
          <target state="new">You will find the filterable properties and their supported operators in the first multirow table on that page.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If you wish to retrieve all tasks whose exit code was nonzero, for example, this row on <bpt id="p1">[</bpt>List the tasks associated with a job<ph id="ph1">][</ph>rest_list_tasks<ept id="p1">]</ept> specifies the applicable property string and allowable operators:</source>
          <target state="new">If you wish to retrieve all tasks whose exit code was nonzero, for example, this row on <bpt id="p1">[</bpt>List the tasks associated with a job<ph id="ph1">][</ph>rest_list_tasks<ept id="p1">]</ept> specifies the applicable property string and allowable operators:</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Operations allowed</source>
          <target state="new">Operations allowed</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Thus, the filter string for listing all tasks with a nonzero exit code would be:</source>
          <target state="new">Thus, the filter string for listing all tasks with a nonzero exit code would be:</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Example: constructing a select string</source>
          <target state="new">Example: constructing a select string</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To construct <bpt id="p1">[</bpt>ODATADetailLevel.SelectClause<ph id="ph1">][</ph>odata_select<ept id="p1">]</ept>, consult the table above under "Mappings for select strings" and navigate to the REST API page that corresponds to the type of entity that you are listing.</source>
          <target state="new">To construct <bpt id="p1">[</bpt>ODATADetailLevel.SelectClause<ph id="ph1">][</ph>odata_select<ept id="p1">]</ept>, consult the table above under "Mappings for select strings" and navigate to the REST API page that corresponds to the type of entity that you are listing.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>You will find the selectable properties and their supported operators in the first multirow table on that page.</source>
          <target state="new">You will find the selectable properties and their supported operators in the first multirow table on that page.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If you wish to retrieve only the ID and command line for each task in a list, for example, you will find these rows in the applicable table on <bpt id="p1">[</bpt>Get information about a task<ph id="ph1">][</ph>rest_get_task<ept id="p1">]</ept>:</source>
          <target state="new">If you wish to retrieve only the ID and command line for each task in a list, for example, you will find these rows in the applicable table on <bpt id="p1">[</bpt>Get information about a task<ph id="ph1">][</ph>rest_get_task<ept id="p1">]</ept>:</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="new">Notes</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The select string for including only the ID and command line with each listed task would then be:</source>
          <target state="new">The select string for including only the ID and command line with each listed task would then be:</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Check out the <bpt id="p1">[</bpt>EfficientListQueries<ph id="ph1">][</ph>efficient_query_sample<ept id="p1">]</ept> sample project on GitHub to see how efficient list querying can affect performance in an application.</source>
          <target state="new">Check out the <bpt id="p1">[</bpt>EfficientListQueries<ph id="ph1">][</ph>efficient_query_sample<ept id="p1">]</ept> sample project on GitHub to see how efficient list querying can affect performance in an application.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This C# console application creates and adds a large number of tasks to a job.</source>
          <target state="new">This C# console application creates and adds a large number of tasks to a job.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Then, it makes multiple calls to the <bpt id="p1">[</bpt>JobOperations.ListTasks<ph id="ph1">][</ph>net_list_tasks<ept id="p1">]</ept> method and passes <bpt id="p2">[</bpt>ODATADetailLevel<ph id="ph2">][</ph>odata<ept id="p2">]</ept> objects that are configured with different property values to vary the amount of data to be returned.</source>
          <target state="new">Then, it makes multiple calls to the <bpt id="p1">[</bpt>JobOperations.ListTasks<ph id="ph1">][</ph>net_list_tasks<ept id="p1">]</ept> method and passes <bpt id="p2">[</bpt>ODATADetailLevel<ph id="ph2">][</ph>odata<ept id="p2">]</ept> objects that are configured with different property values to vary the amount of data to be returned.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>It produces output similar to the following:</source>
          <target state="new">It produces output similar to the following:</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>As is shown in the elapsed time information, you can greatly lower query response times by limiting the properties and the number of items that are returned.</source>
          <target state="new">As is shown in the elapsed time information, you can greatly lower query response times by limiting the properties and the number of items that are returned.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>You can find this and other sample projects in the <bpt id="p1">[</bpt>azure-batch-samples<ph id="ph1">][</ph>github_samples<ept id="p1">]</ept> repository on GitHub.</source>
          <target state="new">You can find this and other sample projects in the <bpt id="p1">[</bpt>azure-batch-samples<ph id="ph1">][</ph>github_samples<ept id="p1">]</ept> repository on GitHub.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>api_net</source>
          <target state="new">api_net</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>api_net_listjobs</source>
          <target state="new">api_net_listjobs</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>api_rest</source>
          <target state="new">api_rest</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>efficient_query_sample</source>
          <target state="new">efficient_query_sample</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>github_samples</source>
          <target state="new">github_samples</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>odata</source>
          <target state="new">odata</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>odata_ctor</source>
          <target state="new">odata_ctor</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>odata_expand</source>
          <target state="new">odata_expand</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>odata_filter</source>
          <target state="new">odata_filter</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>odata_select</source>
          <target state="new">odata_select</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>net_list_certs</source>
          <target state="new">net_list_certs</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>net_list_compute_nodes</source>
          <target state="new">net_list_compute_nodes</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>net_list_job_schedules</source>
          <target state="new">net_list_job_schedules</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>net_list_jobprep_status</source>
          <target state="new">net_list_jobprep_status</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>net_list_jobs</source>
          <target state="new">net_list_jobs</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>net_list_nodefiles</source>
          <target state="new">net_list_nodefiles</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>net_list_pools</source>
          <target state="new">net_list_pools</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>net_list_schedule_jobs</source>
          <target state="new">net_list_schedule_jobs</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>net_list_task_files</source>
          <target state="new">net_list_task_files</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>net_list_tasks</source>
          <target state="new">net_list_tasks</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>rest_list_certs</source>
          <target state="new">rest_list_certs</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>rest_list_compute_nodes</source>
          <target state="new">rest_list_compute_nodes</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>rest_list_job_schedules</source>
          <target state="new">rest_list_job_schedules</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>rest_list_jobprep_status</source>
          <target state="new">rest_list_jobprep_status</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>rest_list_jobs</source>
          <target state="new">rest_list_jobs</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>rest_list_nodefiles</source>
          <target state="new">rest_list_nodefiles</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>rest_list_pools</source>
          <target state="new">rest_list_pools</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>rest_list_schedule_jobs</source>
          <target state="new">rest_list_schedule_jobs</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>rest_list_task_files</source>
          <target state="new">rest_list_task_files</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>rest_list_tasks</source>
          <target state="new">rest_list_tasks</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>rest_get_cert</source>
          <target state="new">rest_get_cert</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>rest_get_job</source>
          <target state="new">rest_get_job</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>rest_get_node</source>
          <target state="new">rest_get_node</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>rest_get_pool</source>
          <target state="new">rest_get_pool</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>rest_get_schedule</source>
          <target state="new">rest_get_schedule</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>rest_get_task</source>
          <target state="new">rest_get_task</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>net_cert</source>
          <target state="new">net_cert</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>net_job</source>
          <target state="new">net_job</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>net_node</source>
          <target state="new">net_node</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>net_pool</source>
          <target state="new">net_pool</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>net_schedule</source>
          <target state="new">net_schedule</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>net_task</source>
          <target state="new">net_task</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>