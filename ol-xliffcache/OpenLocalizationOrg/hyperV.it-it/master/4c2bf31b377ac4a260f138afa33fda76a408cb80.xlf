<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c2bf31b377ac4a260f138afa33fda76a408cb80</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f8f5666" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Maximize Batch node use with parallel tasks | Microsoft Azure</source>
          <target state="new">Maximize Batch node use with parallel tasks | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Increase efficiency and lower costs by using fewer compute nodes while running concurrent tasks on each node in an Azure Batch pool</source>
          <target state="new">Increase efficiency and lower costs by using fewer compute nodes while running concurrent tasks on each node in an Azure Batch pool</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Maximize Azure Batch compute resource usage with concurrent node tasks</source>
          <target state="new">Maximize Azure Batch compute resource usage with concurrent node tasks</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this article, you will learn how to run more than one task simultaneously on each compute node within your Azure Batch pool.</source>
          <target state="new">In this article, you will learn how to run more than one task simultaneously on each compute node within your Azure Batch pool.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By enabling concurrent task execution on a pool's compute nodes, you can maximize resource usage on a smaller number of nodes within the pool.</source>
          <target state="new">By enabling concurrent task execution on a pool's compute nodes, you can maximize resource usage on a smaller number of nodes within the pool.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For some workloads, this can save you both time and money.</source>
          <target state="new">For some workloads, this can save you both time and money.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>While some scenarios benefit from all of a node's resources being available for allocation to a single task, a number of situations benefit from allowing multiple tasks to share those resources:</source>
          <target state="new">While some scenarios benefit from all of a node's resources being available for allocation to a single task, a number of situations benefit from allowing multiple tasks to share those resources:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Minimizing data transfer<ept id="p1">**</ept> when tasks are able to share data.</source>
          <target state="new"><bpt id="p1">**</bpt>Minimizing data transfer<ept id="p1">**</ept> when tasks are able to share data.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this scenario, you can dramatically reduce data transfer charges by copying shared data to a smaller number of nodes and executing tasks in parallel on each node.</source>
          <target state="new">In this scenario, you can dramatically reduce data transfer charges by copying shared data to a smaller number of nodes and executing tasks in parallel on each node.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This especially applies if the data to be copied to each node must be transferred between geographic regions.</source>
          <target state="new">This especially applies if the data to be copied to each node must be transferred between geographic regions.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Maximizing memory usage<ept id="p1">**</ept> when tasks require a large amount of memory, but only during short periods of time, and at variable times during execution.</source>
          <target state="new"><bpt id="p1">**</bpt>Maximizing memory usage<ept id="p1">**</ept> when tasks require a large amount of memory, but only during short periods of time, and at variable times during execution.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can employ fewer, but larger, compute nodes with more memory to efficiently handle such spikes.</source>
          <target state="new">You can employ fewer, but larger, compute nodes with more memory to efficiently handle such spikes.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These nodes would have multiple tasks running in parallel on each node, but each task would take advantage of the nodes' plentiful memory at different times.</source>
          <target state="new">These nodes would have multiple tasks running in parallel on each node, but each task would take advantage of the nodes' plentiful memory at different times.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Mitigating node number limits<ept id="p1">**</ept> when inter-node communication is required within a pool.</source>
          <target state="new"><bpt id="p1">**</bpt>Mitigating node number limits<ept id="p1">**</ept> when inter-node communication is required within a pool.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Currently, pools configured for inter-node communication are limited to 50 compute nodes.</source>
          <target state="new">Currently, pools configured for inter-node communication are limited to 50 compute nodes.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Therefore, a greater number of tasks can be executed simultaneously if each node in such a pool is able to execute tasks in parallel.</source>
          <target state="new">Therefore, a greater number of tasks can be executed simultaneously if each node in such a pool is able to execute tasks in parallel.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Replicating an on-premises compute cluster<ept id="p1">**</ept>, such as when you first move a compute environment to Azure.</source>
          <target state="new"><bpt id="p1">**</bpt>Replicating an on-premises compute cluster<ept id="p1">**</ept>, such as when you first move a compute environment to Azure.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can increase the maximum number of node tasks to more closely mirror an existing physical configuration if that configuration currently executes multiple tasks per compute node.</source>
          <target state="new">You can increase the maximum number of node tasks to more closely mirror an existing physical configuration if that configuration currently executes multiple tasks per compute node.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example scenario</source>
          <target state="new">Example scenario</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Here's an example that illustrates the benefits of parallel task execution.</source>
          <target state="new">Here's an example that illustrates the benefits of parallel task execution.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Let's say that your task application has CPU and memory requirements such that a Standard\_D1 node size is suitable.</source>
          <target state="new">Let's say that your task application has CPU and memory requirements such that a Standard\_D1 node size is suitable.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>But in order to execute the job in the required time, 1,000 such nodes are needed.</source>
          <target state="new">But in order to execute the job in the required time, 1,000 such nodes are needed.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Instead of using Standard\_D1 nodes which have 1 CPU core, you could employ Standard\_D14 nodes that have 16 cores each, and enable parallel task execution.</source>
          <target state="new">Instead of using Standard\_D1 nodes which have 1 CPU core, you could employ Standard\_D14 nodes that have 16 cores each, and enable parallel task execution.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this case, <bpt id="p1">*</bpt>16 times fewer nodes<ept id="p1">*</ept> could therefore be used--instead of 1,000 nodes, only 63 would be required.</source>
          <target state="new">In this case, <bpt id="p1">*</bpt>16 times fewer nodes<ept id="p1">*</ept> could therefore be used--instead of 1,000 nodes, only 63 would be required.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This will greatly improve job execution time and efficiency if large application files or reference data are required for each node.</source>
          <target state="new">This will greatly improve job execution time and efficiency if large application files or reference data are required for each node.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Enable parallel task execution</source>
          <target state="new">Enable parallel task execution</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You configure the compute nodes in your Batch solution for parallel task execution at the pool level.</source>
          <target state="new">You configure the compute nodes in your Batch solution for parallel task execution at the pool level.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When using the Batch .NET library, you set the <bpt id="p1">[</bpt>CloudPool.MaxTasksPerComputeNode<ph id="ph1">][</ph>maxtasks_net<ept id="p1">]</ept> property when you create a pool.</source>
          <target state="new">When using the Batch .NET library, you set the <bpt id="p1">[</bpt>CloudPool.MaxTasksPerComputeNode<ph id="ph1">][</ph>maxtasks_net<ept id="p1">]</ept> property when you create a pool.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you are using the Batch REST API, you set the <bpt id="p1">[</bpt>maxTasksPerNode<ph id="ph1">][</ph>rest_addpool<ept id="p1">]</ept> element in the request body during pool creation.</source>
          <target state="new">If you are using the Batch REST API, you set the <bpt id="p1">[</bpt>maxTasksPerNode<ph id="ph1">][</ph>rest_addpool<ept id="p1">]</ept> element in the request body during pool creation.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Azure Batch allows you to set maximum tasks per node up to four times (4x) the number of node cores.</source>
          <target state="new">Azure Batch allows you to set maximum tasks per node up to four times (4x) the number of node cores.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if the pool is configured with nodes of size "Large" (four cores), then <ph id="ph1">`maxTasksPerNode`</ph> may be set to 16.</source>
          <target state="new">For example, if the pool is configured with nodes of size "Large" (four cores), then <ph id="ph1">`maxTasksPerNode`</ph> may be set to 16.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For details on the number of cores for each of the node sizes, see <bpt id="p1">[</bpt>Sizes for Cloud Services<ept id="p1">](./../cloud-services/cloud-services-sizes-specs.md)</ept>.</source>
          <target state="new">For details on the number of cores for each of the node sizes, see <bpt id="p1">[</bpt>Sizes for Cloud Services<ept id="p1">](./../cloud-services/cloud-services-sizes-specs.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information on service limits, see <bpt id="p1">[</bpt>Quotas and limits for the Azure Batch service<ept id="p1">](batch-quota-limit.md)</ept></source>
          <target state="new">For more information on service limits, see <bpt id="p1">[</bpt>Quotas and limits for the Azure Batch service<ept id="p1">](batch-quota-limit.md)</ept></target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Be sure to take into account the <ph id="ph1">`maxTasksPerNode`</ph> value when you construct an <bpt id="p1">[</bpt>autoscale formula<ph id="ph2">][</ph>enable_autoscaling<ept id="p1">]</ept> for your pool.</source>
          <target state="new">Be sure to take into account the <ph id="ph1">`maxTasksPerNode`</ph> value when you construct an <bpt id="p1">[</bpt>autoscale formula<ph id="ph2">][</ph>enable_autoscaling<ept id="p1">]</ept> for your pool.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, a formula that evaluates <ph id="ph1">`$RunningTasks`</ph> could be dramatically affected by an increase in tasks per node.</source>
          <target state="new">For example, a formula that evaluates <ph id="ph1">`$RunningTasks`</ph> could be dramatically affected by an increase in tasks per node.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Automatically scale compute nodes in an Azure Batch pool<ept id="p1">](batch-automatic-scaling.md)</ept> for more information.</source>
          <target state="new">See <bpt id="p1">[</bpt>Automatically scale compute nodes in an Azure Batch pool<ept id="p1">](batch-automatic-scaling.md)</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Distribution of tasks</source>
          <target state="new">Distribution of tasks</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the compute nodes within a pool are able to execute tasks concurrently, it is important to specify how you want your tasks distributed across the nodes within the pool.</source>
          <target state="new">When the compute nodes within a pool are able to execute tasks concurrently, it is important to specify how you want your tasks distributed across the nodes within the pool.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By using the <bpt id="p1">[</bpt>CloudPool.TaskSchedulingPolicy<ph id="ph1">][</ph>task_schedule<ept id="p1">]</ept> property, you can specify that tasks should be assigned evenly across all nodes in the pool ("spreading").</source>
          <target state="new">By using the <bpt id="p1">[</bpt>CloudPool.TaskSchedulingPolicy<ph id="ph1">][</ph>task_schedule<ept id="p1">]</ept> property, you can specify that tasks should be assigned evenly across all nodes in the pool ("spreading").</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Or you can specify that as many tasks as possible should be assigned to each node before tasks are assigned to another node in the pool ("packing").</source>
          <target state="new">Or you can specify that as many tasks as possible should be assigned to each node before tasks are assigned to another node in the pool ("packing").</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>As an example of how this feature is valuable, consider the pool of Standard\_D14 nodes (in the example above) that is configured with a <bpt id="p1">[</bpt>CloudPool.MaxTasksPerComputeNode<ph id="ph1">][</ph>maxtasks_net<ept id="p1">]</ept> value of 16.</source>
          <target state="new">As an example of how this feature is valuable, consider the pool of Standard\_D14 nodes (in the example above) that is configured with a <bpt id="p1">[</bpt>CloudPool.MaxTasksPerComputeNode<ph id="ph1">][</ph>maxtasks_net<ept id="p1">]</ept> value of 16.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">[</bpt>CloudPool.TaskSchedulingPolicy<ph id="ph1">][</ph>task_schedule<ept id="p1">]</ept> is configured with a <bpt id="p2">[</bpt>ComputeNodeFillType<ph id="ph2">][</ph>fill_type<ept id="p2">]</ept> of <bpt id="p3">*</bpt>Pack<ept id="p3">*</ept>, it would maximize usage of all 16 cores of each node and allow an <bpt id="p4">[</bpt>autoscaling pool<ept id="p4">](./batch-automatic-scaling.md)</ept> to prune unused nodes from the pool (nodes without any tasks assigned).</source>
          <target state="new">If the <bpt id="p1">[</bpt>CloudPool.TaskSchedulingPolicy<ph id="ph1">][</ph>task_schedule<ept id="p1">]</ept> is configured with a <bpt id="p2">[</bpt>ComputeNodeFillType<ph id="ph2">][</ph>fill_type<ept id="p2">]</ept> of <bpt id="p3">*</bpt>Pack<ept id="p3">*</ept>, it would maximize usage of all 16 cores of each node and allow an <bpt id="p4">[</bpt>autoscaling pool<ept id="p4">](./batch-automatic-scaling.md)</ept> to prune unused nodes from the pool (nodes without any tasks assigned).</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This minimizes resource usage and saves money.</source>
          <target state="new">This minimizes resource usage and saves money.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Batch .NET example</source>
          <target state="new">Batch .NET example</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> API code snippet shows a request to create a pool that contains four large nodes with a maximum of four tasks per node.</source>
          <target state="new">This <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> API code snippet shows a request to create a pool that contains four large nodes with a maximum of four tasks per node.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It specifies a task scheduling policy that will fill each node with tasks prior to assigning tasks to another node in the pool.</source>
          <target state="new">It specifies a task scheduling policy that will fill each node with tasks prior to assigning tasks to another node in the pool.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information on adding pools by using the Batch .NET API, see <bpt id="p1">[</bpt>BatchClient.PoolOperations.CreatePool<ph id="ph1">][</ph>poolcreate_net<ept id="p1">]</ept></source>
          <target state="new">For more information on adding pools by using the Batch .NET API, see <bpt id="p1">[</bpt>BatchClient.PoolOperations.CreatePool<ph id="ph1">][</ph>poolcreate_net<ept id="p1">]</ept></target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Batch REST example</source>
          <target state="new">Batch REST example</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">[</bpt>Batch REST<ph id="ph1">][</ph>api_rest<ept id="p1">]</ept> API snippet shows a request to create a pool that contains two large nodes with a maximum of four tasks per node.</source>
          <target state="new">This <bpt id="p1">[</bpt>Batch REST<ph id="ph1">][</ph>api_rest<ept id="p1">]</ept> API snippet shows a request to create a pool that contains two large nodes with a maximum of four tasks per node.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more information on adding pools by using the REST API, see <bpt id="p1">[</bpt>Add a pool to an account<ph id="ph1">][</ph>rest_addpool<ept id="p1">]</ept></source>
          <target state="new">For more information on adding pools by using the REST API, see <bpt id="p1">[</bpt>Add a pool to an account<ph id="ph1">][</ph>rest_addpool<ept id="p1">]</ept></target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can set the <ph id="ph1">`maxTasksPerNode`</ph> element and <bpt id="p1">[</bpt>MaxTasksPerComputeNode<ph id="ph2">][</ph>maxtasks_net<ept id="p1">]</ept> property only at pool creation time.</source>
          <target state="new">You can set the <ph id="ph1">`maxTasksPerNode`</ph> element and <bpt id="p1">[</bpt>MaxTasksPerComputeNode<ph id="ph2">][</ph>maxtasks_net<ept id="p1">]</ept> property only at pool creation time.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>They cannot be modified after a pool has already been created.</source>
          <target state="new">They cannot be modified after a pool has already been created.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Explore the sample project</source>
          <target state="new">Explore the sample project</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Check out the <bpt id="p1">[</bpt>ParallelNodeTasks<ph id="ph1">][</ph>parallel_tasks_sample<ept id="p1">]</ept> project on GitHub.</source>
          <target state="new">Check out the <bpt id="p1">[</bpt>ParallelNodeTasks<ph id="ph1">][</ph>parallel_tasks_sample<ept id="p1">]</ept> project on GitHub.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It is a working code sample that illustrates the use of <bpt id="p1">[</bpt>CloudPool.MaxTasksPerComputeNode<ph id="ph1">][</ph>maxtasks_net<ept id="p1">]</ept></source>
          <target state="new">It is a working code sample that illustrates the use of <bpt id="p1">[</bpt>CloudPool.MaxTasksPerComputeNode<ph id="ph1">][</ph>maxtasks_net<ept id="p1">]</ept></target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This C# console application uses the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> library to create a pool with one or more compute nodes.</source>
          <target state="new">This C# console application uses the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> library to create a pool with one or more compute nodes.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It executes a configurable number of tasks on those nodes to simulate variable load.</source>
          <target state="new">It executes a configurable number of tasks on those nodes to simulate variable load.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Output from the application specifies which nodes executed each task.</source>
          <target state="new">Output from the application specifies which nodes executed each task.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The application also provides a summary of the job parameters and duration.</source>
          <target state="new">The application also provides a summary of the job parameters and duration.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The summary portion of the output from two different runs of the sample application appears below.</source>
          <target state="new">The summary portion of the output from two different runs of the sample application appears below.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The first execution of the sample application shows that with a single node in the pool and the default setting of one task per node, the job duration is over 30 minutes.</source>
          <target state="new">The first execution of the sample application shows that with a single node in the pool and the default setting of one task per node, the job duration is over 30 minutes.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The second run of the sample shows a significant decrease in job duration.</source>
          <target state="new">The second run of the sample shows a significant decrease in job duration.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This is because the pool was configured with four tasks per node, which allows for parallel task execution to complete the job in nearly a quarter of the time.</source>
          <target state="new">This is because the pool was configured with four tasks per node, which allows for parallel task execution to complete the job in nearly a quarter of the time.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The job durations in the summaries above do not include pool creation time.</source>
          <target state="new">The job durations in the summaries above do not include pool creation time.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Each of the jobs above was submitted to previously created pools whose compute nodes were in the <bpt id="p1">*</bpt>Idle<ept id="p1">*</ept> state at submission time.</source>
          <target state="new">Each of the jobs above was submitted to previously created pools whose compute nodes were in the <bpt id="p1">*</bpt>Idle<ept id="p1">*</ept> state at submission time.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Batch Explorer Heat Map</source>
          <target state="new">Batch Explorer Heat Map</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Azure Batch Explorer<ph id="ph1">][</ph>batch_explorer<ept id="p1">]</ept>, one of the Azure Batch <bpt id="p2">[</bpt>sample applications<ph id="ph2">][</ph>github_samples<ept id="p2">]</ept>, contains a <bpt id="p3">*</bpt>Heat Map<ept id="p3">*</ept> feature that provides visualization of task execution.</source>
          <target state="new">The <bpt id="p1">[</bpt>Azure Batch Explorer<ph id="ph1">][</ph>batch_explorer<ept id="p1">]</ept>, one of the Azure Batch <bpt id="p2">[</bpt>sample applications<ph id="ph2">][</ph>github_samples<ept id="p2">]</ept>, contains a <bpt id="p3">*</bpt>Heat Map<ept id="p3">*</ept> feature that provides visualization of task execution.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When you're executing the <bpt id="p1">[</bpt>ParallelTasks<ph id="ph1">][</ph>parallel_tasks_sample<ept id="p1">]</ept> sample application, you can use the Heat Map feature to easily visualize the execution of parallel tasks on each node.</source>
          <target state="new">When you're executing the <bpt id="p1">[</bpt>ParallelTasks<ph id="ph1">][</ph>parallel_tasks_sample<ept id="p1">]</ept> sample application, you can use the Heat Map feature to easily visualize the execution of parallel tasks on each node.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Batch Explorer Heat Map</source>
          <target state="new">Batch Explorer Heat Map</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Batch Explorer Heat Map showing a pool of four nodes, with each node currently executing four tasks</source>
          <target state="new">Batch Explorer Heat Map showing a pool of four nodes, with each node currently executing four tasks</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>api_net</source>
          <target state="new">api_net</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>api_rest</source>
          <target state="new">api_rest</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>batch_explorer</source>
          <target state="new">batch_explorer</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>cloudpool</source>
          <target state="new">cloudpool</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>enable_autoscaling</source>
          <target state="new">enable_autoscaling</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>fill_type</source>
          <target state="new">fill_type</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>github_samples</source>
          <target state="new">github_samples</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>maxtasks_net</source>
          <target state="new">maxtasks_net</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>rest_addpool</source>
          <target state="new">rest_addpool</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>parallel_tasks_sample</source>
          <target state="new">parallel_tasks_sample</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>poolcreate_net</source>
          <target state="new">poolcreate_net</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>task_schedule</source>
          <target state="new">task_schedule</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>